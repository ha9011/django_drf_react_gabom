[{"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\index.js":"1","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\App.js":"2","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\pages\\index.js":"3","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\gg\\test.js":"4","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\layout.js":"5","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\type.js":"6","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\first.js":"7","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\login.js":"8","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\join.js":"9","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\utils\\useLocalStorage.js":"10","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\store.js":"11","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\main.js":"12","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseMain.js":"13","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseRegist.js":"14","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseRecognize.js":"15","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseChecked.js":"16","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseWaitting.js":"17","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\calendar.js":"18","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\calendarInfo.js":"19","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\pages\\houseRecognizePage.js":"20","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseByHouseId.js":"21","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMain.js":"22","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelManage.js":"23","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelProfileCard.js":"24","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMenuList.js":"25","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMainContent.js":"26","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMyPlan.js":"27","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\myEditProfileForm.js":"28","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMyPlanList.js":"29","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelPlan.js":"30","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelDetailPlan.js":"31","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\findPlaceModal.js":"32","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\placeItem.js":"33","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\findPlaceList.js":"34","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\choicePlace.js":"35","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\detailPlaces.js":"36","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\collectPlaces.js":"37","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\collectPlaceItem.js":"38","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\kakaoMapPlace.js":"39","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\chatting.js":"40","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\travelMyFriend.js":"41","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\travelMyFriendSearch.js":"42","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\travelMyFriendInputId.js":"43","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\friendSearchRow.js":"44","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\travelMyFriendInputPhone.js":"45","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\myFriendApply.js":"46","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\myFriendApplyList.js":"47","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\friendToMeApplyList.js":"48","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\friendToMeApply.js":"49","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\myFriend.js":"50","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\myFriendList.js":"51","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\member.js":"52","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\noMemberFriend.js":"53","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\planMember.js":"54","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\chattingContent.js":"55","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\myChattingContent.js":"56","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\houseModal.js":"57","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\noticeItem.js":"58","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\reservationHouse.js":"59","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\qnaItem.js":"60","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\qnaReple.js":"61","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\dateChangeModal.js":"62","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\moveDetailPlan.js":"63","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMyHistory.js":"64","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\sharePlan.js":"65","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\sharePlanApplyItem.js":"66","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\shareList.js":"67","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminMain.js":"68","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminManage.js":"69","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminEvaluateList.js":"70","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\evaluatePlanItem.js":"71","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\showDetailPlan.js":"72","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminTravelDetail.js":"73","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminShowKaKao.js":"74","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminDetailPlaces.js":"75","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminCollectPlaces.js":"76","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminCollectPlaceItem.js":"77","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\evaluateHouseItem.js":"78","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\showDetailHouse.js":"79","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminHouseDetail.js":"80","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseReject.js":"81","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseEnd.js":"82","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseUpdate.js":"83","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\houseBook.js":"84","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\houseBookItem.js":"85","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\starScore.js":"86","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\noStarItem.js":"87","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\starItem.js":"88","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareModal.js":"89","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\sharePlanList.js":"90","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareShowDetatil.js":"91","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareTravelDetail.js":"92","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareKaKao.js":"93","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareKaKaoDetailPlace.js":"94","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareCollectPlaces.js":"95","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareCollectPlaceItem.js":"96","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareScoreModal.js":"97","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareScore.js":"98","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\lost.js":"99","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\check.js":"100","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\myEditPWForm.js":"101","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestSharePlanList.js":"102","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestSharePlanListAvg.js":"103","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareList.js":"104","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestSharePlanItem.js":"105","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareShowDetail.js":"106","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareTravelDetail.js":"107","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareKaKao.js":"108","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareCollectPlaces.js":"109","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestTravelHouseList.js":"110","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\friendInfo.js":"111","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminMainNotice.js":"112","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminNoticeItem.js":"113","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminQnaItem.js":"114","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminQnaReple.js":"115"},{"size":530,"mtime":1609043699112,"results":"116","hashOfConfig":"117"},{"size":86,"mtime":1608555977785,"results":"118","hashOfConfig":"119"},{"size":497,"mtime":1609940126535,"results":"120","hashOfConfig":"117"},{"size":107,"mtime":1608647908136,"results":"121","hashOfConfig":"119"},{"size":225,"mtime":1608648520075,"results":"122","hashOfConfig":"119"},{"size":1904,"mtime":1616628162478,"results":"123","hashOfConfig":"117"},{"size":1183,"mtime":1616677480469,"results":"124","hashOfConfig":"117"},{"size":4557,"mtime":1617002076500,"results":"125","hashOfConfig":"117"},{"size":4951,"mtime":1616682980927,"results":"126","hashOfConfig":"117"},{"size":2074,"mtime":1608906774171,"results":"127","hashOfConfig":"117"},{"size":6538,"mtime":1616730170477,"results":"128","hashOfConfig":"117"},{"size":3750,"mtime":1617086436514,"results":"129","hashOfConfig":"117"},{"size":1418,"mtime":1616109673011,"results":"130","hashOfConfig":"117"},{"size":13038,"mtime":1616118447932,"results":"131","hashOfConfig":"117"},{"size":7532,"mtime":1617005117163,"results":"132","hashOfConfig":"117"},{"size":933,"mtime":1616125997384,"results":"133","hashOfConfig":"117"},{"size":1997,"mtime":1616109718139,"results":"134","hashOfConfig":"117"},{"size":25995,"mtime":1617090360265,"results":"135","hashOfConfig":"117"},{"size":2021,"mtime":1617090639341,"results":"136","hashOfConfig":"117"},{"size":1275,"mtime":1616072923900,"results":"137","hashOfConfig":"117"},{"size":13856,"mtime":1617087928332,"results":"138","hashOfConfig":"117"},{"size":2135,"mtime":1617026542945,"results":"139","hashOfConfig":"117"},{"size":1404,"mtime":1616937755393,"results":"140","hashOfConfig":"117"},{"size":2747,"mtime":1616718380729,"results":"141","hashOfConfig":"117"},{"size":1060,"mtime":1616845916969,"results":"142","hashOfConfig":"117"},{"size":958,"mtime":1616982583129,"results":"143","hashOfConfig":"117"},{"size":16924,"mtime":1617002120264,"results":"144","hashOfConfig":"117"},{"size":7360,"mtime":1617002113582,"results":"145","hashOfConfig":"117"},{"size":5029,"mtime":1616632420718,"results":"146","hashOfConfig":"117"},{"size":3157,"mtime":1616729415762,"results":"147","hashOfConfig":"117"},{"size":4973,"mtime":1617027618087,"results":"148","hashOfConfig":"117"},{"size":8337,"mtime":1617002111213,"results":"149","hashOfConfig":"117"},{"size":519,"mtime":1611322195878,"results":"150","hashOfConfig":"117"},{"size":702,"mtime":1611579193997,"results":"151","hashOfConfig":"117"},{"size":2911,"mtime":1617002086604,"results":"152","hashOfConfig":"117"},{"size":3710,"mtime":1617002097225,"results":"153","hashOfConfig":"117"},{"size":723,"mtime":1616158465678,"results":"154","hashOfConfig":"117"},{"size":11296,"mtime":1616652716012,"results":"155","hashOfConfig":"117"},{"size":6047,"mtime":1616645619005,"results":"156","hashOfConfig":"117"},{"size":9730,"mtime":1617087512305,"results":"157","hashOfConfig":"117"},{"size":3267,"mtime":1616992962204,"results":"158","hashOfConfig":"117"},{"size":1989,"mtime":1616991261856,"results":"159","hashOfConfig":"117"},{"size":1424,"mtime":1613967862457,"results":"160","hashOfConfig":"117"},{"size":1858,"mtime":1617068923186,"results":"161","hashOfConfig":"117"},{"size":1466,"mtime":1613967863168,"results":"162","hashOfConfig":"117"},{"size":792,"mtime":1616991481819,"results":"163","hashOfConfig":"117"},{"size":1758,"mtime":1617068906884,"results":"164","hashOfConfig":"117"},{"size":2553,"mtime":1617068932343,"results":"165","hashOfConfig":"117"},{"size":929,"mtime":1616992316313,"results":"166","hashOfConfig":"117"},{"size":702,"mtime":1616991089333,"results":"167","hashOfConfig":"117"},{"size":1840,"mtime":1617068943774,"results":"168","hashOfConfig":"117"},{"size":3610,"mtime":1617086130463,"results":"169","hashOfConfig":"117"},{"size":2345,"mtime":1616730684387,"results":"170","hashOfConfig":"117"},{"size":908,"mtime":1614908591421,"results":"171","hashOfConfig":"117"},{"size":620,"mtime":1615169833361,"results":"172","hashOfConfig":"117"},{"size":265,"mtime":1615165300053,"results":"173","hashOfConfig":"117"},{"size":4536,"mtime":1617087856156,"results":"174","hashOfConfig":"117"},{"size":4650,"mtime":1617113094376,"results":"175","hashOfConfig":"117"},{"size":26270,"mtime":1617087837031,"results":"176","hashOfConfig":"117"},{"size":11138,"mtime":1617002084018,"results":"177","hashOfConfig":"117"},{"size":6332,"mtime":1615563559720,"results":"178","hashOfConfig":"117"},{"size":6844,"mtime":1617028447703,"results":"179","hashOfConfig":"117"},{"size":1621,"mtime":1615815136673,"results":"180","hashOfConfig":"117"},{"size":405,"mtime":1616479129964,"results":"181","hashOfConfig":"117"},{"size":3665,"mtime":1616638430326,"results":"182","hashOfConfig":"117"},{"size":2286,"mtime":1616638976305,"results":"183","hashOfConfig":"117"},{"size":4979,"mtime":1616638741136,"results":"184","hashOfConfig":"117"},{"size":470,"mtime":1615966919745,"results":"185","hashOfConfig":"117"},{"size":7027,"mtime":1617178884196,"results":"186","hashOfConfig":"117"},{"size":3548,"mtime":1616999539437,"results":"187","hashOfConfig":"117"},{"size":1462,"mtime":1617187146245,"results":"188","hashOfConfig":"117"},{"size":4710,"mtime":1617084704818,"results":"189","hashOfConfig":"117"},{"size":2643,"mtime":1615979131002,"results":"190","hashOfConfig":"117"},{"size":5860,"mtime":1617084822590,"results":"191","hashOfConfig":"117"},{"size":1385,"mtime":1616497542562,"results":"192","hashOfConfig":"117"},{"size":758,"mtime":1615978373807,"results":"193","hashOfConfig":"117"},{"size":1967,"mtime":1616497784303,"results":"194","hashOfConfig":"117"},{"size":1559,"mtime":1617187149735,"results":"195","hashOfConfig":"117"},{"size":4680,"mtime":1616052911406,"results":"196","hashOfConfig":"117"},{"size":8199,"mtime":1616044893309,"results":"197","hashOfConfig":"117"},{"size":4823,"mtime":1616109729813,"results":"198","hashOfConfig":"117"},{"size":2126,"mtime":1616109705694,"results":"199","hashOfConfig":"117"},{"size":17037,"mtime":1616125956053,"results":"200","hashOfConfig":"117"},{"size":3499,"mtime":1617069120995,"results":"201","hashOfConfig":"117"},{"size":4481,"mtime":1616640927218,"results":"202","hashOfConfig":"117"},{"size":1068,"mtime":1616476917661,"results":"203","hashOfConfig":"117"},{"size":594,"mtime":1616476994685,"results":"204","hashOfConfig":"117"},{"size":809,"mtime":1616476979793,"results":"205","hashOfConfig":"117"},{"size":6553,"mtime":1616634814641,"results":"206","hashOfConfig":"117"},{"size":1754,"mtime":1616505927399,"results":"207","hashOfConfig":"117"},{"size":1348,"mtime":1616501995269,"results":"208","hashOfConfig":"117"},{"size":1601,"mtime":1616634912434,"results":"209","hashOfConfig":"117"},{"size":5904,"mtime":1616499816344,"results":"210","hashOfConfig":"117"},{"size":1237,"mtime":1616938940716,"results":"211","hashOfConfig":"117"},{"size":559,"mtime":1616497723969,"results":"212","hashOfConfig":"117"},{"size":849,"mtime":1616498182000,"results":"213","hashOfConfig":"117"},{"size":950,"mtime":1616542396706,"results":"214","hashOfConfig":"117"},{"size":1068,"mtime":1616543816160,"results":"215","hashOfConfig":"117"},{"size":1146,"mtime":1616677433346,"results":"216","hashOfConfig":"117"},{"size":3089,"mtime":1617002074934,"results":"217","hashOfConfig":"117"},{"size":3566,"mtime":1617002115984,"results":"218","hashOfConfig":"117"},{"size":4560,"mtime":1616983010772,"results":"219","hashOfConfig":"117"},{"size":1642,"mtime":1617087900667,"results":"220","hashOfConfig":"117"},{"size":121,"mtime":1616847302159,"results":"221","hashOfConfig":"117"},{"size":1610,"mtime":1616937278466,"results":"222","hashOfConfig":"117"},{"size":1458,"mtime":1616938255636,"results":"223","hashOfConfig":"117"},{"size":1667,"mtime":1616938545679,"results":"224","hashOfConfig":"117"},{"size":5916,"mtime":1616938638490,"results":"225","hashOfConfig":"117"},{"size":605,"mtime":1616938909549,"results":"226","hashOfConfig":"117"},{"size":4450,"mtime":1617072803587,"results":"227","hashOfConfig":"117"},{"size":2357,"mtime":1616993112500,"results":"228","hashOfConfig":"117"},{"size":6493,"mtime":1617117953879,"results":"229","hashOfConfig":"117"},{"size":4695,"mtime":1617113244348,"results":"230","hashOfConfig":"117"},{"size":11191,"mtime":1617114464038,"results":"231","hashOfConfig":"117"},{"size":6357,"mtime":1617114388113,"results":"232","hashOfConfig":"117"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},"f69ztk",{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7u0o8b",{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"235"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"235"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"235"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"235"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"235"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"235"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"235"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"235"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"235"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"235"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"235"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"235"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"235"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"235"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"235"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"235"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"235"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"235"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"235"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"235"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"235"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"235"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"235"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"235"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"235"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"235"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"235"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"235"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"235"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"235"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"235"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"235"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"235"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"235"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"235"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"235"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"235"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"235"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"235"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"235"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"235"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"235"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"235"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"235"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"235"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"235"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"235"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"235"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"235"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"235"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"235"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"235"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"235"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"235"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"235"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"235"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"235"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"235"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"235"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"235"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"235"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"235"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"235"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"235"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"235"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"235"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"235"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"235"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"235"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"235"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"235"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"235"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"235"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"235"},"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\index.js",[],["538","539"],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\App.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\pages\\index.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\gg\\test.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\layout.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\type.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\first.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\login.js",["540","541"],"import React, { useState } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport Axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./login.scss\";\r\nimport {\r\n  useAppContext,\r\n  setToken,\r\n  setUserType,\r\n  setUserImg,\r\n  setUserName,\r\n  setUserPk,\r\n  setUserSocket,\r\n} from \"store\";\r\n\r\nconst HOUST_USER = \"/index/main/house/manage\";\r\nconst TRAVEL_USER = \"/index/main/travel/manage\";\r\nconst Admin = \"/index/main/admin/manage\";\r\nconst SERVER_URL = \"http://localhost:8000\";\r\n\r\nconst Login = () => {\r\n  const { store, dispatch, storeInfo, dispatchInfo } = useAppContext();\r\n  const history = useHistory();\r\n  //const [jwtToken, setJwtToken] = useLocalStorage(\"jwtToken\", \"\"); // key, 기본값\r\n  const [loginNotice, setLoginNotice] = useState(\"\");\r\n  const [userLogin, setUserLogin] = useState({});\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUserLogin((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submit click\");\r\n    console.log(userLogin);\r\n\r\n    async function fn() {\r\n      try {\r\n        let responseToken = await Axios.post(\r\n          \"http://localhost:8000/accounts/login/token/\",\r\n          userLogin\r\n        );\r\n        console.log(responseToken);\r\n        const jwtToken = responseToken.data.token;\r\n        console.log(\"jwtToken : \", jwtToken);\r\n        //setJwtToken(jwtToken); // 로컬저장\r\n        dispatch(setToken(jwtToken));\r\n        console.log(\"store1\", store);\r\n\r\n        const headers = { Authorization: `JWT ${jwtToken}` };\r\n        let responseUserInfo = await Axios.get(\r\n          \"http://localhost:8000/accounts/user/\",\r\n          { headers }\r\n        );\r\n\r\n        console.log(\"==responseUserInfo== : \", responseUserInfo);\r\n        //유저 타입\r\n        const userType = responseUserInfo.data.user_type;\r\n        dispatch(setUserType(userType));\r\n        //유저 사진\r\n        const userImg = SERVER_URL + responseUserInfo.data.profile.avatar;\r\n        console.log(\"=== usrImg url === : \" + userImg);\r\n        dispatch(setUserImg(userImg));\r\n        //유저 이름\r\n        const userName = responseUserInfo.data.name;\r\n        dispatch(setUserName(userName));\r\n\r\n        //유저 아이디\r\n        const userPk = responseUserInfo.data.pk;\r\n        dispatch(setUserPk(userPk));\r\n\r\n        // 유저 소켓\r\n        dispatch(setUserSocket(userPk));\r\n\r\n        if (userType === \"1\") {\r\n          history.push(TRAVEL_USER);\r\n        } else if (userType === \"2\") {\r\n          history.push(HOUST_USER);\r\n        } else if (userType === \"3\") {\r\n          history.push(Admin);\r\n        }\r\n      } catch (error) {\r\n        alert(\"로그인실패\");\r\n\r\n        console.log(error);\r\n        if (error.response) {\r\n          if (\r\n            error.response.data.non_field_errors[0] ===\r\n            \"Unable to log in with provided credentials.\"\r\n          ) {\r\n            setLoginNotice(\"아이디 혹은 비밀번호가 틀렸습니다.\");\r\n          }\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <div className=\"formArea\">\r\n      <Form onSubmit={onSubmit}>\r\n        <FormGroup>\r\n          <Label for=\"userId\">I D</Label>\r\n          <Input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            placeholder=\"input your userId\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"password\">Password</Label>\r\n          <Input\r\n            onChange={onChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"input your password\"\r\n          />\r\n        </FormGroup>\r\n        <div className=\"firstBtns\">\r\n          <Button type=\"submit\" className=\"firstBtn\" outline color=\"secondary\">\r\n            Sign In\r\n          </Button>\r\n          <Link to=\"/index/type\">\r\n            <Button className=\"firstBtn\" outline color=\"secondary\">\r\n              Sign Up\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"loginNoticeDiv\">\r\n          <span>{loginNotice}</span>\r\n        </div>\r\n      </Form>\r\n      <br></br>\r\n      <br></br>\r\n      <div>\r\n        <Link to={`/index/lost`}>\r\n          <span className=\"lostIdOrPW\">\r\n            아이디/비밀번호를 잊어버리셨나요..?\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\join.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\utils\\useLocalStorage.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\store.js",["542"],"import React, { createContext, useContext, useReducer } from \"react\";\r\nimport useReducerWithSideEffects, {\r\n  UpdateWithSideEffect,\r\n  Update,\r\n} from \"use-reducer-with-side-effects\";\r\nimport { getStorageItem, setStorageItem } from \"utils/useLocalStorage\";\r\n\r\nconst AppContext = createContext(); // default값\r\n\r\n// 리듀서는 순수함수로 메모리에만 저장이 되어야함\r\n// html 렌더링이나, 로컬 저장 같은 사이드 이펙트가 없어야한다.\r\n// 허나 우린 로컬에 토큰 값을 저장해야하기에, 사이드이펙트 효과가 필요하다 , 그래서 위에 import 했다\r\n//use-reducer-with-side-effects\r\n\r\n//  팁\r\n// 훅은 절대로 콜백 내에서는  훅을 할 수 없다.  주의하자\r\n// 훅은 순서대로 실행되어야한다,  비동기를 위한 콜백은 안됨\r\n\r\n// 이게 리덕스(사가) 쓰는 이유\r\nconst reducer = (prevState, action) => {\r\n  console.log(\"==reducer==\");\r\n  console.log(action);\r\n  const { type } = action;\r\n  if (type === SET_TOKEN) {\r\n    const { payload: jwtToken } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      jwtToken,\r\n      isAuthenticated: true,\r\n    };\r\n\r\n    //1인자 -> state 저장값, 2인자 -> side에 할 함수\r\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\r\n      setStorageItem(\"jwtToken\", jwtToken); // 키 벨류   // 사이드 이펙트를 동작시킬 함수\r\n    });\r\n  } else if (type === DELETE_TOKEN) {\r\n    const newState = {\r\n      ...prevState,\r\n      jwtToken: \"\",\r\n      isAuthenticated: false,\r\n    };\r\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\r\n      setStorageItem(\"jwtToken\", \"\"); // 키 벨류   // 사이드 이펙트를 동작시킬 함수\r\n    });\r\n  } else if (type === SET_USERTYPE) {\r\n    console.log(\"reduce - SET_USERTYPE\");\r\n    const { payload: userType } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      userType,\r\n    };\r\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\r\n      setStorageItem(\"userType\", userType); // 키 벨류   // 사이드 이펙트를 동작시킬 함수\r\n    });\r\n  } else if (type === SET_USERIMG) {\r\n    console.log(\"reduce - SET_USERIMG\");\r\n    const { payload: userImg } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      userImg,\r\n    };\r\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\r\n      setStorageItem(\"userImg\", userImg); // 키 벨류   // 사이드 이펙트를 동작시킬 함수\r\n    });\r\n  } else if (type === SET_USERNAME) {\r\n    console.log(\"reduce - SET_USERNAME\");\r\n    const { payload: userName } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      userName,\r\n    };\r\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\r\n      setStorageItem(\"userName\", userName); // 키 벨류   // 사이드 이펙트를 동작시킬 함수\r\n    });\r\n  } else if (type === SET_USERPK) {\r\n    console.log(\"reduce - SET_USERPK\");\r\n    const { payload: userPk } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      userPk,\r\n    };\r\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\r\n      setStorageItem(\"userPk\", userPk); // 키 벨류   // 사이드 이펙트를 동작시킬 함수\r\n    });\r\n  } else if (type === SET_USER_SOCKET) {\r\n    console.log(\"reduce - SET_USER_SOCKET\");\r\n    const { payload: userPk } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      userSocket: new WebSocket(\r\n        \"ws://127.0.0.1:8000/ws/chat/main/\" + userPk + \"/\"\r\n      ),\r\n    };\r\n\r\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\r\n      setStorageItem(\r\n        \"userSocket\",\r\n        new WebSocket(\"ws://127.0.0.1:8000/ws/chat/main/\" + userPk + \"/\")\r\n      ); // 키 벨류   // 사이드 이펙트를 동작시킬 함수\r\n    });\r\n  }\r\n\r\n  return prevState;\r\n};\r\n\r\nconst reducerInfo = (prevState, action) => {\r\n  console.log(\"==action : \", action);\r\n  const { type } = action;\r\n  if (type === SET_USERTYPE) {\r\n    console.log(\"reduce - SET_USERTYPE\");\r\n    const { payload: userType } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      userType,\r\n    };\r\n    return newState;\r\n  } else if (type === SET_USERIMG) {\r\n    console.log(\"reduce - SET_USERIMG\");\r\n    const { payload: userImg } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      userImg,\r\n    };\r\n    console.log(newState);\r\n    return newState;\r\n  } else if (type === SET_USERNAME) {\r\n    console.log(\"reduce - SET_USERNAME\");\r\n    const { payload: userName } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      userName,\r\n    };\r\n    console.log(newState);\r\n    return newState;\r\n  }\r\n\r\n  return prevState;\r\n};\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const jwtToken = getStorageItem(\"jwtToken\", \"\"); // jwtToken이 있으면 가져오고 없으면 \"\"\r\n  const userType = getStorageItem(\"userType\", \"\");\r\n  const userImg = getStorageItem(\"userImg\", \"\");\r\n  const userName = getStorageItem(\"userName\", \"\");\r\n  const userPk = getStorageItem(\"userPk\", \"\");\r\n\r\n  const [store, dispatch] = useReducerWithSideEffects(reducer, {\r\n    jwtToken,\r\n    isAuthenticated: jwtToken.length > 0,\r\n    userType: userType,\r\n    userImg: userImg,\r\n    userName: userName,\r\n    userPk: userPk,\r\n  });\r\n\r\n  const [storeInfo, dispatchInfo] = useReducer(reducerInfo, {\r\n    userType: \"\",\r\n    userImg: \"\",\r\n    userName: \"\",\r\n  });\r\n\r\n  return (\r\n    <AppContext.Provider value={{ store, dispatch, storeInfo, dispatchInfo }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\n// ACTION\r\n\r\nconst SET_TOKEN = \"APP/SET_TOKEN\";\r\nconst DELETE_TOKEN = \"APP/DELETE_TOKEN\";\r\nconst SET_USERTYPE = \"APP/SET_USERTYPE\";\r\nconst SET_USERIMG = \"APP/SET_USERIMG\";\r\nconst SET_USERNAME = \"APP/SET_USERNAME\";\r\nconst SET_USERPK = \"APP/SET_USERPK\";\r\nconst SET_USER_SOCKET = \"APP/SET_USER_SOCKET\";\r\n\r\n// ACTION CREATORS\r\n\r\nexport const setToken = (token) => ({ type: SET_TOKEN, payload: token }); // dispatch(setToken(jwtToken))\r\nexport const deleteToken = () => ({ type: DELETE_TOKEN });\r\nexport const setUserType = (userType) => ({\r\n  type: SET_USERTYPE,\r\n  payload: userType,\r\n});\r\nexport const setUserImg = (userImg) => ({\r\n  type: SET_USERIMG,\r\n  payload: userImg,\r\n});\r\n\r\nexport const setUserName = (userName) => ({\r\n  type: SET_USERNAME,\r\n  payload: userName,\r\n});\r\n\r\nexport const setUserPk = (userPk) => ({\r\n  type: SET_USERPK,\r\n  payload: userPk,\r\n});\r\n\r\nexport const setUserSocket = (userPk) => ({\r\n  type: SET_USER_SOCKET,\r\n  payload: userPk,\r\n});\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\main.js",["543","544","545","546","547","548","549","550"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  useAppContext,\r\n  setToken,\r\n  deleteToken,\r\n  setUserType,\r\n  setUserImg,\r\n  setUserName,\r\n} from \"store\";\r\nimport HouseMain from \"./house/houseMain\";\r\nimport mainLogo from \"public/img/logo2.png\";\r\nimport { getStorageItem, setStorageItem } from \"utils/useLocalStorage\";\r\nimport \"./main.scss\";\r\nimport TravelMain from \"./travel/travelMain\";\r\nimport AdminMain from \"./admin/adminMain\";\r\nimport { Tooltip } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IoIosLogOut } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Main = () => {\r\n  const { store, dispatch, storeInfo, dispatchInfo } = useAppContext();\r\n  const history = useHistory();\r\n  const [userType, setLoginUserType] = useState();\r\n  // 여행객 전용\r\n  const [socketMsgT, setSocketMsgT] = useState(false);\r\n  // 숙소업체 전용\r\n  const [socketMsgH, setSocketMsgH] = useState(false);\r\n  // 메세지\r\n  const [socketMsg, setSocketMsg] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const socketToggle = () => setShow(!show);\r\n\r\n  console.log(\"==main==\", store);\r\n\r\n  // 알림 소켓\r\n  //message:\r\n  // message: \"하동투님께서 여행에 초대하셨습니다.\"\r\n  // move_msg: \"이동\"\r\n  // planId: \"31\"\r\n  // userPk: 8\r\n  // <Route path=\"/index/main/travel/manage\" component={TravelManage} />\r\n  store.userSocket.onmessage = function (e) {\r\n    let data = JSON.parse(e.data);\r\n    console.log(\"전송데이터 요청 \", data);\r\n    setSocketMsg(data.message.message);\r\n    setShow(true);\r\n  };\r\n\r\n  //const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const userType = getStorageItem(\"userType\");\r\n\r\n    setLoginUserType(userType);\r\n\r\n    userType === \"1\"\r\n      ? setSocketMsgT(true)\r\n      : userType === \"2\" && setSocketMsgH(true);\r\n\r\n    //console.log(\"==mainSocket===\", mainSocket);\r\n  }, []);\r\n\r\n  const logoutEv = () => {\r\n    alert(\"로그아웃\");\r\n    dispatch(setUserType(\"\"));\r\n    dispatch(setUserImg(\"\"));\r\n    dispatch(setUserName(\"\"));\r\n    dispatch(deleteToken());\r\n    history.push(\"/index\");\r\n  };\r\n  return (\r\n    <div className=\"mainPageMain\">\r\n      <div className=\"mainHeader\">\r\n        <img src={mainLogo} alt=\"메인이미지\" />\r\n        <div className=\"logoutDiv\">\r\n          <p>\r\n            <span\r\n              style={{ textDecoration: \"underline\" }}\r\n              id=\"DisabledAutoHideExamplee\"\r\n            >\r\n              <IoIosLogOut className=\"logout\" onClick={logoutEv} />\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"mainContainer\">\r\n        {userType === \"1\" ? ( // 여행객\r\n          <TravelMain\r\n            socketMsgT={socketMsgT}\r\n            socketMsg={socketMsg}\r\n            show={show}\r\n            socketToggle={socketToggle}\r\n          />\r\n        ) : userType === \"2\" ? ( // 숙소쉐어\r\n          <HouseMain></HouseMain>\r\n        ) : (\r\n          <AdminMain></AdminMain>\r\n        )}\r\n      </div>\r\n      <div className=\"mainFooter\">\r\n        <div className=\"footerContext\">\r\n          주식회사 가봄 ｜ 대표 하동원 사업자 등록번호 023-123-4422 통신판매업\r\n          신고번호 2017-성남분당-0275 경기도 성남시 분당구 판교역로 14번길 16,\r\n          3층 항공, 숙소 및 투어·티켓 문의 1588-2539 help@gabom-corp.com 서비스\r\n          이용약관 | 개인정보 처리방침 | 회사 소개 (주)가봄 통신판매중개자로서\r\n          통신판매의 당사자가 아니며 상품 거래정보 및 거래 등에 대해 책임을 지지\r\n          않습니다.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseMain.js",["551"],"import React from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport HouseRegist from \"./houseRegist\";\r\nimport HouseRecognizePage from \"pages/houseRecognizePage\";\r\nimport HouseByHouseId from \"./houseByHouseId\";\r\nimport \"./houseMain.scss\";\r\nimport HouseUpdate from \"./houseUpdate\";\r\n\r\nconst HouseMain = () => {\r\n  let history = useHistory();\r\n  const onClickMoveManage = () => {\r\n    history.push(\"/index/main/house/manage\");\r\n  };\r\n  const onClickMoveNotice = () => {\r\n    history.push(\"/index/main/travel/notice\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"houseNav\">\r\n        <div className=\"houseMenu\" onClick={onClickMoveManage}>\r\n          관리\r\n        </div>\r\n        <div className=\"houseMenu\" onClick={onClickMoveNotice}>\r\n          공지\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Route\r\n          exact\r\n          path=\"/index/main/house/manage\"\r\n          component={HouseRecognizePage}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/index/main/house/manage/info/:pk\"\r\n          component={HouseByHouseId}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/index/main/house/register\"\r\n          component={HouseRegist}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/index/main/house/update/:pk/:type\"\r\n          component={HouseUpdate}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HouseMain;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseRegist.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseRecognize.js",["552","553"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HouseChecked from \"./houseChecked\";\r\nimport HouseWaitting from \"./houseWaitting\";\r\nimport {\r\n  Badge,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Modal,\r\n} from \"reactstrap\";\r\nimport \"./houseRecognize.scss\";\r\nimport Calendar from \"./calendar\";\r\nimport HouseReject from \"./houseReject\";\r\nimport HouseEnd from \"./houseEnd\";\r\nconst HouseRecognize = ({ house, setHouse }) => {\r\n  let history = useHistory();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [dateInfo, setDateInfo] = useState();\r\n  const [housePk, setHousePk] = useState();\r\n\r\n  const toggle = (sDay, eDay, pk) => {\r\n    console.log(\"toggle---\");\r\n    console.log(\"startDate11 ---: \" + sDay);\r\n    console.log(\"endDate11 ---: \" + eDay);\r\n    let calendarInfo = getDateRange(sDay, eDay);\r\n\r\n    setHousePk(pk);\r\n    setDateInfo(calendarInfo);\r\n    setModal(!modal);\r\n    console.log(modal);\r\n  };\r\n  console.log(\".HouseRecognize\", house);\r\n\r\n  const moveRegiHouse = () => {\r\n    history.push(\"/index/main/house/register\");\r\n  };\r\n  return (\r\n    <>\r\n      <br></br>\r\n      <div className=\"regiHouse\">\r\n        <Button color=\"primary\" onClick={moveRegiHouse}>\r\n          숙소 등록하기\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <div className=\"houseInfoFlexDiv\">\r\n          <div className=\"houseInfoDiv\">\r\n            <div className=\"houseInfoManage\">\r\n              <Button color=\"primary\">\r\n                관리\r\n                <Badge color=\"secondary\">\r\n                  {\r\n                    house.filter(\r\n                      (item) =>\r\n                        item[\"is_active\"] !== 1 ||\r\n                        !getCurrentDateCompare(item[\"endDate\"])\r\n                    ).length\r\n                  }\r\n                </Badge>\r\n              </Button>\r\n            </div>\r\n\r\n            <br />\r\n            <div className=\"houseWaitList\">\r\n              <ListGroup>\r\n                {house.map((item) =>\r\n                  item[\"is_active\"] === 0 ? (\r\n                    <ListGroupItem tag=\"button\" action>\r\n                      <HouseWaitting\r\n                        key={item.pk}\r\n                        info={item}\r\n                        setHouse={setHouse}\r\n                        house={house}\r\n                      />\r\n                    </ListGroupItem>\r\n                  ) : item[\"is_active\"] === 2 ? (\r\n                    <ListGroupItem tag=\"button\" action>\r\n                      <HouseReject\r\n                        key={item.pk}\r\n                        info={item}\r\n                        setHouse={setHouse}\r\n                        house={house}\r\n                      />\r\n                    </ListGroupItem>\r\n                  ) : (\r\n                    !getCurrentDateCompare(item[\"endDate\"]) && (\r\n                      <ListGroupItem tag=\"button\" action>\r\n                        <HouseEnd\r\n                          key={item.pk}\r\n                          info={item}\r\n                          setHouse={setHouse}\r\n                          house={house}\r\n                        />\r\n                      </ListGroupItem>\r\n                    )\r\n                  )\r\n                )}\r\n              </ListGroup>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"houseInfoDiv\">\r\n            <div>\r\n              <Button color=\"primary\">\r\n                운영중\r\n                <Badge color=\"secondary\">\r\n                  {\r\n                    house.filter(\r\n                      (item) =>\r\n                        item[\"is_active\"] === 1 &&\r\n                        getCurrentDateCompare(item[\"endDate\"])\r\n                    ).length\r\n                  }\r\n                </Badge>\r\n              </Button>\r\n            </div>\r\n            <br />\r\n            <div className=\"houseWaitList\">\r\n              <ListGroup>\r\n                {house.map(\r\n                  (item) =>\r\n                    item[\"is_active\"] === 1 &&\r\n                    getCurrentDateCompare(item[\"endDate\"]) && (\r\n                      <ListGroupItem tag=\"button\" action>\r\n                        <HouseChecked\r\n                          key={item.pk}\r\n                          info={item}\r\n                          toggle={toggle}\r\n                        />\r\n                      </ListGroupItem>\r\n                    )\r\n                )}\r\n              </ListGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle} className=\"calendarModal\">\r\n          <ModalHeader toggle={toggle}>운영 켈린더</ModalHeader>\r\n          <ModalBody>\r\n            <Calendar info={dateInfo} housePk={housePk} />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction getDateRange(startDate, endDate) {\r\n  let objDate = {};\r\n  let dateMove = new Date(startDate);\r\n\r\n  let strDate = startDate;\r\n\r\n  let nth = 1;\r\n  let firstDay;\r\n  if (startDate === endDate) {\r\n  } else {\r\n    let strYM;\r\n    let listDate1 = {};\r\n    while (strDate < endDate) {\r\n      strDate = dateMove.toISOString().slice(0, 10);\r\n\r\n      if (strYM !== dateMove.toISOString().slice(0, 7)) {\r\n        if (strYM === undefined) {\r\n          strYM = dateMove.toISOString().slice(0, 7);\r\n          listDate1 = {};\r\n          continue;\r\n        }\r\n        dateMove.setDate(dateMove.getDate() - 1);\r\n\r\n        let yyyymm = dateMove.toISOString().slice(0, 7);\r\n        let monthInfo = {\r\n          sDate: yyyymm + \"-\" + firstDay,\r\n          eDate: yyyymm + \"-\" + dateMove.toISOString().slice(8, 10),\r\n        };\r\n        listDate1[\"monthInfo\"] = monthInfo;\r\n        objDate[strYM] = listDate1;\r\n\r\n        listDate1 = {};\r\n\r\n        nth = 1;\r\n        dateMove.setDate(dateMove.getDate() + 1);\r\n        strYM = dateMove.toISOString().slice(0, 7);\r\n      }\r\n\r\n      if (strYM === undefined || strYM === dateMove.toISOString().slice(0, 7)) {\r\n        let result = {};\r\n\r\n        let date = new Date(strDate);\r\n        let nthDay = date.getDay();\r\n        let nthWeek = parseInt((6 + date.getDate() - nthDay) / 7) + 1;\r\n        result[\"nthWeek\"] = nthWeek;\r\n        result[\"nthDay\"] = nthDay;\r\n        result[\"day\"] = dateMove.toISOString().slice(8, 10);\r\n        if (nth === 1) {\r\n          firstDay = dateMove.toISOString().slice(8, 10);\r\n        }\r\n        nth++;\r\n        let key = (nthWeek - 1) * 7 + nthDay + 1;\r\n\r\n        listDate1[key] = result;\r\n        strYM = dateMove.toISOString().slice(0, 7);\r\n      }\r\n\r\n      if (strDate === endDate) {\r\n        let yyyymm = dateMove.toISOString().slice(0, 7);\r\n        let monthInfo = {\r\n          sDate: yyyymm + \"-\" + firstDay,\r\n          eDate: yyyymm + \"-\" + dateMove.toISOString().slice(8, 10),\r\n        };\r\n        listDate1[monthInfo] = monthInfo;\r\n        objDate[strYM] = listDate1;\r\n      }\r\n      dateMove.setDate(dateMove.getDate() + 1);\r\n    }\r\n  }\r\n\r\n  return objDate;\r\n}\r\n\r\nfunction getCurrentDateCompare(choiceDate) {\r\n  console.log(\"==getCurrentDateCompare==\");\r\n  let date1 = new Date();\r\n  let date2 = new Date(choiceDate);\r\n  // 현재 날짜와 같거나 적을 경우, 더 이상 운영할 수 잇는 날짜가 아니다\r\n  if (date2 <= date1) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default HouseRecognize;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseChecked.js",["554","555"],"import React, { useState } from \"react\";\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./houseWaitting.scss\";\r\nconst HouseChecked = ({ info, toggle }) => {\r\n  const { startDate, endDate } = info;\r\n  console.log(\"startDate : \" + startDate);\r\n  console.log(\"endDate : \" + endDate);\r\n  console.log(\"info : \", info);\r\n  return (\r\n    <div className=\"houseWaittingListItem\">\r\n      <img\r\n        src={\"http://localhost:8000\" + info.mainImage}\r\n        alt=\"mainImg\"\r\n        width=\"100px\"\r\n        height=\"80px\"\r\n      />\r\n      <Link to={`/index/main/house/manage/info/${info.pk}`}>\r\n        <span className=\"waittingHouseName\">{info.houseName}</span>\r\n      </Link>\r\n\r\n      <Button\r\n        color=\"success\"\r\n        onClick={() => toggle(startDate, endDate, info.pk)}\r\n      >\r\n        예약자 확인\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nexport default React.memo(HouseChecked);\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseWaitting.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\calendar.js",["556","557"],"import React, { useState, useEffect } from \"react\";\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport { BsCaretLeftFill, BsCaretRightFill } from \"react-icons/bs\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./calendar.scss\";\r\n\r\nimport CalendarInfo from \"./calendarInfo\";\r\nconst Calendar = ({ info, housePk }) => {\r\n  console.log(\"======Calendar=======\");\r\n  const [choiceMonth, setChoiceMonth] = useState({});\r\n  const [currentMonth, setCurrentMonth] = useState();\r\n  const [reservationCount, setReservationCount] = useState([]);\r\n  const { store } = useAppContext();\r\n  const [reservationList, setReservationList] = useState([]);\r\n  const [reservationDate, setReservationDate] = useState(\"\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  console.log(\"====reservationCount===\");\r\n  console.log(reservationCount);\r\n\r\n  useEffect(() => {\r\n    let today = new Date();\r\n    let year = today.getFullYear();\r\n    let month =\r\n      today.getMonth() + 1 < 10\r\n        ? \"0\" + String(today.getMonth() + 1)\r\n        : today.getMonth() + 1;\r\n    if (info.hasOwnProperty(year + \"-\" + month)) {\r\n      console.log(\"포함\");\r\n      console.log(info[year + \"-\" + month]);\r\n      console.log(info);\r\n      setChoiceMonth(info[year + \"-\" + month]);\r\n      setCurrentMonth(year + \"-\" + month);\r\n      console.log(\"================ \" + month + \" 월\");\r\n      console.log(choiceMonth);\r\n    } else {\r\n      console.log(\"미포함\");\r\n      console.log(info[month]);\r\n      console.log(info);\r\n      const keys = Object.keys(info);\r\n      setChoiceMonth(info[keys[0]]);\r\n      setCurrentMonth(info[keys[0]]);\r\n    }\r\n    const { startDate, endDate } = info;\r\n    console.log(\"startDate : \" + startDate);\r\n    console.log(\"endDate : \" + endDate);\r\n\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/houses/calendar-count/${\r\n            info[year + \"-\" + month].monthInfo.sDate\r\n          }/${info[year + \"-\" + month].monthInfo.eDate}/${housePk}`,\r\n          config\r\n        );\r\n        console.log(response);\r\n        console.log(\r\n          \"reservationCountFunc : \",\r\n          reservationCountFunc(response.data)[\"0\"]\r\n        );\r\n        setReservationCount(reservationCountFunc(response.data, housePk));\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n\r\n  const onLeftMoveMonth = () => {\r\n    console.log(\"==onLeftMoveMonth==\");\r\n    console.log(choiceMonth);\r\n    const keys = Object.keys(info);\r\n\r\n    if (keys[0] === currentMonth) {\r\n      return;\r\n    } else {\r\n      const idx = keys.indexOf(currentMonth) - 1;\r\n      console.log(\"==onLeftMoveMonthzzz==\");\r\n\r\n      async function fn() {\r\n        try {\r\n          // 전송\r\n          let response = await Axios.get(\r\n            `http://localhost:8000/houses/calendar-count/${\r\n              info[keys[idx]].monthInfo.sDate\r\n            }/${info[keys[idx]].monthInfo.eDate}/${housePk}`,\r\n            config\r\n          );\r\n          console.log(response);\r\n          console.log(response);\r\n          setReservationCount(reservationCountFunc(response.data, housePk));\r\n          setChoiceMonth(info[keys[idx]]);\r\n          setCurrentMonth(keys[idx]);\r\n        } catch (error) {\r\n          alert(\"플랜불러오기 실패\");\r\n          console.log(error);\r\n          if (error.response) {\r\n            console.log(error.response);\r\n          }\r\n        }\r\n      }\r\n\r\n      fn();\r\n    }\r\n    console.log(\"========onLeftMoveMonth======== \" + currentMonth + \" 월\");\r\n    console.log(choiceMonth);\r\n  };\r\n  const onRightMoveMonth = () => {\r\n    const keys = Object.keys(info);\r\n    if (keys[keys.length - 1] === currentMonth) {\r\n      return;\r\n    } else {\r\n      const idx = keys.indexOf(currentMonth) + 1;\r\n      console.log(\"==onLeftMoveMonthzzzzrrr==\");\r\n\r\n      async function fn() {\r\n        try {\r\n          // 전송\r\n          let response = await Axios.get(\r\n            `http://localhost:8000/houses/calendar-count/${\r\n              info[keys[idx]].monthInfo.sDate\r\n            }/${info[keys[idx]].monthInfo.eDate}/${housePk}`,\r\n            config\r\n          );\r\n          console.log(response);\r\n          setReservationCount(reservationCountFunc(response.data, housePk));\r\n          setChoiceMonth(info[keys[idx]]);\r\n          setCurrentMonth(keys[idx]);\r\n        } catch (error) {\r\n          alert(\"플랜불러오기 실패\");\r\n          console.log(error);\r\n          if (error.response) {\r\n            console.log(error.response);\r\n          }\r\n        }\r\n      }\r\n\r\n      fn();\r\n    }\r\n    console.log(\"========onRightMoveMonth======== \" + currentMonth + \" 월\");\r\n    console.log(choiceMonth);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"calendarContainer\">\r\n        <div className=\"monthDiv\">\r\n          <BsCaretLeftFill onClick={onLeftMoveMonth} />\r\n          <div>{currentMonth}</div>\r\n          <BsCaretRightFill onClick={onRightMoveMonth} />\r\n        </div>\r\n        <div className=\"yoilList\">\r\n          <div className=\"yoil sunDay\">일요일</div>\r\n          <div className=\"yoil \">월요일</div>\r\n          <div className=\"yoil \">화요일</div>\r\n          <div className=\"yoil \">수요일</div>\r\n          <div className=\"yoil \">목요일</div>\r\n          <div className=\"yoil \">금요일</div>\r\n          <div className=\"yoil satDay\">토요일</div>\r\n        </div>\r\n        <div className=\"weeks week1\">\r\n          <div className=\"days dayBox1\">\r\n            {choiceMonth[\"1\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"1\"]}\r\n                count={reservationCount[\"1\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox2\">\r\n            {choiceMonth[\"2\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"2\"]}\r\n                count={reservationCount[\"2\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox3\">\r\n            {choiceMonth[\"3\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"3\"]}\r\n                count={reservationCount[\"3\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox4\">\r\n            {choiceMonth[\"4\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"4\"]}\r\n                count={reservationCount[\"4\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox5\">\r\n            {choiceMonth[\"5\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"5\"]}\r\n                count={reservationCount[\"5\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox6\">\r\n            {choiceMonth[\"6\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"6\"]}\r\n                count={reservationCount[\"6\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox7\">\r\n            {choiceMonth[\"7\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"7\"]}\r\n                count={reservationCount[\"7\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"weeks week2\">\r\n          <div className=\"days dayBox1\">\r\n            {choiceMonth[\"8\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"8\"]}\r\n                count={reservationCount[\"8\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox2\">\r\n            {choiceMonth[\"9\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"9\"]}\r\n                count={reservationCount[\"9\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox3\">\r\n            {choiceMonth[\"10\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"10\"]}\r\n                count={reservationCount[\"10\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox4\">\r\n            {choiceMonth[\"11\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"11\"]}\r\n                count={reservationCount[\"11\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox5\">\r\n            {choiceMonth[\"12\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"12\"]}\r\n                count={reservationCount[\"12\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox6\">\r\n            {choiceMonth[\"13\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"13\"]}\r\n                count={reservationCount[\"13\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox7\">\r\n            {choiceMonth[\"14\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"14\"]}\r\n                count={reservationCount[\"14\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"weeks week3\">\r\n          <div className=\"days dayBox1\">\r\n            {choiceMonth[\"15\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"15\"]}\r\n                count={reservationCount[\"15\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox2\">\r\n            {choiceMonth[\"16\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"16\"]}\r\n                count={reservationCount[\"16\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox3\">\r\n            {choiceMonth[\"17\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"17\"]}\r\n                count={reservationCount[\"17\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox4\">\r\n            {choiceMonth[\"18\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"18\"]}\r\n                count={reservationCount[\"18\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox5\">\r\n            {choiceMonth[\"19\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"19\"]}\r\n                count={reservationCount[\"19\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox6\">\r\n            {choiceMonth[\"20\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"20\"]}\r\n                count={reservationCount[\"20\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox7\">\r\n            {choiceMonth[\"21\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"21\"]}\r\n                count={reservationCount[\"21\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"weeks week4\">\r\n          <div className=\"days dayBox1\">\r\n            {choiceMonth[\"22\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"22\"]}\r\n                count={reservationCount[\"22\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox2\">\r\n            {choiceMonth[\"23\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"23\"]}\r\n                count={reservationCount[\"23\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox3\">\r\n            {choiceMonth[\"24\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"24\"]}\r\n                count={reservationCount[\"24\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox4\">\r\n            {choiceMonth[\"25\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"25\"]}\r\n                count={reservationCount[\"25\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox5\">\r\n            {choiceMonth[\"26\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"26\"]}\r\n                count={reservationCount[\"26\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox6\">\r\n            {choiceMonth[\"27\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"27\"]}\r\n                count={reservationCount[\"27\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox7\">\r\n            {choiceMonth[\"28\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"28\"]}\r\n                count={reservationCount[\"28\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"weeks week5\">\r\n          <div className=\"days dayBox1\">\r\n            {choiceMonth[\"29\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"29\"]}\r\n                count={reservationCount[\"29\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox2\">\r\n            {choiceMonth[\"30\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"30\"]}\r\n                count={reservationCount[\"30\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox3\">\r\n            {choiceMonth[\"31\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"31\"]}\r\n                count={reservationCount[\"31\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox4\">\r\n            {choiceMonth[\"32\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"32\"]}\r\n                count={reservationCount[\"32\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox5\">\r\n            {choiceMonth[\"33\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"33\"]}\r\n                count={reservationCount[\"33\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox6\">\r\n            {choiceMonth[\"34\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"34\"]}\r\n                count={reservationCount[\"34\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n          <div className=\"days dayBox7\">\r\n            {choiceMonth[\"35\"] !== undefined ? (\r\n              <CalendarInfo\r\n                dayInfo={choiceMonth[\"35\"]}\r\n                count={reservationCount[\"35\"]}\r\n                setReservationList={setReservationList}\r\n                setReservationDate={setReservationDate}\r\n              />\r\n            ) : (\r\n              <div className=\"emptyDay\"></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {choiceMonth[\"36\"] && (\r\n          <div className=\"weeks week6\">\r\n            <div className=\"days dayBox1\">\r\n              {choiceMonth[\"36\"] !== undefined ? (\r\n                <CalendarInfo\r\n                  dayInfo={choiceMonth[\"36\"]}\r\n                  count={reservationCount[\"36\"]}\r\n                  setReservationList={setReservationList}\r\n                  setReservationDate={setReservationDate}\r\n                />\r\n              ) : (\r\n                <div className=\"emptyDay\"></div>\r\n              )}\r\n            </div>\r\n            <div className=\"days dayBox2\">\r\n              {choiceMonth[\"37\"] !== undefined ? (\r\n                <CalendarInfo\r\n                  dayInfo={choiceMonth[\"37\"]}\r\n                  count={reservationCount[\"37\"]}\r\n                  setReservationList={setReservationList}\r\n                  setReservationDate={setReservationDate}\r\n                />\r\n              ) : (\r\n                <div className=\"emptyDay\"></div>\r\n              )}\r\n            </div>\r\n            <div className=\"days dayBox3\">\r\n              {choiceMonth[\"38\"] !== undefined ? (\r\n                <CalendarInfo\r\n                  dayInfo={choiceMonth[\"38\"]}\r\n                  count={reservationCount[\"38\"]}\r\n                  setReservationList={setReservationList}\r\n                  setReservationDate={setReservationDate}\r\n                />\r\n              ) : (\r\n                <div className=\"emptyDay\"></div>\r\n              )}\r\n            </div>\r\n            <div className=\"days dayBox4\">\r\n              {choiceMonth[\"39\"] !== undefined ? (\r\n                <CalendarInfo\r\n                  dayInfo={choiceMonth[\"39\"]}\r\n                  count={reservationCount[\"39\"]}\r\n                  setReservationList={setReservationList}\r\n                  setReservationDate={setReservationDate}\r\n                />\r\n              ) : (\r\n                <div className=\"emptyDay\"></div>\r\n              )}\r\n            </div>\r\n            <div className=\"days dayBox5\">\r\n              {choiceMonth[\"40\"] !== undefined ? (\r\n                <CalendarInfo\r\n                  dayInfo={choiceMonth[\"40\"]}\r\n                  count={reservationCount[\"40\"]}\r\n                  setReservationList={setReservationList}\r\n                  setReservationDate={setReservationDate}\r\n                />\r\n              ) : (\r\n                <div className=\"emptyDay\"></div>\r\n              )}\r\n            </div>\r\n            <div className=\"days dayBox6\">\r\n              {choiceMonth[\"41\"] !== undefined ? (\r\n                <CalendarInfo\r\n                  dayInfo={choiceMonth[\"41\"]}\r\n                  count={reservationCount[\"41\"]}\r\n                  setReservationList={setReservationList}\r\n                  setReservationDate={setReservationDate}\r\n                />\r\n              ) : (\r\n                <div className=\"emptyDay\"></div>\r\n              )}\r\n            </div>\r\n            <div className=\"days dayBox7\">\r\n              {choiceMonth[\"42\"] !== undefined ? (\r\n                <CalendarInfo\r\n                  dayInfo={choiceMonth[\"42\"]}\r\n                  count={reservationCount[\"42\"]}\r\n                  setReservationList={setReservationList}\r\n                  setReservationDate={setReservationDate}\r\n                />\r\n              ) : (\r\n                <div className=\"emptyDay\"></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <hr />\r\n      {reservationDate} 예약자\r\n      <div>\r\n        {reservationList.map((item, idx) => (\r\n          <div key={item.user.pk}>\r\n            {\" \"}\r\n            <h5>\r\n              <Badge color=\"secondary\">{item.user.name}</Badge>{\" \"}\r\n              <span>{item.user.phone_number}</span>\r\n            </h5>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction reservationCountFunc(reservationCount, housePk) {\r\n  console.log(\"==getDateRange==\");\r\n  console.log(\"==getDateRange== : \", reservationCount);\r\n  let reservationObj = {};\r\n  for (let i = 0; i < reservationCount.length; i++) {\r\n    let obj = {\r\n      count: reservationCount[i].count,\r\n      date: reservationCount[i].reservation_date,\r\n      pk: housePk,\r\n    };\r\n    let rd = reservationCount[i].reservation_date;\r\n    let date = new Date(rd);\r\n    let nthDay = date.getDay();\r\n    let nthWeek = parseInt((6 + date.getDate() - nthDay) / 7) + 1;\r\n    let key = (nthWeek - 1) * 7 + nthDay + 1;\r\n\r\n    reservationObj[key] = obj;\r\n  }\r\n  return reservationObj;\r\n}\r\n\r\nexport default Calendar;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\calendarInfo.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\pages\\houseRecognizePage.js",["558","559","560"],"import HouseRecognize from \"components/main/house/houseRecognize\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport HouseRegist from \"components/main/house/houseRegist\";\r\nimport HouseUpdate from \"components/main/house/houseUpdate\";\r\n\r\nconst HouseRecognizePage = () => {\r\n  const { store } = useAppContext();\r\n  const [houseCurrentInfo, setHouseCurrentInfo] = useState([]);\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:8000/houses/houseinfo/\", config).then(\r\n      (response) => {\r\n        setHouseCurrentInfo(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Route\r\n          exact\r\n          path=\"/index/main/house/manage/info\"\r\n          component={HouseRegist}\r\n        />\r\n\r\n        <Route\r\n          path=\"/index/main/house/manage\"\r\n          component={() => (\r\n            <HouseRecognize\r\n              house={houseCurrentInfo}\r\n              setHouse={setHouseCurrentInfo}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HouseRecognizePage;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseByHouseId.js",["561"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport \"./houseByHouseId.scss\";\r\n\r\nimport addressImg from \"public/img/address.png\";\r\nimport priceImg from \"public/img/price.png\";\r\nimport roomImg from \"public/img/room.png\";\r\n\r\nimport personImg from \"public/img/person.png\";\r\nimport houseTypeImg from \"public/img/houseType.png\";\r\nimport noticeImg from \"public/img/notice.png\";\r\nimport NoticeItem from \"./noticeItem\";\r\nimport QnaItem from \"./qnaItem\";\r\nconst { kakao } = window;\r\n//housedetaiiImages houseInfo.housedetaiiImages\r\nconst HouseByHouseId = ({ match }) => {\r\n  const [houseInfo, seHouseInfo] = useState({ housedetaiiImages: [] });\r\n  const { store } = useAppContext();\r\n  const [choiceBoard, setChoiceBoard] = useState(false);\r\n  const [noticeContent, setNoticeContent] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n  const [like, setLike] = useState(0);\r\n  const [score, setScore] = useState();\r\n  //모달 (공지사항)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  // 공지사항 글\r\n  const [notice, setNotice] = useState([]);\r\n  // 문의사항 글\r\n  const [qna, setQna] = useState([]);\r\n  // 공지사항 글 작성\r\n  const noticeWrite = (e) => {\r\n    const { name, value } = e.target;\r\n    setNoticeContent((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  // 공지사항 글 작성 완료\r\n  const noticeSave = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/houses/notice/${match.params.pk}`,\r\n          { content: noticeContent },\r\n          config\r\n        );\r\n        console.log(response);\r\n        setNotice(notice.concat([response.data]));\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  const choiceNotice = () => {\r\n    setChoiceBoard(false);\r\n  };\r\n  const choiceReple = () => {\r\n    setChoiceBoard(true);\r\n  };\r\n\r\n  const showNoticeModal = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"===하우스 인포===\");\r\n    Axios.get(\r\n      `http://localhost:8000/houses/housebyid/${match.params.pk}`,\r\n      config\r\n    )\r\n      .then((response) => {\r\n        console.log(\"====???====\");\r\n        console.log(response.data);\r\n        setNotice(response.data[\"houseInfo\"][\"house_notice_board\"]);\r\n        setQna(response.data[\"houseInfo\"][\"house_qna_board\"]);\r\n        seHouseInfo(response.data[\"houseInfo\"]);\r\n        setLike(response.data[\"like\"]);\r\n        setScore(response.data[\"score\"]);\r\n        const container = document.getElementById(\"myHouse\");\r\n        const options = {\r\n          center: new kakao.maps.LatLng(\r\n            response.data[\"houseInfo\"].yPoint,\r\n            response.data[\"houseInfo\"].xPoint\r\n          ),\r\n          level: 3,\r\n        };\r\n        const map = new kakao.maps.Map(container, options);\r\n        const geocoder = new kakao.maps.services.Geocoder();\r\n        // 주소로 좌표를 검색합니다\r\n        geocoder.addressSearch(\r\n          response.data[\"houseInfo\"].houseAddress,\r\n          function (result, status) {\r\n            // 정상적으로 검색이 완료됐으면\r\n            if (status === kakao.maps.services.Status.OK) {\r\n              const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n              // 결과값으로 받은 위치를 마커로 표시합니다\r\n              const marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: coords,\r\n              });\r\n\r\n              // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n              const infowindow = new kakao.maps.InfoWindow({\r\n                content:\r\n                  '<div style=\"width:150px;text-align:center;padding:6px 0;\">' +\r\n                  response.data[\"houseInfo\"].houseName +\r\n                  \"</div>\",\r\n              });\r\n              infowindow.open(map, marker);\r\n\r\n              // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n              map.setCenter(coords);\r\n            }\r\n          }\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error.response);\r\n      });\r\n  }, []);\r\n\r\n  // 사진\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex =\r\n      activeIndex === houseInfo.housedetaiiImages.length - 1\r\n        ? 0\r\n        : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex =\r\n      activeIndex === 0\r\n        ? houseInfo.housedetaiiImages.length - 1\r\n        : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  const slides = houseInfo.housedetaiiImages.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item}\r\n      >\r\n        <img\r\n          src={\"http://localhost:8000/media/\" + item}\r\n          alt={item.altText}\r\n          width=\"80%\"\r\n          height=\"300px\"\r\n        />\r\n        <CarouselCaption\r\n          //captionText={item.caption}\r\n          captionHeader={item.caption}\r\n        />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"houseContainer\">\r\n        <div className=\"houseMainDiv\">\r\n          <div className=\"houseTitle\">{houseInfo.houseName}</div>\r\n          <img\r\n            src={\"http://localhost:8000\" + houseInfo.mainImage}\r\n            alt=\"mainImg\"\r\n            width=\"60%\"\r\n            height=\"300px\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className=\"houseDetailDiv\">\r\n          <Carousel activeIndex={activeIndex} next={next} previous={previous}>\r\n            <CarouselIndicators\r\n              items={houseInfo.housedetaiiImages}\r\n              activeIndex={activeIndex}\r\n              onClickHandler={goToIndex}\r\n            />\r\n            {slides}\r\n            <CarouselControl\r\n              className=\"leftDetailImageBtn\"\r\n              direction=\"prev\"\r\n              directionText=\"Previous\"\r\n              onClickHandler={previous}\r\n            />\r\n            <CarouselControl\r\n              className=\"rightDetailImageBtn\"\r\n              direction=\"next\"\r\n              directionText=\"Next\"\r\n              onClickHandler={next}\r\n            />\r\n          </Carousel>\r\n        </div>\r\n\r\n        {/* 디테일 정보 */}\r\n        <div className=\"detailHouseInfoContainer\">\r\n          <div className=\"detailHouseInfoUpper\">\r\n            <div className=\"detailHouseInfoUpperDiv\">\r\n              <div>\r\n                <div className=\"myHouse\">\r\n                  {\r\n                    <div\r\n                      id=\"myHouse\"\r\n                      style={{\r\n                        width: \"500px\",\r\n                        height: \"500px\",\r\n                      }}\r\n                    ></div>\r\n                  }\r\n                </div>\r\n                <div className=\"addressText\">\r\n                  {\" \"}\r\n                  위치 :{\" \"}\r\n                  {houseInfo.houseAddress +\r\n                    \" \" +\r\n                    houseInfo.houseDetailAddress}{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailHouseInfoUpperDiv\">\r\n              <div>\r\n                <Button color=\"primary\" outline className=\"scoreBtns\">\r\n                  추천 <Badge color=\"secondary\">{like}</Badge>\r\n                </Button>\r\n                <Button color=\"primary\" outline className=\"scoreBtns\">\r\n                  평점{\" \"}\r\n                  <Badge color=\"secondary\">{String(score).substr(0.3)}</Badge>\r\n                </Button>\r\n              </div>\r\n              <div>\r\n                <div className=\"dateRange\">\r\n                  <h4>\r\n                    <Badge color=\"secondary\">{houseInfo.startDate}</Badge>\r\n                  </h4>\r\n                  <h4 className=\"dateDash\">-</h4>\r\n                  <h4>\r\n                    <Badge color=\"secondary\"> {houseInfo.endDate}</Badge>\r\n                  </h4>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={addressImg}\r\n                    alt=\"주소\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    {houseInfo.houseAddress +\r\n                      \" \" +\r\n                      houseInfo.houseDetailAddress}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={personImg}\r\n                    alt=\"수용인원\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    최대수용 인원 {houseInfo.maxPerson} 명\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={priceImg}\r\n                    alt=\"가격\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    1박 당 {houseInfo.housePrice} 원\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={roomImg}\r\n                    alt=\"방갯수\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\"> 방 {houseInfo.rooms} 개</span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={houseTypeImg}\r\n                    alt=\"타입\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    형태 {houseInfo.houseType}{\" \"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {/* <div>예약하기</div> roomImg houseTypeImg */}\r\n            </div>\r\n          </div>\r\n          <div className=\"detailHouseInfobotDiv\">\r\n            <div className=\"noticeDiv\">\r\n              <div\r\n                className={\"noticeTitle\" + (!choiceBoard && \" boardActive\")}\r\n                onClick={choiceNotice}\r\n              >\r\n                <div>\r\n                  공지사항{\" \"}\r\n                  <img\r\n                    onClick={showNoticeModal}\r\n                    src={noticeImg}\r\n                    alt=\"noticeImg\"\r\n                    width=\"50px\"\r\n                    height=\"50px\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"repleDiv\">\r\n              <div\r\n                className={\"repleTitle\" + (choiceBoard && \" boardActive\")}\r\n                onClick={choiceReple}\r\n              >\r\n                <div>댓글 </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {!choiceBoard ? (\r\n            <div className=\"noticeContentDiv\">\r\n              {notice.map((item, idx) => (\r\n                <NoticeItem\r\n                  // type 0(집소유) 1(여행자)\r\n                  type=\"0\"\r\n                  idx={idx}\r\n                  key={item.id}\r\n                  notice={item}\r\n                  setNotice={setNotice}\r\n                  noticeList={notice}\r\n                  houseId={match.params.pk}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"repleContentDiv\">\r\n              {qna.map((item, idx) => (\r\n                <QnaItem\r\n                  type=\"0\"\r\n                  idx={idx}\r\n                  key={item.pk}\r\n                  qna={item}\r\n                  qnaList={qna}\r\n                  setQna={setQna}\r\n                  houseId={match.params.pk}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 모달 */}\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>공지사항</ModalHeader>\r\n          <ModalBody>\r\n            <span className=\"noticeModalTitle\">제 목 : </span>\r\n            <input onChange={noticeWrite} name=\"title\"></input>\r\n            <textarea\r\n              className=\"noticeContent\"\r\n              name=\"content\"\r\n              onChange={noticeWrite}\r\n              placeholder=\"공지할 글 작성\"\r\n              cols=\"56\"\r\n              rows=\"10\"\r\n            ></textarea>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={noticeSave}>\r\n              작성\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              취소\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HouseByHouseId;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMain.js",["562","563","564"],"import React, { useState } from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport ReservationHouse from \"./reservationHouse\";\r\nimport \"./travelMain.scss\";\r\nimport TravelManage from \"./travelManage\";\r\nimport TravelPlan from \"./travelPlan\";\r\nimport { Button, Toast, ToastBody, ToastHeader } from \"reactstrap\";\r\nimport Main from \"../main\";\r\nimport First from \"components/accounts/first\";\r\nimport AdminMainNotice from \"../admin/adminMainNotice\";\r\nconst TravelMain = ({ socketMsgT, socketMsg, show, socketToggle }) => {\r\n  let history = useHistory();\r\n  const onClickMoveSocketManage = () => {\r\n    history.push(\"/index/main/travel/manage\");\r\n\r\n    socketToggle();\r\n  };\r\n  const onClickMoveManage = () => {\r\n    history.push(\"/index/main/travel/manage\");\r\n  };\r\n  const onClickMoveNotice = () => {\r\n    history.push(\"/index/main/travel/notice\");\r\n  };\r\n  return (\r\n    <>\r\n      {socketMsgT && (\r\n        <Toast isOpen={show}>\r\n          <ToastHeader toggle={socketToggle}>알림</ToastHeader>\r\n          <ToastBody>\r\n            {socketMsg}\r\n\r\n            <Button outline color=\"secondary\" onClick={onClickMoveSocketManage}>\r\n              이동\r\n            </Button>\r\n          </ToastBody>\r\n        </Toast>\r\n      )}\r\n      <div className=\"travelNav\">\r\n        <div className=\"travelMenu\" onClick={onClickMoveManage}>\r\n          관리\r\n        </div>\r\n        <div className=\"travelMenu\" onClick={onClickMoveNotice}>\r\n          공지\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Switch>\r\n          <Route\r\n            path=\"/index/main/travel/manage\"\r\n            component={() => <TravelManage />}\r\n          />\r\n          <Route path=\"/index/main/travel/notice\" component={AdminMainNotice} />\r\n\r\n          <Route path=\"/index/main/travel/:id\" component={TravelPlan} />\r\n          <Route\r\n            path=\"/index/main/house/choice/:id\"\r\n            component={ReservationHouse}\r\n          />\r\n        </Switch>\r\n        {/* 공지 */}\r\n        {/* <Route exact path=\"/index/main/travel/manage\" component={HouseRegist} /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TravelMain;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelManage.js",["565","566"],"import React, { useState } from \"react\";\r\nimport \"./travelManage.scss\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport TravelMenuList from \"./travelMenuList\";\r\n\r\nimport TravelProfileCard from \"./travelProfileCard\";\r\nimport TravelMainContent from \"./travelMainContent\";\r\nimport TravelMyPlan from \"./travelMyPlan\";\r\nimport TravelMyFriend from \"../friend/travelMyFriend\";\r\nimport TravelMyHistory from \"./travelMyHistory\";\r\nimport backswing from \"public/video/bg_swing.mp4\";\r\n\r\nconst TravelManage = () => {\r\n  const [useMenu, setUseMenu] = useState(0);\r\n  return (\r\n    <>\r\n      <div className=\"travelManageMain\">\r\n        <div className=\"travelManageMenu\">\r\n          <TravelProfileCard />\r\n          <br />\r\n          <br />\r\n          <TravelMenuList setMenu={setUseMenu} />\r\n        </div>\r\n        <div className=\"travelManageContent\">\r\n          <div className=\"backSwingDiv\">\r\n            <video\r\n              className=\"backSwing\"\r\n              src={backswing}\r\n              type=\"video/mp4\"\r\n              muted=\"muted\"\r\n              loop=\"loop\"\r\n              autoPlay\r\n            />\r\n          </div>\r\n          {useMenu === 0 && <TravelMainContent />}\r\n          {useMenu === 1 && <TravelMyPlan />}\r\n          {useMenu === 2 && <TravelMyFriend />}\r\n          {useMenu === 3 && <TravelMyHistory />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TravelManage;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelProfileCard.js",["567","568","569"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport basicProfileImg from \"public/img/basic.JPG\";\r\nimport \"./travelProfileCard.scss\";\r\nimport MyEditProfileForm from \"./myEditProfileForm\";\r\nimport MyEditPWForm from \"./myEditPWForm\";\r\n\r\nconst TravelProfileCard = () => {\r\n  const [myProfile, setMyProfile] = useState();\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:8000/accounts/userprofile/\", config).then(\r\n      (response) => {\r\n        setMyProfile(response.data);\r\n        console.log(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const [pwModal, setPwModal] = useState(false);\r\n\r\n  const pwToggle = () => setPwModal(!pwModal);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profileCard\">\r\n        {myProfile && (\r\n          <Card>\r\n            <CardImg\r\n              className=\"myImgCard\"\r\n              src={`http://localhost:8000${myProfile.avatar}`}\r\n              alt=\"Card image cap\"\r\n            />\r\n            <CardBody>\r\n              <CardTitle tag=\"h5\">{myProfile.user.name}</CardTitle>\r\n              <CardText>{myProfile.introduce}</CardText>\r\n              <CardText>\r\n                <Button outline onClick={toggle} color=\"secondary\">\r\n                  프로필 변경\r\n                </Button>\r\n                <span> </span>\r\n                <Button outline onClick={pwToggle} color=\"secondary\">\r\n                  비밀번호 변경\r\n                </Button>\r\n              </CardText>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </div>\r\n      <div>\r\n        {/* 프로필변경 */}\r\n        <Modal isOpen={modal} toggle={toggle} className=\"editProfile\">\r\n          <ModalHeader toggle={toggle}>프로필 변경</ModalHeader>\r\n          <ModalBody>\r\n            <MyEditProfileForm\r\n              myInfo={myProfile}\r\n              editToggle={toggle}\r\n              setMyinfo={setMyProfile}\r\n            />\r\n          </ModalBody>\r\n        </Modal>\r\n        {/* 비밀번호 변경 */}\r\n        <Modal isOpen={pwModal} toggle={pwToggle} className=\"editProfile\">\r\n          <ModalHeader toggle={pwToggle}>비밀번호 변경</ModalHeader>\r\n          <ModalBody>\r\n            <MyEditPWForm editToggle={pwToggle} />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TravelProfileCard;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMenuList.js",["570","571","572"],"import React from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { Route, Link, useHistory } from \"react-router-dom\";\r\nconst TravelMenuList = ({ setMenu }) => {\r\n  let history = useHistory();\r\n\r\n  const onClickMoveTravelMain = () => {\r\n    setMenu(0);\r\n  };\r\n\r\n  const onClickMoveTravelMyTravel = () => {\r\n    setMenu(1);\r\n  };\r\n\r\n  const onClickMoveTravelMyFriend = () => {\r\n    setMenu(2);\r\n  };\r\n  const onClickMoveMyHistory = () => {\r\n    setMenu(3);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListGroup>\r\n        <ListGroupItem onClick={onClickMoveTravelMain} action>\r\n          메인\r\n        </ListGroupItem>\r\n\r\n        <ListGroupItem onClick={onClickMoveTravelMyTravel} action>\r\n          내 여행\r\n        </ListGroupItem>\r\n        <ListGroupItem onClick={onClickMoveTravelMyFriend} action>\r\n          친구 목록\r\n        </ListGroupItem>\r\n        <ListGroupItem onClick={onClickMoveMyHistory} action>\r\n          내역\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TravelMenuList;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMainContent.js",["573"],"import React, { useState } from \"react\";\r\nimport BestSharePlanList from \"./bestSharePlanList\";\r\nimport BestShareShowDetail from \"./bestShareShowDetail\";\r\nimport BestTravelHouseList from \"./bestTravelHouseList\";\r\nimport ShareShowDetatil from \"./shareShowDetatil\";\r\n\r\nimport \"./travelMainContent.scss\";\r\nconst TravelMainContent = () => {\r\n  const [choiceShare, setChoiceShare] = useState(0);\r\n  return (\r\n    <div className=\"travelMainDivFlex\">\r\n      <div className=\"topContainDiv\">\r\n        <div className=\"bestSharePlan\">\r\n          <BestSharePlanList setChoiceShare={setChoiceShare} />\r\n        </div>\r\n        <div className=\"bestShareShow\">\r\n          {\" \"}\r\n          <BestShareShowDetail choiceShare={choiceShare} />\r\n        </div>\r\n      </div>\r\n      <div className=\"botContainDiv\">\r\n        <div className=\"botDivContain\">\r\n          <BestTravelHouseList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TravelMainContent;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMyPlan.js",["574","575","576"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  UncontrolledCollapse,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport \"./travelMyPlan.scss\";\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport TravelMyPlanList from \"./travelMyPlanList\";\r\nimport PlanMember from \"./planMember\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ShareModal from \"./shareModal\";\r\nimport ShareScoreModal from \"./shareScoreModal\";\r\n\r\nconst TravelMyPlan = () => {\r\n  let history = useHistory();\r\n  const [makePlanList, setMakePlanList] = useState([]);\r\n  const [invitedPlanList, setInvitedPlanList] = useState([]);\r\n  const [makePlan, setMakePlan] = useState({ complete: \"1\" });\r\n  const [sDate, setSDate] = useState(new Date());\r\n  const [eDate, setEDate] = useState(new Date());\r\n  const { store } = useAppContext();\r\n\r\n  // 공유 모달 설정\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const shareToggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  // tab 설정\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  // 맴버 리스트 창\r\n  const [showMember, setShowMember] = useState(false);\r\n  const [clickPlanTitle, setClickPlanTitle] = useState();\r\n  const [memberList, setMemberList] = useState([]);\r\n\r\n  // 선택된 여행No\r\n  const [choicePlanNo, setChoicePlanNo] = useState(\"\");\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  console.log(\"....................\");\r\n  console.log(config);\r\n  console.log(store);\r\n\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          \"http://localhost:8000/plans/makeplan/\",\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setMakePlanList(makePlanList.concat(response.data.myPlan));\r\n        setInvitedPlanList(response.data.invitedPlan);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n\r\n    let date = new Date();\r\n    let year = date.getFullYear(); // 년도\r\n    let month; // 월\r\n    month =\r\n      String(date.getMonth() + 1).length === 1\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1;\r\n    let day = date.getDate(); // 날짜\r\n\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      start_date: year + \"-\" + month + \"-\" + day,\r\n    }));\r\n  }, []);\r\n\r\n  // input 값 변경\r\n  const onChangeMakePlan = (e) => {\r\n    const { name, value } = e.target;\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  // input - select  값 변경\r\n  const onChangeMakePlanSelect = (e) => {\r\n    console.log(e.target);\r\n    console.dir(e.target);\r\n    const { value, selectedIndex } = e.target;\r\n    const { innerText } = e.target[selectedIndex];\r\n    console.log(innerText);\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      location: innerText,\r\n      areacode: value,\r\n    }));\r\n  };\r\n  // 여행 시작날짜 변경\r\n  const onChangeSDate = (e) => {\r\n    let date = new Date(e);\r\n    let year = date.getFullYear(); // 년도\r\n    let month; // 월\r\n    month =\r\n      String(date.getMonth() + 1).length === 1\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1;\r\n    let day = date.getDate(); // 날짜\r\n    let resultDay = year + \"-\" + month + \"-\" + day;\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      start_date: resultDay,\r\n    }));\r\n\r\n    setSDate(e);\r\n\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      schedule: getDateRangeData(e, eDate),\r\n    }));\r\n  };\r\n  // 여행 마지막날짜 변경\r\n  const onChangeEDate = (e) => {\r\n    let date = new Date(e);\r\n    let year = date.getFullYear(); // 년도\r\n    let month; // 월\r\n    month =\r\n      String(date.getMonth() + 1).length === 1\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1;\r\n    let day = date.getDate(); // 날짜\r\n    let resultDay = year + \"-\" + month + \"-\" + day;\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      end_date: resultDay,\r\n    }));\r\n    setEDate(e);\r\n\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      schedule: getDateRangeData(sDate, e),\r\n    }));\r\n  };\r\n\r\n  // 여행만들기\r\n  const onSubmitMakePlan = (e) => {\r\n    e.preventDefault();\r\n    console.log(makePlan);\r\n    console.log(sDate);\r\n    console.log(eDate);\r\n\r\n    async function fn() {\r\n      console.log(\"만들어질떄 data\");\r\n      console.log(makePlan);\r\n      try {\r\n        // 스케줄 오브젝트 생성\r\n\r\n        console.log(\"=====================1\");\r\n        console.log(makePlan);\r\n        // 전송\r\n        let response = await Axios.post(\r\n          \"http://localhost:8000/plans/makeplan/\",\r\n          makePlan,\r\n          config\r\n        );\r\n\r\n        console.log(\"=====================1-1\");\r\n        console.log(response.data);\r\n        setMakePlanList(makePlanList.concat(response.data));\r\n        console.log(makePlanList);\r\n        alert(\"새로운 여행이 생성되었습니다.\");\r\n      } catch (error) {\r\n        alert(\"여행만들기 실패\");\r\n        console.log(\"=====================2\");\r\n        console.log(makePlan);\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 텝 클릭스, member창 초기화\r\n  const clickChangeTab = () => {\r\n    setShowMember(false);\r\n  };\r\n\r\n  // 여행입장\r\n  const clickTravelPlanEnter = () => {\r\n    history.push(`/index/main/travel/${choicePlanNo}`);\r\n\r\n    setShowMember(false);\r\n  };\r\n\r\n  // 여행 초대 승낙\r\n  const clickTravelPlanAgree = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/agreeplan/${choicePlanNo}`,\r\n          config\r\n        );\r\n\r\n        console.log(\"플랜 가입 요청 승인\");\r\n        console.log(response.data);\r\n        // 1.요청된 여행 리스트에서 삭제\r\n        setInvitedPlanList(\r\n          invitedPlanList.filter((info) => info.plan.id !== choicePlanNo)\r\n        );\r\n        // 2. 나의 여행 리스트에 추가\r\n        setMakePlanList(makePlanList.concat(response.data));\r\n        // 3. 맴버 초기화\r\n        setShowMember(false);\r\n      } catch (error) {\r\n        alert(\"플랜 가입 요청 승인 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 여행초대 거절\r\n  const clickTravelPlanReject = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/rejectplan/${choicePlanNo}`,\r\n\r\n          config\r\n        );\r\n\r\n        console.log(\"플랜 가입 요청 거절\");\r\n\r\n        // 1.요청된 여행 리스트에서 삭제\r\n        setInvitedPlanList(\r\n          invitedPlanList.filter((info) => info.plan.id !== choicePlanNo)\r\n        );\r\n\r\n        // 2. 맴버 초기화\r\n        setShowMember(false);\r\n      } catch (error) {\r\n        alert(\"맴버초대 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"myPlanMain\">\r\n        <div className=\"myPlanMake\">\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"toggler\"\r\n            style={{ marginBottom: \"1rem\" }}\r\n          >\r\n            여행계획하기\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            style={{ marginBottom: \"1rem\" }}\r\n            onClick={shareToggle}\r\n          >\r\n            여행공유받기\r\n          </Button>\r\n          <UncontrolledCollapse toggler=\".toggler\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={onSubmitMakePlan}>\r\n                  <Row form>\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleCity\">Travel Title</Label>\r\n                        <Input\r\n                          onChange={onChangeMakePlan}\r\n                          type=\"text\"\r\n                          name=\"plan_title\"\r\n                          id=\"plan_title\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleCity\">Location</Label>\r\n\r\n                        <Input\r\n                          onChange={onChangeMakePlanSelect}\r\n                          type=\"select\"\r\n                          name=\"location\"\r\n                          id=\"location\"\r\n                        >\r\n                          <option value=\"1\">서울</option>\r\n                          <option value=\"2\">인천</option>\r\n                          <option value=\"3\">대전</option>\r\n                          <option value=\"4\">대구</option>\r\n                          <option value=\"5\">광주</option>\r\n                          <option value=\"6\">부산</option>\r\n                          <option value=\"7\">울산</option>\r\n                          <option value=\"8\">세종</option>\r\n                          <option value=\"31\">경기도</option>\r\n                          <option value=\"32\">강원도</option>\r\n                          <option value=\"33\">충청북도</option>\r\n                          <option value=\"34\">충청남도</option>\r\n                          <option value=\"35\">경상북도</option>\r\n                          <option value=\"36\">경상남도</option>\r\n                          <option value=\"37\">전라북도</option>\r\n                          <option value=\"38\">전라남도</option>\r\n                          <option value=\"39\">제주도</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleState\">Start Date</Label>\r\n                        <br />\r\n                        <DatePicker\r\n                          minDate={new Date()}\r\n                          selected={sDate}\r\n                          onChange={(date) => onChangeSDate(date)}\r\n                          selectsStart\r\n                          startDate={sDate}\r\n                          endDate={eDate}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleZip\">Last Date</Label>\r\n                        <br />\r\n                        <DatePicker\r\n                          selected={eDate}\r\n                          onChange={(date) => onChangeEDate(date)}\r\n                          selectsEnd\r\n                          startDate={sDate}\r\n                          endDate={eDate}\r\n                          minDate={sDate}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={2}>\r\n                      <Button className=\"toggler\" onClick={onSubmitMakePlan}>\r\n                        Sign in\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </UncontrolledCollapse>\r\n        </div>\r\n        <div className=\"myPlanListContainer\">\r\n          <div>\r\n            <Nav tabs>\r\n              <NavItem className=\"planListTab \" onClick={clickChangeTab}>\r\n                <NavLink\r\n                  className={classnames({ activePlanList: activeTab === \"1\" })}\r\n                  onClick={() => {\r\n                    toggle(\"1\");\r\n                  }}\r\n                >\r\n                  나의 여행 리스트\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"planListTab \" onClick={clickChangeTab}>\r\n                <NavLink\r\n                  className={classnames({ activePlanList: activeTab === \"2\" })}\r\n                  onClick={() => {\r\n                    toggle(\"2\");\r\n                  }}\r\n                >\r\n                  {invitedPlanList.length === 0 ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Badge color=\"secondary\">NEW</Badge>\r\n                  )}\r\n                  초대 받은 여행 리스트{\" \"}\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab} className=\"planListContent\">\r\n              <TabPane tabId=\"1\">\r\n                <Row>\r\n                  <Col>\r\n                    {makePlanList.map((item, idx) => (\r\n                      <TravelMyPlanList\r\n                        number={idx + 1}\r\n                        key={item.plan.id}\r\n                        id={item.plan.id}\r\n                        basicInfo={item.plan}\r\n                        setClickPlanTitle={setClickPlanTitle}\r\n                        showMember={showMember}\r\n                        setShowMember={setShowMember}\r\n                        memberList={memberList}\r\n                        setMemberList={setMemberList}\r\n                        setChoicePlanNo={setChoicePlanNo}\r\n                      />\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane tabId=\"2\">\r\n                <Row>\r\n                  <Col>\r\n                    {invitedPlanList.map((item, idx) => (\r\n                      <TravelMyPlanList\r\n                        number={idx + 1}\r\n                        key={item.plan.id}\r\n                        id={item.plan.id}\r\n                        basicInfo={item.plan}\r\n                        setClickPlanTitle={setClickPlanTitle}\r\n                        showMember={showMember}\r\n                        setShowMember={setShowMember}\r\n                        memberList={memberList}\r\n                        setMemberList={setMemberList}\r\n                        setChoicePlanNo={setChoicePlanNo}\r\n                      />\r\n                    ))}\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n            </TabContent>\r\n          </div>\r\n\r\n          {showMember && (\r\n            <div>\r\n              <div className=\"memberInPlan\">\r\n                <Nav tabs>\r\n                  <NavItem className=\"memberInPlanTitle \">\r\n                    <NavLink> {clickPlanTitle}의 여행 맴버</NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </div>\r\n              <div className=\"memberContainer\">\r\n                {memberList.map((item1, idx) => (\r\n                  <PlanMember\r\n                    key={item1.user.pk}\r\n                    id={item1.user.pk}\r\n                    basicInfo={item1}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <div className=\"planBtns\">\r\n                {activeTab === \"1\" ? (\r\n                  <Button onClick={clickTravelPlanEnter}>입장</Button>\r\n                ) : (\r\n                  <>\r\n                    <Button onClick={clickTravelPlanAgree}>참여</Button>\r\n                    <Button onClick={clickTravelPlanReject}>거절</Button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* 공유 모달 */}\r\n      <div>\r\n        <ShareModal\r\n          shareToggle={shareToggle}\r\n          modal={modal}\r\n          makePlanList={makePlanList}\r\n          setMakePlanList={setMakePlanList}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction getDateRangeData(param1, param2) {\r\n  console.log(\"==getDateRangeData==\");\r\n  console.log(\"시작 : \" + param1);\r\n  console.log(\"끝 : \" + param2);\r\n  //param1은 시작일, param2는 종료일이다.\r\n  let res_day = [];\r\n  let ss_day = new Date(param1);\r\n  let ee_day = new Date(param2);\r\n  let nth = 1;\r\n  while (ss_day.getTime() <= ee_day.getTime()) {\r\n    let obj = {};\r\n    let _mon_ = ss_day.getMonth() + 1;\r\n    _mon_ = _mon_ < 10 ? \"0\" + _mon_ : _mon_;\r\n    let _day_ = ss_day.getDate();\r\n    _day_ = _day_ < 10 ? \"0\" + _day_ : _day_;\r\n\r\n    obj[\"date\"] = ss_day.getFullYear() + \"-\" + _mon_ + \"-\" + _day_;\r\n    obj[\"nth_day\"] = nth;\r\n\r\n    nth++;\r\n    res_day.push(obj);\r\n\r\n    ss_day.setDate(ss_day.getDate() + 1);\r\n  }\r\n  return res_day;\r\n}\r\n\r\nexport default TravelMyPlan;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\myEditProfileForm.js",["577","578","579"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  CardImg,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./myEditProfileForm.scss\";\r\nimport Axios from \"axios\";\r\nconst MyEditProfileForm = ({ myInfo, editToggle, setMyinfo }) => {\r\n  const { store } = useAppContext();\r\n  const inputRef = useRef(null);\r\n  const [formData, setFormData] = useState({});\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const [imgData, setImgData] = useState({ resultUrl: [], mainUrl: \"\" });\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  useEffect(() => {\r\n    setImgData();\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      avatar: null,\r\n      introduce: myInfo.introduce,\r\n      name: myInfo.user.name,\r\n      phone_number: myInfo.user.phone_number,\r\n      img: \"0\",\r\n    }));\r\n    setImgData((prev) => ({\r\n      ...prev,\r\n      mainUrl: `http://localhost:8000${myInfo.avatar}`,\r\n    }));\r\n  }, []);\r\n  const openTooltip = () => {\r\n    toggle();\r\n  };\r\n  const imgClick = () => {\r\n    inputRef.current.click();\r\n\r\n    toggle();\r\n  };\r\n\r\n  const imgBasicClick = () => {\r\n    //`http://localhost:8000${myInfo.avatar}`\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      img: \"1\",\r\n    }));\r\n\r\n    setImgData((prev) => ({\r\n      ...prev,\r\n      mainUrl: \"http://localhost:8000/media/public/basic.JPG\",\r\n    }));\r\n    toggle();\r\n  };\r\n\r\n  //메인 이미지 변경 할 때\r\n  const onMainImgChange = (e) => {\r\n    const { name, files } = e.target;\r\n    console.log(\"name : \", name);\r\n    console.log(\"files[0] : \", files[0]);\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: files[0],\r\n      img: \"2\",\r\n    }));\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      setImgData((prev) => ({\r\n        ...prev,\r\n        mainUrl: reader.result,\r\n      }));\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const onChangeinput = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onSubmitEditProfile = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"-formData-\");\r\n    console.log(formData);\r\n    const aFormData = new FormData();\r\n    let keys = Object.keys(formData);\r\n    console.log(keys);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      console.log(keys[i] + \" : \" + formData[keys[i]]);\r\n      if (keys[i] === \"detailImage\") {\r\n        for (let j = 0; j < formData[keys[i]].length; j++) {\r\n          aFormData.append(\"detailImage\", formData[keys[i]][j]);\r\n        }\r\n      }\r\n      aFormData.append(keys[i], formData[keys[i]]);\r\n    }\r\n\r\n    async function fn() {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `JWT ${store.jwtToken}`,\r\n        },\r\n      };\r\n      try {\r\n        let response = await Axios.patch(\r\n          \"http://localhost:8000/accounts/userprofile/\",\r\n          aFormData,\r\n          config\r\n        );\r\n\r\n        console.log(response.data);\r\n\r\n        const newAvatar = response.data.avatar;\r\n        const newIntroduce = response.data.introduce;\r\n        const newName = response.data.name;\r\n        const newPhone_number = response.data.phone_number;\r\n\r\n        console.log(newAvatar);\r\n        console.log(newIntroduce);\r\n        console.log(newName);\r\n        console.log(newPhone_number);\r\n        if (response.data.hasOwnProperty(\"avatar\")) {\r\n          setMyinfo((prev) => ({\r\n            ...prev,\r\n            avatar: newAvatar,\r\n            introduce: newIntroduce,\r\n            user: {\r\n              ...prev.user,\r\n              name: newName,\r\n              phone_number: newPhone_number,\r\n            },\r\n          }));\r\n        } else {\r\n          setMyinfo((prev) => ({\r\n            ...prev,\r\n\r\n            introduce: newIntroduce,\r\n            user: {\r\n              ...prev.user,\r\n              name: newName,\r\n              phone_number: newPhone_number,\r\n            },\r\n          }));\r\n        }\r\n      } catch (error) {\r\n        alert(\"로그인실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        {imgData.mainUrl && (\r\n          <>\r\n            <img\r\n              onClick={openTooltip}\r\n              className=\"myImgCardEdit \"\r\n              src={imgData.mainUrl || \"\"}\r\n              alt=\"Card cap\"\r\n              id={\"Tooltip-1\"}\r\n            />\r\n\r\n            <Tooltip\r\n              style={{\r\n                backgroundColor: \"white\",\r\n\r\n                border: \"1px solid black\",\r\n              }}\r\n              className=\"Tooltip\"\r\n              placement={\"right\"}\r\n              isOpen={tooltipOpen}\r\n              target={\"Tooltip-1\"}\r\n            >\r\n              <Button\r\n                onClick={imgBasicClick}\r\n                outline\r\n                color=\"secondary\"\r\n                className=\"profileImgBtn\"\r\n              >\r\n                기본이미지\r\n              </Button>\r\n              <Button\r\n                onClick={imgClick}\r\n                outline\r\n                color=\"secondary\"\r\n                className=\"profileImgBtn\"\r\n              >\r\n                이미지변경\r\n              </Button>\r\n            </Tooltip>\r\n          </>\r\n        )}\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <form onSubmit={onSubmitEditProfile}>\r\n        <FormGroup row>\r\n          <Label for=\"Name\" sm={2}>\r\n            Name\r\n          </Label>\r\n          <Col sm={9}>\r\n            <Input\r\n              onChange={onChangeinput}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={formData.name || \"\"}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label for=\"Phone\" sm={2}>\r\n            Phone\r\n          </Label>\r\n          <Col sm={9}>\r\n            <Input\r\n              onChange={onChangeinput}\r\n              type=\"text\"\r\n              name=\"phone_number\"\r\n              id=\"phone_number\"\r\n              placeholder=\"('-')제외한 숫자 11자리\"\r\n              value={formData.phone_number || \"\"}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label for=\"Introduce\" sm={2}>\r\n            Introduce\r\n          </Label>\r\n          <Col sm={9}>\r\n            <Input\r\n              onChange={onChangeinput}\r\n              type=\"textarea\"\r\n              name=\"introduce\"\r\n              id=\"introduce\"\r\n              value={formData.introduce || \"\"}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <Input\r\n          style={{\r\n            display: \"none\",\r\n          }}\r\n          className=\"profileInput\"\r\n          onChange={onMainImgChange}\r\n          innerRef={inputRef}\r\n          type=\"file\"\r\n          name=\"avatar\"\r\n          id=\"avatar\"\r\n        />\r\n        <br />\r\n        <hr />\r\n        <div className=\"profileModalBtns\">\r\n          <Button type=\"submit\" outline color=\"primary\">\r\n            change\r\n          </Button>\r\n          <Button type=\"button\" outline color=\"primary\" onClick={editToggle}>\r\n            close\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyEditProfileForm;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMyPlanList.js",["580","581"],"import React, { useState } from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport \"./travelMyPlanList.scss\";\r\n\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport StartScore from \"../history/starScore\";\r\nimport ShareScore from \"./shareScore\";\r\nconst TravelMyPlanList = ({\r\n  id,\r\n  basicInfo,\r\n  number,\r\n  setClickPlanTitle,\r\n  showMember,\r\n  setShowMember,\r\n  memberList,\r\n  setMemberList,\r\n  setChoicePlanNo,\r\n}) => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  const [shareScore, setshareScore] = useState(0);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const getScoreShare = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/share-score/${basicInfo[\"share_id\"]}/${id}`,\r\n          config\r\n        );\r\n        console.log(\"공유 점수가져오기\");\r\n        console.log(response);\r\n        setshareScore(response.data);\r\n        toggle();\r\n        // 예약번호, 숙소번호만 전달\r\n      } catch (error) {\r\n        alert(\"공유플랜 불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  //let history = useHistory();\r\n  //alert(\"이동 : \" + id);\r\n  //history.push(`/index/main/travel/${id}`);\r\n\r\n  const onClickMovePlan = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/planMember/${id}`,\r\n          config\r\n        );\r\n        console.log(\"선택 여행 맴버qwe\");\r\n        console.log(response.data);\r\n        setMemberList(response.data);\r\n        !showMember && setShowMember(true);\r\n        setChoicePlanNo(id);\r\n        setClickPlanTitle(basicInfo[\"plan_title\"]);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const giveScoreShare = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/plans/share-score/${basicInfo[\"share_id\"]}/${id}`,\r\n          { shareScore: shareScore },\r\n          config\r\n        );\r\n        console.log(\"공유 점수가져오기\");\r\n        console.log(response);\r\n\r\n        toggle();\r\n        // 예약번호, 숙소번호만 전달\r\n      } catch (error) {\r\n        alert(\"공유플랜 불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"travelMyPlanListMain\" onClick={onClickMovePlan}>\r\n        <div className=\"planNumberFlex\">\r\n          <Badge className=\"planNumber\" color=\"primary\">\r\n            {number}\r\n          </Badge>\r\n        </div>\r\n        <div className=\"planMiddleFlex\">\r\n          <div className=\"planTitleFlex\">\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"plan_title\"]}</Badge>\r\n            </div>\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"location\"]}</Badge>\r\n            </div>\r\n          </div>\r\n          <div className=\"planDateFlex\">\r\n            <Badge color=\"info\">{basicInfo[\"start_date\"]}</Badge>~\r\n            <Badge color=\"info\">{basicInfo[\"end_date\"]}</Badge>\r\n          </div>\r\n        </div>\r\n        <div className=\"planBtnFlex\">\r\n          {basicInfo[\"is_share\"] === true ? (\r\n            <Button size=\"sm\" color=\"primary\" onClick={getScoreShare}>\r\n              공유<span> </span>\r\n              <Badge color=\"secondary\"> 점수 </Badge>\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              size=\"sm\"\r\n              color=\"primary\"\r\n              onClick={getScoreShare}\r\n              className=\"shareInvisible\"\r\n            >\r\n              공유<span> </span>\r\n              <Badge color=\"secondary\"> 점수 </Badge>\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 공유점수 모달 */}\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>\r\n          [{basicInfo[\"plan_title\"]}]의 평점\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <ShareScore shareScore={shareScore} setshareScore={setshareScore} />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {/* onClick={sendScore} */}\r\n          <Button color=\"secondary\" onClick={giveScoreShare}>\r\n            완료\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TravelMyPlanList;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelPlan.js",["582"],"import React, { useState, useEffect } from \"react\";\r\nimport Chatting from \"./chatting\";\r\nimport TravelDetailPlan from \"./travelDetailPlan\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./travelPlan.scss\";\r\nimport Axios from \"axios\";\r\nimport planLoading from \"public/img/planLoading.png\";\r\nimport { Spinner } from \"reactstrap\";\r\nconst TravelPlan = ({ match }) => {\r\n  console.log(\"===TravelPlan===\");\r\n  console.log(match);\r\n  console.log(match.params.id);\r\n  const [state, setState] = useState();\r\n  const [member, setMember] = useState([]);\r\n  const [noMember, setNoMember] = useState([]);\r\n  const [detailPlanInfo, setDetailPlanInfo] = useState({\r\n    schedule: [{ detailPlace: [] }],\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    async function fn1() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/detailplan/${match.params.id}`,\r\n          config\r\n        );\r\n        console.log(\"==특정 여행 메인 데이터 ==\");\r\n\r\n        console.log(response.data);\r\n        // [in response.data]\r\n        // member\r\n        // noMemberFriend\r\n        // planInfo\r\n        // state\r\n\r\n        setMember(member.concat(response.data.member));\r\n        setNoMember(noMember.concat(response.data.noMemberFriend));\r\n        setDetailPlanInfo(response.data.planInfo[0]);\r\n        setState(response.data.state);\r\n        setLoading(true);\r\n      } catch (error) {\r\n        alert(\"여행 디테일 정보 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn1();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading === false ? (\r\n        <div className=\"detailPlan\">\r\n          <div className=\"planLoading\">\r\n            <img\r\n              src={planLoading}\r\n              alt=\"대기\"\r\n              width=\"200px\"\r\n              height=\"200px\"\r\n            ></img>\r\n            <br></br>\r\n            <span className=\"loadingText\">waitting...</span>\r\n            <Spinner color=\"info\" />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"detailPlan\">\r\n          <div className=\"detailPlanContainer\">\r\n            <TravelDetailPlan\r\n              loading={loading}\r\n              match={match}\r\n              state={state}\r\n              setState={setState}\r\n              detailPlanInfo={detailPlanInfo}\r\n              setDetailPlanInfo={setDetailPlanInfo}\r\n            />\r\n          </div>\r\n          <div className=\"chatting\">\r\n            <Chatting\r\n              room={match.params.id}\r\n              state={state}\r\n              setState={setState}\r\n              detailPlanInfo={detailPlanInfo}\r\n              setDetailPlanInfo={setDetailPlanInfo}\r\n              member={member}\r\n              setMember={setMember}\r\n              noMember={noMember}\r\n              setNoMember={setNoMember}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TravelPlan;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelDetailPlan.js",["583","584","585","586","587"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./travelDetailPlan.scss\";\r\n\r\nimport { Button, Badge } from \"reactstrap\";\r\nimport FindPlaceModal from \"./findPlaceModal\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport DetailPlaces from \"./detailPlaces\";\r\nimport KakaoMapPlace from \"./kakaoMapPlace\";\r\nimport HouseModal from \"./houseModal\";\r\nimport DateChangeModal from \"./dateChangeModal\";\r\nimport MoveDetailPlan from \"./moveDetailPlan\";\r\nimport { ImCalendar } from \"react-icons/im\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst TravelDetailPlan = ({\r\n  match,\r\n  setState,\r\n  loading,\r\n  state,\r\n  detailPlanInfo,\r\n  setDetailPlanInfo,\r\n}) => {\r\n  console.log(\"========TravelDetailPlan1=======1\");\r\n  console.log(\"detailPlanInfo : \", detailPlanInfo);\r\n  console.log(\"match : \", match);\r\n  console.log(\"state : \", state);\r\n\r\n  const { store, storeInfo } = useAppContext();\r\n  const [kakaoMap, setKakaoMap] = useState();\r\n\r\n  const [nthDay, setNthDay] = useState(1);\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  console.log(\"match  \", match);\r\n  useEffect(() => {\r\n    let mapContainer = document.getElementById(\"myMapPlace\"); // 지도를 표시할 div\r\n    let mapOption = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n      level: 3, // 지도의 확대 레벨\r\n    };\r\n    setKakaoMap(new kakao.maps.Map(mapContainer, mapOption));\r\n  }, [loading]);\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  // 숙소 modal\r\n\r\n  const [houseModal, setHouseModal] = useState(false);\r\n\r\n  const houseToggle = () => setHouseModal(!houseModal);\r\n\r\n  // 날짜 변경 모달\r\n  const [dateChangeModal, setDateChangeModal] = useState(false);\r\n\r\n  const dateChangeToggle = () => setDateChangeModal(!dateChangeModal);\r\n\r\n  // 이동  모달\r\n  // const [moveChangeModal, setMoveChangeModal] = useState(false);\r\n\r\n  // const moveChangeToggle = () => {\r\n  //   setMoveChangeModal(!moveChangeModal);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"detailContainer\">\r\n      <div>\r\n        <div className=\"titleAndDate\">\r\n          <div>\r\n            <h2>\r\n              {\" \"}\r\n              <Badge color=\"secondary\">{detailPlanInfo[\"plan_title\"]}</Badge>\r\n            </h2>\r\n          </div>\r\n          <div>\r\n            <span>{detailPlanInfo[\"start_date\"]}</span> ~\r\n            <span>{detailPlanInfo[\"end_date\"]}</span>\r\n            <ImCalendar\r\n              onClick={dateChangeToggle}\r\n              className={\"changeDatePlan\"}\r\n            ></ImCalendar>\r\n          </div>\r\n        </div>\r\n        <div className=\"showPlanMap\">\r\n          <div className=\"kakaoDiv\">\r\n            <KakaoMapPlace\r\n              loading={loading}\r\n              kakaoMap={kakaoMap}\r\n              detailPlanInfo={detailPlanInfo}\r\n              nthDay={nthDay}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <DetailPlaces\r\n        searchToggle={toggle}\r\n        houseToggle={houseToggle}\r\n        //moveToggle={moveChangeToggle}\r\n        detailInfo={detailPlanInfo[\"schedule\"][nthDay - 1]}\r\n        basicInfo={detailPlanInfo}\r\n        nthDay={nthDay}\r\n        maxDay={detailPlanInfo[\"schedule\"].length}\r\n        setNthDay={setNthDay}\r\n        setDetailPlanInfo={setDetailPlanInfo}\r\n      />\r\n\r\n      <div>\r\n        <FindPlaceModal\r\n          detailPlanInfo={detailPlanInfo}\r\n          modal={modal}\r\n          toggle={toggle}\r\n          areaCode={detailPlanInfo && detailPlanInfo.areacode}\r\n          setDetailPlanInfo={setDetailPlanInfo}\r\n          nthDay={nthDay}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <HouseModal\r\n          basicInfo={detailPlanInfo}\r\n          date={detailPlanInfo[\"schedule\"][nthDay - 1][\"date\"]}\r\n          modal={houseModal}\r\n          toggle={houseToggle}\r\n          planId={detailPlanInfo[\"schedule\"][nthDay - 1][\"plan_id\"]}\r\n          nextMove={\r\n            detailPlanInfo[\"schedule\"][nthDay - 1][\"detailPlace\"].length + 1\r\n          }\r\n          planDateId={detailPlanInfo[\"schedule\"][nthDay - 1][\"pk\"]}\r\n          nthDay={nthDay}\r\n        />\r\n      </div>\r\n\r\n      {/* <div>\r\n        <MoveDetailPlan\r\n          date={detailPlanInfo[\"schedule\"][nthDay - 1][\"date\"]}\r\n          modal={moveChangeModal}\r\n          toggle={moveChangeToggle}\r\n          planId={detailPlanInfo[\"schedule\"][nthDay - 1][\"plan_id\"]}\r\n          planDateId={detailPlanInfo[\"schedule\"][nthDay - 1][\"pk\"]}\r\n          nthDay={nthDay}\r\n        />\r\n      </div> */}\r\n\r\n      <div>\r\n        <DateChangeModal\r\n          oSDate={detailPlanInfo[\"start_date\"]}\r\n          oEDate={detailPlanInfo[\"end_date\"]}\r\n          modal={dateChangeModal}\r\n          toggle={dateChangeToggle}\r\n          dateChangeModal={dateChangeModal}\r\n          planId={detailPlanInfo[\"pk\"]}\r\n          setDetailPlanInfo={setDetailPlanInfo}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TravelDetailPlan;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\findPlaceModal.js",["588","589","590"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./findPlaceModal.scss\";\r\nimport { AiOutlineCaretLeft, AiOutlineCaretRight } from \"react-icons/ai\";\r\nimport FindPlaceList from \"./findPlaceList\";\r\nimport ChoicePlace from \"./choicePlace\";\r\n\r\nconst FindPlaceModal = ({\r\n  modal,\r\n  toggle,\r\n  areaCode,\r\n  setDetailPlanInfo,\r\n  nthDay,\r\n\r\n  detailPlanInfo,\r\n}) => {\r\n  console.log(\"findmoald============\");\r\n  console.log(\"detailPlanInfo : \", detailPlanInfo);\r\n  // 체크\r\n  const [listOrChoice, setListOrChoice] = useState(true);\r\n  // 선택한 placeId\r\n  const [placeId, setPlaceId] = useState(0);\r\n\r\n  const [spinner, setSpinner] = useState(true);\r\n  const [sigungu, setSigungu] = useState();\r\n  const [areaNum, setAreaNum] = useState(areaCode);\r\n  const [sigunguNum, setSigunguNum] = useState();\r\n  const page = useRef(1);\r\n  const showPlaceCount = useRef(9);\r\n  const [areaCodeOption] = useState([\r\n    [\"1\", \"서울\"],\r\n    [\"2\", \"인천\"],\r\n    [\"3\", \"대전\"],\r\n    [\"4\", \"대구\"],\r\n    [\"5\", \"광주\"],\r\n    [\"6\", \"부산\"],\r\n    [\"7\", \"울산\"],\r\n    [\"8\", \"세종\"],\r\n    [\"31\", \"경기도\"],\r\n    [\"32\", \"강원도\"],\r\n    [\"33\", \"충처북도\"],\r\n    [\"34\", \"충청남도\"],\r\n    [\"35\", \"경상북도\"],\r\n    [\"36\", \"경상남도\"],\r\n    [\"37\", \"전라북도\"],\r\n    [\"38\", \"전라남도\"],\r\n    [\"39\", \"제주도\"],\r\n  ]);\r\n\r\n  const [places, setPlaces] = useState({ items: [] });\r\n\r\n  const [totalPlace, setTotalPlace] = useState();\r\n\r\n  const { store } = useAppContext();\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPlaces({ items: [] });\r\n    setAreaNum(areaCode);\r\n    setSpinner(true);\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/areacode/${areaCode}`,\r\n          config\r\n        );\r\n        console.log(response);\r\n        setSigungu(response.data);\r\n      } catch (error) {\r\n        alert(\"지역코드 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    modal && fn();\r\n  }, [modal, areaCode]);\r\n\r\n  const onChangeAreaCode = (e) => {\r\n    setListOrChoice(true);\r\n    const value = e.target.value;\r\n\r\n    setAreaNum(value);\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/areacode/${value}`,\r\n          config\r\n        );\r\n        console.log(response);\r\n        setSigungu(response.data);\r\n      } catch (error) {\r\n        alert(\"시군구 찾기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const onChangeSiGunGuCode = (e) => {\r\n    const value = e.target.value;\r\n    setPlaces({ items: [] });\r\n    setSpinner(false);\r\n    setSigunguNum(value);\r\n    setListOrChoice(true);\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/sigungu/${areaNum}/${value}/${page.current}`,\r\n          config\r\n        );\r\n        console.log(response);\r\n        setSpinner(true);\r\n        response.data.items !== undefined\r\n          ? setPlaces(response.data)\r\n          : setPlaces({ items: [] });\r\n\r\n        setTotalPlace(response.data.totalCount);\r\n      } catch (error) {\r\n        alert(\"장소 검색 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const onClickLeft = () => {\r\n    if (Number(places.pageNo) >= 2) {\r\n      setListOrChoice(true);\r\n      setPlaces({ items: [] });\r\n      setSpinner(false);\r\n      const minusPageNo = Number(places.pageNo) - 1;\r\n      async function fn() {\r\n        try {\r\n          let response = await Axios.get(\r\n            `http://localhost:8000/plans/sigungu/${areaNum}/${sigunguNum}/${minusPageNo}`,\r\n            config\r\n          );\r\n          console.log(response);\r\n          setSpinner(true);\r\n          response.data.items !== undefined\r\n            ? setPlaces(response.data)\r\n            : setPlaces({ items: [] });\r\n\r\n          setTotalPlace(response.data.totalCount);\r\n        } catch (error) {\r\n          alert(\"장소 검색 실패\");\r\n          console.log(error);\r\n          if (error.response) {\r\n            console.log(error.response);\r\n          }\r\n        }\r\n      }\r\n\r\n      fn();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onClickRight = () => {\r\n    if (Number(places.totalPage) > Number(places.pageNo)) {\r\n      setListOrChoice(true);\r\n      setPlaces({ items: [] });\r\n      setSpinner(false);\r\n      const plusPageNo = Number(places.pageNo) + 1;\r\n      async function fn() {\r\n        try {\r\n          let response = await Axios.get(\r\n            `http://localhost:8000/plans/sigungu/${areaNum}/${sigunguNum}/${plusPageNo}`,\r\n            config\r\n          );\r\n          console.log(response);\r\n          setSpinner(true);\r\n          response.data.items !== undefined\r\n            ? setPlaces(response.data)\r\n            : setPlaces({ items: [] });\r\n\r\n          setTotalPlace(response.data.totalCount);\r\n        } catch (error) {\r\n          alert(\"장소 검색 실패\");\r\n          console.log(error);\r\n          if (error.response) {\r\n            console.log(error.response);\r\n          }\r\n        }\r\n      }\r\n\r\n      fn();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle} size=\"lg\" className=\"findPlace\">\r\n        <ModalHeader toggle={toggle}>\r\n          <div>여행 고르기</div>\r\n          <div className=\"placeSearchTopInputs\">\r\n            <Row form>\r\n              <Col md={6}>\r\n                <Input\r\n                  onChange={onChangeAreaCode}\r\n                  type=\"select\"\r\n                  name=\"location\"\r\n                  id=\"location\"\r\n                  value={areaNum}\r\n                >\r\n                  {areaCodeOption.map((i, idx) => (\r\n                    <option key={idx} value={i[0]}>\r\n                      {i[1]}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Input\r\n                  onChange={onChangeSiGunGuCode}\r\n                  type=\"select\"\r\n                  name=\"location\"\r\n                  id=\"location\"\r\n                >\r\n                  <option>{\"선택\"}</option>\r\n                  {sigungu &&\r\n                    sigungu.map((i) => (\r\n                      <option key={i.rnum} value={i.code}>\r\n                        {i.name}\r\n                      </option>\r\n                    ))}\r\n                </Input>\r\n              </Col>\r\n            </Row>\r\n            <div>\r\n              {places.items.length !== 0 && listOrChoice && (\r\n                <>\r\n                  <AiOutlineCaretLeft onClick={onClickLeft} />\r\n                  <span>{places.pageNo}</span>/<span>{places.totalPage}</span>\r\n                  <AiOutlineCaretRight onClick={onClickRight} />\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody className=\"qweqwe\">\r\n          {listOrChoice === true ? (\r\n            // 해당 검색어의 여행 리스트\r\n            <FindPlaceList\r\n              setPlaceId={setPlaceId}\r\n              choicePlace={() => setListOrChoice(!listOrChoice)}\r\n              spinner={spinner}\r\n              placeList={places.items}\r\n            />\r\n          ) : (\r\n            //   여행 선택 화면\r\n            <ChoicePlace\r\n              choicePlace={() => setListOrChoice(!listOrChoice)}\r\n              placeId={placeId}\r\n              setDetailPlanInfo={setDetailPlanInfo}\r\n              nthDay={nthDay}\r\n              detailPlanInfo={detailPlanInfo}\r\n            />\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindPlaceModal;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\placeItem.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\findPlaceList.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\choicePlace.js",["591"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport produce from \"immer\";\r\nimport \"./choicePlace.scss\";\r\n\r\nconst ChoicePlace = ({\r\n  placeId,\r\n  choicePlace,\r\n  setDetailPlanInfo,\r\n  nthDay,\r\n  detailPlanInfo,\r\n}) => {\r\n  const { store } = useAppContext();\r\n  const [loading, setLoading] = useState(false);\r\n  const [placeInfo, setPlaceInfo] = useState({});\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/placeId/${placeId}`,\r\n          config\r\n        );\r\n        console.log(response);\r\n        setLoading(!loading);\r\n        setPlaceInfo(response.data);\r\n      } catch (error) {\r\n        alert(\"지역코드 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n\r\n  const onClickReturn = () => {\r\n    choicePlace();\r\n  };\r\n\r\n  const onClickPlanAdd = () => {\r\n    alert(\"결정\");\r\n    console.log(\"전-\");\r\n    console.log(detailPlanInfo);\r\n    setDetailPlanInfo(\r\n      produce((draft) => {\r\n        draft.schedule[nthDay - 1].detailPlace.push({\r\n          move_turn: draft.schedule[nthDay - 1].detailPlace.length + 1,\r\n          detail_img: placeInfo.firstimage,\r\n          place_name: placeInfo.title,\r\n          place_location: placeInfo.addr1,\r\n          place_x: placeInfo.mapx,\r\n          place_y: placeInfo.mapy,\r\n          place_memo: \"\",\r\n          place_type: \"0\",\r\n        });\r\n      })\r\n    );\r\n    console.log(\"후-\");\r\n    console.log(detailPlanInfo);\r\n    choicePlace();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"loading\">\r\n        {!loading && <Spinner style={{ width: \"3rem\", height: \"3rem\" }} />}\r\n      </div>\r\n      {loading && (\r\n        <div className=\"choiceMain\">\r\n          <div className=\"choicePlacePic\">\r\n            <div className=\"choiceIntroduce\">\r\n              <div>\r\n                <div className=\"choicePics\">\r\n                  <span className=\"choiceTitle\">{placeInfo.title}</span>\r\n                  <span>\r\n                    <img width=\"100%\" src={placeInfo.firstimage} alt=\"첫사진\" />\r\n                  </span>\r\n                </div>\r\n                {placeInfo.overview}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <span>\r\n              주소 : <span>{placeInfo.addr1}</span>\r\n            </span>\r\n            <span className=\"choiceBtns\">\r\n              <button onClick={onClickPlanAdd}>결정</button>\r\n              <button onClick={onClickReturn}>돌아가기</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChoicePlace;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\detailPlaces.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\collectPlaces.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\collectPlaceItem.js",["592","593"],"import React, { useState } from \"react\";\r\nimport \"./collectPlaceItem.scss\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport {\r\n  BsFillCaretUpFill,\r\n  BsFillCaretDownFill,\r\n  BsCardText,\r\n  BsXSquareFill,\r\n} from \"react-icons/bs\";\r\nimport produce from \"immer\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst HOUST_USER = \"/index/main/house/choice/\";\r\n\r\nconst CollectPlaceItem = ({\r\n  index,\r\n  info,\r\n  nthDay,\r\n  setDetailPlanInfo,\r\n  detailInfo,\r\n  basicInfo,\r\n}) => {\r\n  console.log(\"===info==== move_turn : \" + info[\"move_turn\"]);\r\n  console.log(info);\r\n  console.log(detailInfo);\r\n  console.log(detailInfo[\"detailPlace\"]);\r\n  console.log(basicInfo);\r\n  const history = useHistory();\r\n  const [memoContent, setMemoContent] = useState(info[\"place_memo\"]);\r\n  //모달\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  // 순서 변경\r\n  const placeTurnUp = () => {\r\n    //제거값\r\n    console.log(\"전\");\r\n    console.log(detailInfo[\"detailPlace\"]);\r\n    const sortingField = \"move_turn\";\r\n    const currentTurn = Number(info[\"move_turn\"]); // 1 2 3\r\n    let modifiedArray;\r\n    if (currentTurn === 1) {\r\n      modifiedArray = detailInfo[\"detailPlace\"]\r\n        .map((item) =>\r\n          item.move_turn === currentTurn\r\n            ? { ...item, move_turn: Number(detailInfo[\"detailPlace\"].length) }\r\n            : { ...item, move_turn: Number(item.move_turn) - 1 }\r\n        )\r\n        .sort(function (a, b) {\r\n          // 오름차순\r\n          return a[sortingField] - b[sortingField];\r\n          // 13, 21, 25, 44\r\n        });\r\n    } else {\r\n      modifiedArray = detailInfo[\"detailPlace\"]\r\n        .map((item) =>\r\n          item.move_turn === currentTurn\r\n            ? { ...item, move_turn: currentTurn - 1 }\r\n            : item.move_turn === currentTurn - 1\r\n            ? { ...item, move_turn: currentTurn }\r\n            : item\r\n        )\r\n        .sort(function (a, b) {\r\n          // 오름차순\r\n          return a[sortingField] - b[sortingField];\r\n          // 13, 21, 25, 44\r\n        });\r\n    }\r\n\r\n    setDetailPlanInfo(\r\n      produce((draft) => {\r\n        draft.schedule[nthDay - 1].detailPlace = modifiedArray;\r\n      })\r\n    );\r\n  };\r\n  const placeTurnDown = () => {\r\n    //제거값\r\n    console.log(\"전\");\r\n    console.log(detailInfo[\"detailPlace\"]);\r\n    const sortingField = \"move_turn\";\r\n    const currentTurn = Number(info[\"move_turn\"]); // 1 2 3\r\n    let modifiedArray;\r\n    if (currentTurn === detailInfo[\"detailPlace\"].length) {\r\n      modifiedArray = detailInfo[\"detailPlace\"]\r\n        .map((item) =>\r\n          item.move_turn === detailInfo[\"detailPlace\"].length\r\n            ? { ...item, move_turn: 1 }\r\n            : { ...item, move_turn: Number(item.move_turn) + 1 }\r\n        )\r\n        .sort(function (a, b) {\r\n          // 오름차순\r\n          return a[sortingField] - b[sortingField];\r\n          // 13, 21, 25, 44\r\n        });\r\n    } else {\r\n      modifiedArray = detailInfo[\"detailPlace\"]\r\n        .map((item) =>\r\n          item.move_turn === currentTurn\r\n            ? { ...item, move_turn: currentTurn + 1 }\r\n            : item.move_turn === currentTurn + 1\r\n            ? { ...item, move_turn: currentTurn }\r\n            : item\r\n        )\r\n        .sort(function (a, b) {\r\n          // 오름차순\r\n          return a[sortingField] - b[sortingField];\r\n          // 13, 21, 25, 44\r\n        });\r\n    }\r\n\r\n    setDetailPlanInfo(\r\n      produce((draft) => {\r\n        draft.schedule[nthDay - 1].detailPlace = modifiedArray;\r\n      })\r\n    );\r\n  };\r\n\r\n  const placeDelete = () => {\r\n    const currentTurn = Number(info[\"move_turn\"]); // 1 2 3\r\n    const modifiedArray = detailInfo[\"detailPlace\"]\r\n      .filter((info) => info.move_turn !== currentTurn)\r\n      .map((item, index) => ({ ...item, move_turn: index + 1 }));\r\n\r\n    console.log(modifiedArray);\r\n    setDetailPlanInfo(\r\n      produce((draft) => {\r\n        draft.schedule[nthDay - 1].detailPlace = modifiedArray;\r\n      })\r\n    );\r\n  };\r\n\r\n  const houseDelete = () => {\r\n    const reservation_id = info.reservation_id;\r\n    const check = window.confirm(\r\n      \"예약된 숙소를 지우고, 저장할 경우, 예약이 취소가 됩니다. 그래도 하시겠습니까?\"\r\n    );\r\n\r\n    if (check === true) {\r\n      for (let i = 0; i < basicInfo.schedule.length; i++) {\r\n        let detailPlaces = basicInfo.schedule[i][\"detailPlace\"];\r\n        for (let j = 0; j < detailPlaces.length; j++) {\r\n          if (detailPlaces[j][\"reservation_id\"] === reservation_id) {\r\n            let reservation_turn = j + 1;\r\n\r\n            let modifiedArray = detailPlaces\r\n              .filter((item) => item.move_turn !== reservation_turn)\r\n              .map((item, index) => ({ ...item, move_turn: index + 1 }));\r\n\r\n            console.log(modifiedArray);\r\n            setDetailPlanInfo(\r\n              produce((draft) => {\r\n                draft.schedule[i].detailPlace = modifiedArray;\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n      const currentTurn = Number(info[\"move_turn\"]); // 1 2 3\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const recoHouseDelete = () => {\r\n    const reservation_id = info.reservation_id;\r\n    const check = window.confirm(\r\n      \"공유계획에 추천된 숙소를 더 이상 안보시겠습니까? 확인 후 저장해주세요\"\r\n    );\r\n\r\n    if (check === true) {\r\n      for (let i = 0; i < basicInfo.schedule.length; i++) {\r\n        let detailPlaces = basicInfo.schedule[i][\"detailPlace\"];\r\n        for (let j = 0; j < detailPlaces.length; j++) {\r\n          if (detailPlaces[j][\"reservation_id\"] === reservation_id) {\r\n            let reservation_turn = j + 1;\r\n\r\n            let modifiedArray = detailPlaces\r\n              .filter((item) => item.move_turn !== reservation_turn)\r\n              .map((item, index) => ({ ...item, move_turn: index + 1 }));\r\n\r\n            console.log(modifiedArray);\r\n            setDetailPlanInfo(\r\n              produce((draft) => {\r\n                draft.schedule[i].detailPlace = modifiedArray;\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n      const currentTurn = Number(info[\"move_turn\"]); // 1 2 3\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  // 하우스 입장\r\n  const enterHouseClick = () => {\r\n    history.push({\r\n      pathname: HOUST_USER + info[\"house_id\"],\r\n\r\n      state: {\r\n        sDate: basicInfo[\"start_date\"],\r\n        eDate: basicInfo[\"end_date\"],\r\n        search: 1,\r\n        planId: basicInfo[\"pk\"],\r\n        reco: true,\r\n        move_turn: info[\"move_turn\"],\r\n        reservation_id: info[\"reservation_id\"],\r\n      },\r\n    });\r\n  };\r\n\r\n  const chageMemo = (e) => {\r\n    console.log(e.target.value);\r\n    const currentTurn = Number(info[\"move_turn\"]) - 1; // 1 2 3\r\n    setMemoContent(e.target.value);\r\n\r\n    setDetailPlanInfo(\r\n      produce((draft) => {\r\n        draft.schedule[nthDay - 1].detailPlace[\r\n          currentTurn\r\n        ].place_memo = memoContent;\r\n      })\r\n    );\r\n  };\r\n  // const onInputMemo = () => {\r\n  //   console.log(memoContent);\r\n  //   const currentTurn = Number(info[\"move_turn\"]) - 1; // 1 2 3\r\n  //   setDetailPlanInfo(\r\n  //     produce((draft) => {\r\n  //       draft.schedule[nthDay - 1].detailPlace[\r\n  //         currentTurn\r\n  //       ].place_memo = memoContent;\r\n  //     })\r\n  //   );\r\n  //   toggle();\r\n  // };\r\n  return (\r\n    <>\r\n      <div className=\"placeUnit\">\r\n        <div className=\"placeUpDown\">\r\n          <div>\r\n            <BsFillCaretUpFill onClick={placeTurnUp} />\r\n          </div>\r\n\r\n          <div>\r\n            <BsFillCaretDownFill onClick={placeTurnDown} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Button\r\n            className={\"displayBtn\" + (index + 1) + \" btnArea\"}\r\n            color=\"primary\"\r\n            onMouseEnter={(e) => {\r\n              let className = e.target.classList[0];\r\n              document.getElementsByClassName(\r\n                className\r\n              )[0].style.backgroundColor = \"red\";\r\n\r\n              document.getElementsByClassName(\r\n                className\r\n              )[1].style.backgroundColor = \"red\";\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              let className = e.target.classList[0];\r\n              document.getElementsByClassName(\r\n                className\r\n              )[0].style.backgroundColor = \"#007bff\";\r\n\r\n              document.getElementsByClassName(\r\n                className\r\n              )[1].style.backgroundColor = \"#007bff\";\r\n            }}\r\n          >\r\n            <Badge className=\"placeTurn\" color=\"secondary\">\r\n              {info.move_turn}\r\n            </Badge>\r\n          </Button>\r\n        </div>\r\n        <div className=\"placeImg\">\r\n          <img width=\"100%\" src={info.detail_img} alt={info.place_name} />\r\n        </div>\r\n        <div className=\"placeName\">{info.place_name}</div>\r\n        <div className=\"placeLocation\">{info.place_location}</div>\r\n        <div className=\"placeMemo\">\r\n          {info.place_type === \"2\" ? (\r\n            <Button\r\n              className=\"placeTurn\"\r\n              color=\"secondary\"\r\n              onClick={enterHouseClick}\r\n            >\r\n              예약\r\n            </Button>\r\n          ) : (\r\n            <BsCardText onClick={toggle} />\r\n          )}\r\n        </div>\r\n        <div className=\"palceDelete\">\r\n          {info.place_type === \"0\" ? (\r\n            <BsXSquareFill onClick={placeDelete} />\r\n          ) : info.place_type === \"1\" &&\r\n            getCurrentDateCompare(detailInfo.date) ? (\r\n            <BsXSquareFill onClick={houseDelete} />\r\n          ) : info.place_type === \"1\" &&\r\n            !getCurrentDateCompare(detailInfo.date) ? (\r\n            \"만료\"\r\n          ) : (\r\n            info.place_type === \"2\" && (\r\n              <BsXSquareFill onClick={recoHouseDelete} />\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Modal\r\n          isOpen={modal}\r\n          modalTransition={{ timeout: 700 }}\r\n          backdropTransition={{ timeout: 1300 }}\r\n          toggle={toggle}\r\n          className=\"placeMemoModal\"\r\n        >\r\n          <ModalHeader toggle={toggle}>{info[\"place_name\"]}</ModalHeader>\r\n          <ModalBody>\r\n            <textarea\r\n              onChange={chageMemo}\r\n              rows=\"10\"\r\n              cols=\"50\"\r\n              style={{\r\n                display: \"inline-block\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              {memoContent}\r\n            </textarea>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {/* <Button color=\"primary\" onClick={onInputMemo}>\r\n              저장\r\n            </Button>{\" \"} */}\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction getCurrentDateCompare(choiceDate) {\r\n  console.log(\"==getCurrentDateCompare==\");\r\n  let date1 = new Date();\r\n  let date2 = new Date(choiceDate);\r\n  // 예약 날짜가 같거나, 과거이면, 이미 지났으므로 삭제 X 할수 없다\r\n  if (date2 <= date1) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default CollectPlaceItem;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\kakaoMapPlace.js",["594","595","596","597","598"],"import React, { useEffect, useState } from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\nimport \"./kakaoMapPlace.scss\";\r\nimport travelImg from \"public/img/travel.png\";\r\nconst { kakao } = window;\r\nlet dots = [];\r\nconst KakaoMapPlace = ({ kakaoMap, detailPlanInfo, nthDay, loading }) => {\r\n  const [bounds, setBounds] = useState(new kakao.maps.LatLngBounds());\r\n  const [customOverlay, setCustomOverlay] = useState([]);\r\n\r\n  //const [dots, setDots] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"=======detailPlanInfo========\");\r\n    console.log(detailPlanInfo);\r\n\r\n    //맵 생성\r\n\r\n    var moveLine; // 선이 그려지고 있을때 마우스 움직임에 따라 그려질 선 객체 입니다\r\n\r\n    var distanceOverlay; // 선의 거리정보를 표시할 커스텀오버레이 입니다\r\n    //var dots = [dots]; // 선이 그려지고 있을때 클릭할 때마다 클릭 지점과 거리를 표시하는 커스텀 오버레이 배열입니다.\r\n\r\n    let clickLine;\r\n    setTimeout(() => {\r\n      clickLine = new kakao.maps.Polyline({\r\n        map: kakaoMap, // 선을 표시할 지도입니다\r\n        path: [], // 선을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\r\n        strokeWeight: 3, // 선의 두께입니다\r\n        strokeColor: \"#db4040\", // 선의 색깔입니다\r\n        strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\r\n        strokeStyle: \"solid\", // 선의 스타일입니다\r\n      });\r\n\r\n      for (let i = 0; i < points.length; i++) {\r\n        console.log(\"======clickLine======\");\r\n        console.log(\"path : \" + points[i]);\r\n        console.log(\"clickLine : \", clickLine);\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        let path = clickLine.getPath();\r\n        path.push(points[i]);\r\n        clickLine.setPath(path);\r\n\r\n        var distance = Math.round(clickLine.getLength());\r\n        displayCircleDot(kakaoMap, points[i], distance, dots);\r\n      }\r\n    }, 300);\r\n\r\n    console.log(\"====detailPlace_test===\");\r\n    console.log(detailPlanInfo);\r\n    console.log(detailPlanInfo[\"schedule\"][nthDay - 1]);\r\n    console.log(detailPlanInfo[\"schedule\"][nthDay - 1][\"detailPlace\"]);\r\n\r\n    let placeList = detailPlanInfo[\"schedule\"][nthDay - 1][\"detailPlace\"];\r\n    // 각 장소 위경도 격납\r\n    let points = placeList.map(\r\n      (item) => new kakao.maps.LatLng(item.place_y, item.place_x)\r\n    );\r\n\r\n    let customOverlayList = placeList.map(\r\n      (item, index) =>\r\n        new kakao.maps.CustomOverlay({\r\n          position: new kakao.maps.LatLng(item.place_y, item.place_x),\r\n          content: `<button class =\"myBtns displayBtn${\r\n            index + 1\r\n          }\"><span class=\"myMarker\">${index + 1}</span></button>`,\r\n        })\r\n    );\r\n    //console.log(\"points\", points);\r\n    //console.log(\"customOverlay1\", customOverlay);\r\n\r\n    //console.log(\"customOverlayList\", customOverlayList);\r\n    setCustomOverlay(customOverlay.concat(customOverlayList));\r\n    //console.log(\"customOverlay2\", customOverlay);\r\n\r\n    if (customOverlay.length !== 0) {\r\n      for (let j = 0; j < customOverlay.length; j++) {\r\n        customOverlay[j].setMap(null);\r\n      }\r\n    }\r\n    // 지도 범위 재생성\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      console.log(\"======clickLine======\");\r\n      console.log(\"path : \" + points[i]);\r\n      console.log(\"clickLine : \", clickLine);\r\n      // LatLngBounds 객체에 좌표를 추가합니다\r\n\r\n      //  var distance = Math.round(clickLine.getLength());\r\n      // displayCircleDot(clickPosition, distance);\r\n\r\n      customOverlayList[i].setMap(kakaoMap);\r\n\r\n      bounds.extend(points[i]);\r\n    }\r\n\r\n    let totlaY = 0;\r\n    placeList.map((item, index) => (totlaY += parseFloat(item.place_y)));\r\n    console.log(\"totlaY : \", totlaY);\r\n    let totlaX = 0;\r\n    placeList.map((item, index) => (totlaX += parseFloat(item.place_x)));\r\n    console.log(\"totlaX : \", totlaX);\r\n    const coords = new kakao.maps.LatLng(\r\n      totlaY / placeList.length,\r\n      totlaX / placeList.length\r\n    );\r\n\r\n    kakaoMap && kakaoMap.setCenter(coords);\r\n    console.log(\"coords : \", coords);\r\n    console.log(\"bounds : \", bounds);\r\n    console.log(\"kakaoMap : \", kakaoMap);\r\n    kakaoMap && kakaoMap.setBounds(bounds);\r\n\r\n    return () => {\r\n      console.log(\"=======dot========\");\r\n      console.log(dots);\r\n      console.log(\"=======points========\");\r\n      console.log(points);\r\n      setBounds(new kakao.maps.LatLngBounds());\r\n      for (let i = 0; i < dots.length; i++) {\r\n        if (dots[i].circle) {\r\n          dots[i].circle.setMap(null);\r\n        }\r\n\r\n        if (dots[i].distance) {\r\n          dots[i].distance.setMap(null);\r\n        }\r\n      }\r\n\r\n      dots = [];\r\n      clickLine && clickLine.setMap(null);\r\n\r\n      clickLine && (clickLine = null);\r\n    };\r\n  }, [detailPlanInfo, nthDay, loading, kakaoMap]);\r\n\r\n  return (\r\n    <div\r\n      id=\"myMapPlace\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"420px\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nfunction displayCircleDot(map, position, distance, dots) {\r\n  // 클릭 지점을 표시할 빨간 동그라미 커스텀오버레이를 생성합니다\r\n  var circleOverlay = new kakao.maps.CustomOverlay({\r\n    content: '<span class=\"dot\"></span>',\r\n    position: position,\r\n    zIndex: 1,\r\n  });\r\n\r\n  // 지도에 표시합니다\r\n  circleOverlay.setMap(map);\r\n\r\n  if (distance > 0) {\r\n    // 클릭한 지점까지의 그려진 선의 총 거리를 표시할 커스텀 오버레이를 생성합니다\r\n    var distanceOverlay = new kakao.maps.CustomOverlay({\r\n      content:\r\n        '<div class=\"dotOverlay\">거리 <span class=\"number\">' +\r\n        distance +\r\n        \"</span>m</div>\",\r\n      position: position,\r\n      yAnchor: 1.5,\r\n      zIndex: 2,\r\n    });\r\n\r\n    // 지도에 표시합니다\r\n    distanceOverlay.setMap(map);\r\n  }\r\n\r\n  // 배열에 추가합니다\r\n  dots.push({ circle: circleOverlay, distance: distanceOverlay });\r\n}\r\n\r\nexport default KakaoMapPlace;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\chatting.js",["599","600"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useAppContext } from \"store\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./chatting.scss\";\r\nimport Axios from \"axios\";\r\nimport Member from \"./member\";\r\nimport NoMemberFriend from \"./noMemberFriend\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ChattingContent from \"./chattingContent\";\r\nimport MyChattingContent from \"./myChattingContent\";\r\nconst Chatting = ({\r\n  room,\r\n\r\n  state,\r\n  detailPlanInfo,\r\n  setDetailPlanInfo,\r\n  member,\r\n  setMember,\r\n  noMember,\r\n  setNoMember,\r\n}) => {\r\n  let history = useHistory();\r\n  const [chatting, setChatting] = useState([]);\r\n  const [chattingInputm, setChattingInput] = useState(\"\");\r\n  const { store } = useAppContext();\r\n  const [chatSocket, setChatSocket] = useState();\r\n  const [chatCount, setChatCount] = useState(0);\r\n  const [chatStep, setChatStep] = useState(1);\r\n  // 스크롤\r\n  const scrollRef = useRef();\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  console.log(\"===Chatting==\");\r\n  useEffect(() => {\r\n    console.log(\"===chatSocket : ===\", chatSocket);\r\n    chatSocket === undefined &&\r\n      setChatSocket(new WebSocket(\"ws://127.0.0.1:8000/ws/chat/\" + room + \"/\"));\r\n\r\n    // 메세지 받을 때!\r\n    chatSocket !== undefined &&\r\n      (chatSocket.onmessage = function (e) {\r\n        var data = JSON.parse(e.data);\r\n        data[\"message\"][\"pk\"] = chatCount + 1;\r\n        var jsonData = [data[\"message\"]];\r\n\r\n        console.log(\"data : \", data);\r\n        console.log(\"message11 : \", jsonData);\r\n        setChatting(chatting.concat(jsonData));\r\n\r\n        const { scrollHeight, clientHeight, scrollTop } = scrollRef.current;\r\n        console.log(scrollRef.current);\r\n        console.dir(scrollRef.current);\r\n        console.log(\"스크롤========22\", scrollHeight, clientHeight, scrollTop);\r\n\r\n        scrollRef.current.scrollTop = scrollHeight - clientHeight;\r\n\r\n        //document.querySelector(\"#chat-log\").value += message + \"\\n\";\r\n      });\r\n\r\n    chatSocket !== undefined &&\r\n      (chatSocket.onclose = function (e) {\r\n        console.error(\"Chat socket closed unexpectedly\");\r\n      });\r\n    console.log(\"===effex==\");\r\n  }, [chatSocket, chatting]);\r\n\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/chat/getContent/${room}/${chatStep}`,\r\n          config\r\n        );\r\n        console.log(\"===채팅 가져오기 성공===111\");\r\n        console.log(response);\r\n        setChatting(chatting.concat(response.data));\r\n        setChatCount(response.data.length);\r\n\r\n        setChatStep(chatStep + 1);\r\n        const { scrollHeight, clientHeight, scrollTop } = scrollRef.current;\r\n        console.log(scrollRef.current);\r\n        console.log(\"스크롤========11\", scrollHeight, clientHeight, scrollTop);\r\n\r\n        scrollRef.current.scrollTop = scrollHeight - clientHeight;\r\n      } catch (error) {\r\n        alert(\"채팅 가져오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n\r\n  //   chatSocket.onclose = function (e) {\r\n  //     console.error(\"Chat socket closed unexpectedly\");\r\n  //   };\r\n\r\n  // 채팅 전송\r\n  const EnterSend = (e) => {\r\n    console.log(e.key);\r\n    if (e.key === \"Enter\") {\r\n      console.log(\"전송\");\r\n      console.log(\"store\", store);\r\n      chatSocket.send(\r\n        JSON.stringify({\r\n          message: e.target.value,\r\n          userImg: store.userImg,\r\n          userName: store.userName,\r\n          planNo: room,\r\n        })\r\n      );\r\n      setChattingInput(\"\");\r\n\r\n      async function fn() {\r\n        try {\r\n          // 전송\r\n          let response = Axios.post(\r\n            `http://localhost:8000/chat/save/`,\r\n            {\r\n              message: e.target.value,\r\n              userImg: store.userImg,\r\n              userName: store.userName,\r\n              planNo: room,\r\n            },\r\n            config\r\n          );\r\n          console.log(response);\r\n        } catch (error) {\r\n          alert(\"로그인실패\");\r\n          console.log(error);\r\n          if (error.response) {\r\n            console.log(error.response);\r\n          }\r\n        }\r\n      }\r\n\r\n      fn();\r\n    }\r\n  };\r\n\r\n  // 채팅 입력하기\r\n  const OnChangeInputDate = (e) => {\r\n    const val = e.target.value;\r\n    setChattingInput(val);\r\n  };\r\n\r\n  // 여행 탈퇴하기\r\n  const clickTravelPlanWithdraw = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/plans/withdraw/${room}`,\r\n\r\n          {\r\n            // 서버에서 req.body.{} 로 확인할 수 있다.\r\n            state: state,\r\n          },\r\n          config\r\n        );\r\n\r\n        console.log(\"여행 탈퇴하기\");\r\n        console.log(response);\r\n        history.push(`/index/main/travel/manage`);\r\n      } catch (error) {\r\n        alert(\"여행 탈퇴하기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n    if (state === \"1\") {\r\n      let withdrawCheck = window.confirm(\r\n        \"방장이 탈퇴 할 경우, 모든 회원도 같이 탈퇴가 됩니다. 그래도 하시겠습니까?\"\r\n      );\r\n\r\n      withdrawCheck && fn();\r\n    } else {\r\n      fn();\r\n    }\r\n  };\r\n\r\n  const onGetChattingData = (e) => {\r\n    console.log(\"==onGetChattingData===\");\r\n    const { scrollHeight, clientHeight, scrollTop } = e.target;\r\n    console.log(e.target);\r\n    console.log(\"스크롤========@@\", scrollHeight, clientHeight, scrollTop);\r\n\r\n    if (scrollHeight > clientHeight && scrollTop === 0) {\r\n      let preScrollHeight = scrollHeight;\r\n      async function fn() {\r\n        try {\r\n          // 전송\r\n          let response = await Axios.get(\r\n            `http://localhost:8000/chat/getContent/${room}/${chatStep}`,\r\n            config\r\n          );\r\n          console.log(\"===채팅 가져오기 성공===111\");\r\n          console.log(response);\r\n          setChatting(response.data.concat(chatting));\r\n          setChatCount(chatCount + response.data.length);\r\n          setChatStep(chatStep + 1);\r\n\r\n          const { scrollHeight, clientHeight, scrollTop } = scrollRef.current;\r\n          console.log(scrollRef.current);\r\n          console.log(\r\n            \"스크롤========@@33\",\r\n            scrollHeight,\r\n            clientHeight,\r\n            scrollTop\r\n          );\r\n\r\n          scrollRef.current.scrollTop = scrollHeight - preScrollHeight;\r\n        } catch (error) {\r\n          alert(\"채팅 가져오기 실패\");\r\n          console.log(error);\r\n          if (error.response) {\r\n            console.log(error.response);\r\n          }\r\n        }\r\n      }\r\n\r\n      fn();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"chattingDiv\">\r\n        <div className=\"chattingContainner\">\r\n          <div\r\n            className=\"chattingContent\"\r\n            ref={(e) => {\r\n              console.log(e);\r\n              scrollRef.current = e;\r\n            }}\r\n            onScroll={onGetChattingData}\r\n          >\r\n            {chatting.map(\r\n              (item, idx) =>\r\n                item.userName === store.userName ? (\r\n                  <MyChattingContent key={item.pk} message={item.message} />\r\n                ) : (\r\n                  <ChattingContent\r\n                    key={item.pk}\r\n                    message={item.message}\r\n                    img={item.userImg}\r\n                    name={item.userName}\r\n                  />\r\n                )\r\n              // <div>{item.message}</div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              className=\"chattingInput\"\r\n              onChange={OnChangeInputDate}\r\n              onKeyPress={EnterSend}\r\n              value={chattingInputm}\r\n            />\r\n            <button className=\"chattingBtn\" type=\"button\">\r\n              전송\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"members\">\r\n        <div className=\"planMemberList1\">\r\n          <div>\r\n            <div className=\"title1\">여행 맴버</div>\r\n          </div>\r\n\r\n          <div className=\"memberList\">\r\n            {member.map((item, index) => (\r\n              <Member\r\n                index={index}\r\n                planNo={room}\r\n                key={item.user.pk}\r\n                memberInfo={item.user}\r\n                state={state}\r\n                setMember={setMember}\r\n                memberList={member}\r\n                setNoMember={setNoMember}\r\n                noMemberList={noMember}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"planMemberList2\">\r\n          <div>\r\n            <div className=\"title1\">초대할 친구들</div>\r\n          </div>\r\n\r\n          <div className=\"searchResultList\">\r\n            {noMember.map((item, index) => (\r\n              <NoMemberFriend\r\n                planNo={room}\r\n                key={item.userFrom.pk}\r\n                memberInfo={item.userFrom}\r\n                state={state}\r\n                setMember={setMember}\r\n                memberList={member}\r\n                setNoMember={setNoMember}\r\n                noMemberList={noMember}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Button\r\n          color=\"danger\"\r\n          size=\"lg\"\r\n          block\r\n          onClick={clickTravelPlanWithdraw}\r\n          className=\"kickoutBtn\"\r\n        >\r\n          탈퇴 하기\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatting;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\travelMyFriend.js",["601","602","603"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./travelMyFriend.scss\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport TravelMyFriendSearch from \"./travelMyFriendSearch\";\r\nimport MyFriendApply from \"./myFriendApply\";\r\nimport FriendToMeApply from \"./friendToMeApply\";\r\nimport MyFriend from \"./myFriend\";\r\nimport FriendInfo from \"./friendInfo\";\r\n\r\nconst TravelMyFriend = () => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  // 친구 정보 pk\r\n  const [friendInfo, setFriendInfo] = useState({});\r\n  const [friendPk, setFriendPk] = useState(0);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const [applyList, setApplyList] = useState([]);\r\n  const [appliedList, setAppliedList] = useState([]);\r\n\r\n  const [myFriend, setMyFriend] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/friend/`,\r\n\r\n          config\r\n        );\r\n        console.log(response);\r\n        setApplyList(applyList.concat(response.data.applyFriendS));\r\n        setAppliedList(appliedList.concat(response.data.appliedFriendS));\r\n        setMyFriend(myFriend.concat(response.data.myFriend));\r\n\r\n        // applyList 필터 삭제\r\n      } catch (error) {\r\n        alert(\"친구 검색 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"friendMain\">\r\n        <div className=\"friendDiv\">\r\n          <MyFriend\r\n            myFriend={myFriend}\r\n            setMyFriend={setMyFriend}\r\n            setFriendInfo={setFriendInfo}\r\n            toggle={toggle}\r\n          />\r\n        </div>\r\n        <div className=\"friendDiv\">\r\n          <TravelMyFriendSearch\r\n            applyList={applyList}\r\n            setApplyList={setApplyList}\r\n            setFriendInfo={setFriendInfo}\r\n            toggle={toggle}\r\n          />\r\n        </div>\r\n        <div className=\"friendDiv\">\r\n          <MyFriendApply\r\n            applyList={applyList}\r\n            setApplyList={setApplyList}\r\n            setFriendInfo={setFriendInfo}\r\n            toggle={toggle}\r\n          />\r\n        </div>\r\n        <div className=\"friendDiv\">\r\n          <FriendToMeApply\r\n            appliedList={appliedList}\r\n            setAppliedList={setAppliedList}\r\n            myFriend={myFriend}\r\n            setmyFriend={setMyFriend}\r\n            setFriendInfo={setFriendInfo}\r\n            toggle={toggle}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>친구 정보</ModalHeader>\r\n          <ModalBody>\r\n            <FriendInfo friendInfo={friendInfo} />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TravelMyFriend;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\travelMyFriendSearch.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\travelMyFriendInputId.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\friendSearchRow.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\travelMyFriendInputPhone.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\myFriendApply.js",["604"],"import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport MyFriendApplyList from \"./myFriendApplyList\";\r\n\r\nconst MyFriendApply = ({ applyList, setApplyList, setFriendInfo, toggle }) => {\r\n  return (\r\n    <div className=\"searchContain\">\r\n      <div className=\"searchTitle\">\r\n        <div className=\"title1\">내가 요청한 친구 목록</div>\r\n      </div>\r\n\r\n      <div className=\"searchResultList\">\r\n        {applyList.map((item, index) => (\r\n          <MyFriendApplyList\r\n            key={item.pk}\r\n            friendInfo={item}\r\n            applyList={applyList}\r\n            setApplyList={setApplyList}\r\n            setFriendInfo={setFriendInfo}\r\n            toggle={toggle}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyFriendApply;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\myFriendApplyList.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\friendToMeApplyList.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\friendToMeApply.js",["605"],"import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport FriendToMeApplyList from \"./friendToMeApplyList\";\r\n\r\nconst FriendToMeApply = ({\r\n  appliedList,\r\n  setAppliedList,\r\n  myFriend,\r\n  setmyFriend,\r\n  setFriendInfo,\r\n  toggle,\r\n}) => {\r\n  return (\r\n    <div className=\"searchContain\">\r\n      <div className=\"searchTitle\">\r\n        <div className=\"title1\">나를 요청한 친구 목록</div>\r\n      </div>\r\n\r\n      <div className=\"searchResultList\">\r\n        {appliedList.map((item, index) => (\r\n          <FriendToMeApplyList\r\n            key={item.pk}\r\n            friendInfo={item}\r\n            appliedList={appliedList}\r\n            setAppliedList={setAppliedList}\r\n            myFriend={myFriend}\r\n            setmyFriend={setmyFriend}\r\n            setFriendInfo={setFriendInfo}\r\n            toggle={toggle}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FriendToMeApply;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\myFriend.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\myFriendList.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\member.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\noMemberFriend.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\planMember.js",["606","607","608","609"],"import React from \"react\";\r\n\r\nimport { Button, Badge } from \"reactstrap\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./planMember.scss\";\r\nconst PlanMember = ({ id, basicInfo }) => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  console.log(\"====\");\r\n  console.log(basicInfo);\r\n\r\n  return (\r\n    <div className=\"memberDiv\">\r\n      <div className=\"memberDivImg\">\r\n        <img\r\n          className=\"memberImg\"\r\n          width=\"50px\"\r\n          height=\"50px\"\r\n          src={`http://localhost:8000${basicInfo.user.profile.avatar}`}\r\n          alt=\"프로필\"\r\n        />\r\n      </div>\r\n      <div className=\"memberDivName\">{basicInfo.user.name}</div>\r\n      <div className=\"memberDivIntro\">{basicInfo.user.profile.introduce}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanMember;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\chattingContent.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\myChattingContent.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\houseModal.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\noticeItem.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\reservationHouse.js",["610","611","612","613","614","615","616","617","618","619"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  UncontrolledCollapse,\r\n  CardBody,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./reservationHouse.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport addressImg from \"public/img/address.png\";\r\nimport priceImg from \"public/img/price.png\";\r\nimport roomImg from \"public/img/room.png\";\r\n\r\nimport personImg from \"public/img/person.png\";\r\nimport houseTypeImg from \"public/img/houseType.png\";\r\nimport repleImg from \"public/img/notice.png\";\r\nimport NoticeItem from \"../house/noticeItem\";\r\nimport QnaItem from \"../house/qnaItem\";\r\nconst { kakao } = window;\r\n//housedetaiiImages houseInfo.housedetaiiImages\r\nconst ReservationHouse = ({ match, location }) => {\r\n  console.log(\"ReservationHouseReservationHouse : \", match);\r\n  console.log(\"ReservationHouseReservationHouse : \", location);\r\n  let history = useHistory();\r\n  const [houseInfo, seHouseInfo] = useState({\r\n    houseInfo: { housedetaiiImages: [] },\r\n  });\r\n  const { store } = useAppContext();\r\n  const [choiceBoard, setChoiceBoard] = useState(false);\r\n  const [qnAContent, setQnAContent] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    public: false,\r\n  });\r\n\r\n  const [sDate, setSDate] = useState(new Date(location.state.sDate));\r\n  const [eDate, setEDate] = useState(new Date(location.state.sDate));\r\n  const [makePlan, setMakePlan] = useState({ complete: \"1\" });\r\n  //모달 (문의사항)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  // 공지사항 글\r\n  const [notice, setNotice] = useState([]);\r\n  // 문의사항 글\r\n  const [qna, setQna] = useState([]);\r\n\r\n  // 공지사항 글 작성\r\n  const qnaWrite = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"public\") {\r\n      setQnAContent((prev) => ({\r\n        ...prev,\r\n        [name]: !qnAContent[\"public\"],\r\n      }));\r\n    } else {\r\n      setQnAContent((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  // 공지사항 글 작성 완료\r\n  const qnASave = () => {\r\n    console.log(qnAContent);\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/houses/qna/${match.params.id}`,\r\n          { content: qnAContent },\r\n          config\r\n        );\r\n        console.log(response);\r\n        setQna(qna.concat([response.data]));\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  const choiceNotice = () => {\r\n    setChoiceBoard(false);\r\n  };\r\n  const choiceReple = () => {\r\n    setChoiceBoard(true);\r\n  };\r\n\r\n  const showRepleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"===하우스 인포===\");\r\n    let urlType;\r\n\r\n    Axios.get(\r\n      `http://localhost:8000/houses/housebyid/${match.params.id}/${location.state.search}`,\r\n\r\n      config\r\n    )\r\n      .then((response) => {\r\n        console.log(response);\r\n        seHouseInfo(response.data);\r\n        setNotice(response.data.houseInfo[\"house_notice_board\"]);\r\n        setQna(response.data.houseInfo[\"house_qna_board\"]);\r\n\r\n        const container = document.getElementById(\"myHouse\");\r\n        const options = {\r\n          center: new kakao.maps.LatLng(\r\n            response.data.houseInfo.yPoint,\r\n            response.data.houseInfo.xPoint\r\n          ),\r\n          level: 3,\r\n        };\r\n        const map = new kakao.maps.Map(container, options);\r\n        const geocoder = new kakao.maps.services.Geocoder();\r\n        // 주소로 좌표를 검색합니다\r\n        geocoder.addressSearch(\r\n          response.data.houseInfo.houseAddress,\r\n          function (result, status) {\r\n            // 정상적으로 검색이 완료됐으면\r\n            if (status === kakao.maps.services.Status.OK) {\r\n              const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n              // 결과값으로 받은 위치를 마커로 표시합니다\r\n              const marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: coords,\r\n              });\r\n\r\n              // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n              const infowindow = new kakao.maps.InfoWindow({\r\n                content:\r\n                  '<div style=\"width:150px;text-align:center;padding:6px 0;\">' +\r\n                  response.data.houseInfo.houseName +\r\n                  \"</div>\",\r\n              });\r\n              infowindow.open(map, marker);\r\n\r\n              // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n              map.setCenter(coords);\r\n            }\r\n          }\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error.response);\r\n      });\r\n  }, []);\r\n\r\n  // 사진\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex =\r\n      activeIndex === houseInfo.houseInfo.housedetaiiImages.length - 1\r\n        ? 0\r\n        : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex =\r\n      activeIndex === 0\r\n        ? houseInfo.houseInfo.housedetaiiImages.length - 1\r\n        : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  const slides = houseInfo.houseInfo.housedetaiiImages.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item}\r\n      >\r\n        <>\r\n          <img\r\n            src={\"http://localhost:8000/media/\" + item}\r\n            alt={item.altText}\r\n            width=\"80%\"\r\n            height=\"300px\"\r\n          />\r\n        </>\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  // 예약하기\r\n  const HouseReservation = () => {\r\n    console.log(\" 하우스 번호  : \" + match.params.id);\r\n    console.log(\" 날짜  : \" + location.state.date);\r\n\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/houses/reservaion/${match.params.id}`,\r\n          {\r\n            reservation_range: getNthReservationRangeData(\r\n              location.state.sDate,\r\n              location.state.eDate,\r\n              sDate,\r\n              eDate\r\n            ),\r\n            planId: location.state.planId,\r\n            nextMove: location.state.nextMove,\r\n            planDateId: location.state.planDateId,\r\n            reco: location.state.reco ? true : false,\r\n            move_turn: location.state.move_turn,\r\n            reservation_id: location.state.reservation_id,\r\n          },\r\n          config\r\n        );\r\n        console.log(response);\r\n        history.push(`/index/main/travel/${location.state.planId}`);\r\n      } catch (error) {\r\n        alert(\"예약 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  //예약 취소하기\r\n  const HouseReservationCancel = () => {\r\n    console.log(\" 하우스 번호  : \" + match.params.id);\r\n    console.log(\" 날짜  : \" + location.state.date);\r\n    config.data = {\r\n      date: location.state.date,\r\n      planId: location.state.planId,\r\n\r\n      planDateId: location.state.planDateId,\r\n    };\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.delete(\r\n          `http://localhost:8000/houses/reservaion/${match.params.id}`,\r\n\r\n          config\r\n        );\r\n        console.log(response);\r\n        history.push(`/index/main/travel/${location.state.planId}`);\r\n      } catch (error) {\r\n        alert(\"예약 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 좋아요 싫어요\r\n\r\n  const LikeHouse = () => {\r\n    async function fn() {\r\n      try {\r\n        let response;\r\n        houseInfo.myLike\r\n          ? (response = await Axios.delete(\r\n              `http://localhost:8000/houses/house-like/${match.params.id}`,\r\n              config\r\n            ))\r\n          : (response = await Axios.post(\r\n              `http://localhost:8000/houses/house-like/${match.params.id}`,\r\n              {},\r\n              config\r\n            ));\r\n        console.log(\"===좋아요===\");\r\n        console.log(response);\r\n\r\n        const likeCount = houseInfo.like;\r\n        // 현상태 좋아요 -> 싫어요\r\n        if (houseInfo.myLike === false) {\r\n          seHouseInfo((prev) => ({\r\n            ...prev,\r\n            myLike: true,\r\n            like: likeCount + 1,\r\n          }));\r\n          // 현상태 싫어요 -> 좋아요 -> 싫어요\r\n        } else {\r\n          seHouseInfo((prev) => ({\r\n            ...prev,\r\n            myLike: false,\r\n            like: likeCount - 1,\r\n          }));\r\n        }\r\n      } catch (error) {\r\n        alert(\"좋아요 변경 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 예약\r\n  // input 값 변경\r\n\r\n  // 여행 시작날짜 변경\r\n  const onChangeSDate = (e) => {\r\n    let date = new Date(e);\r\n    let year = date.getFullYear(); // 년도\r\n    let month; // 월\r\n    month =\r\n      String(date.getMonth() + 1).length === 1\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1;\r\n    let day = date.getDate(); // 날짜\r\n    let resultDay = year + \"-\" + month + \"-\" + day;\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      start_date: resultDay,\r\n    }));\r\n\r\n    setSDate(e);\r\n\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      schedule: getDateRangeData(e, eDate),\r\n    }));\r\n  };\r\n  // 여행 마지막날짜 변경\r\n  const onChangeEDate = (e) => {\r\n    let date = new Date(e);\r\n    let year = date.getFullYear(); // 년도\r\n    let month; // 월\r\n    month =\r\n      String(date.getMonth() + 1).length === 1\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1;\r\n    let day = date.getDate(); // 날짜\r\n    let resultDay = year + \"-\" + month + \"-\" + day;\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      end_date: resultDay,\r\n    }));\r\n    setEDate(e);\r\n\r\n    setMakePlan((prev) => ({\r\n      ...prev,\r\n      schedule: getDateRangeData(sDate, e),\r\n    }));\r\n  };\r\n\r\n  // 여행만들기\r\n  const onSubmitMakePlan = (e) => {\r\n    e.preventDefault();\r\n    console.log(makePlan);\r\n    console.log(sDate);\r\n    console.log(eDate);\r\n\r\n    async function fn() {\r\n      console.log(\"만들어질떄 data\");\r\n      console.log(makePlan);\r\n      try {\r\n        // 스케줄 오브젝트 생성\r\n\r\n        console.log(\"=====================1\");\r\n        console.log(makePlan);\r\n        // 전송\r\n        let response = await Axios.post(\r\n          \"http://localhost:8000/plans/makeplan/\",\r\n          makePlan,\r\n          config\r\n        );\r\n\r\n        console.log(\"=====================1-1\");\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        alert(\"여행만들기 실패\");\r\n        console.log(\"=====================2\");\r\n        console.log(makePlan);\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"houseContainer\">\r\n        <div className=\"houseMainDiv\">\r\n          <div className=\"houseTitle\">{houseInfo.houseInfo.houseName}</div>\r\n          <img\r\n            src={\"http://localhost:8000\" + houseInfo.houseInfo.mainImage}\r\n            alt=\"mainImg\"\r\n            width=\"60%\"\r\n            height=\"300px\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className=\"houseDetailDiv\">\r\n          <Carousel activeIndex={activeIndex} next={next} previous={previous}>\r\n            <CarouselIndicators\r\n              items={houseInfo.houseInfo.housedetaiiImages}\r\n              activeIndex={activeIndex}\r\n              onClickHandler={goToIndex}\r\n            />\r\n            {slides}\r\n\r\n            <CarouselControl\r\n              className=\"leftDetailImageBtn\"\r\n              direction=\"prev\"\r\n              directionText=\"Previous\"\r\n              onClickHandler={previous}\r\n            />\r\n            <CarouselControl\r\n              className=\"rightDetailImageBtn\"\r\n              direction=\"next\"\r\n              directionText=\"Next\"\r\n              onClickHandler={next}\r\n            />\r\n          </Carousel>\r\n        </div>\r\n\r\n        {/* 디테일 정보 */}\r\n        <div className=\"detailHouseInfoContainer\">\r\n          <div className=\"detailHouseInfoUpper\">\r\n            <div className=\"detailHouseInfoUpperDiv\">\r\n              <div>\r\n                <div className=\"myHouse\">\r\n                  {\r\n                    <div\r\n                      id=\"myHouse\"\r\n                      style={{\r\n                        width: \"500px\",\r\n                        height: \"500px\",\r\n                      }}\r\n                    ></div>\r\n                  }\r\n                </div>\r\n                <div className=\"addressText\">\r\n                  {\" \"}\r\n                  위치 :{\" \"}\r\n                  {houseInfo.houseInfo.houseAddress +\r\n                    \" \" +\r\n                    houseInfo.houseInfo.houseDetailAddress}{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"detailHouseInfoUpperDiv\">\r\n              <div>\r\n                {houseInfo.myLike === false ? (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    outline\r\n                    className=\"scoreBtns\"\r\n                    onClick={LikeHouse}\r\n                  >\r\n                    추천 <Badge color=\"secondary\">{houseInfo.like}</Badge>\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className=\"scoreBtns\"\r\n                    onClick={LikeHouse}\r\n                  >\r\n                    추천 <Badge color=\"secondary\">{houseInfo.like}</Badge>\r\n                  </Button>\r\n                )}\r\n\r\n                <Button color=\"primary\" outline className=\"scoreBtns\">\r\n                  평점{\" \"}\r\n                  <Badge color=\"secondary\">\r\n                    {String(houseInfo.score).substr(0, 3)}\r\n                  </Badge>\r\n                </Button>\r\n              </div>\r\n              <div>\r\n                <div className=\"dateRange\">\r\n                  <h4>\r\n                    <Badge color=\"secondary\">\r\n                      {houseInfo.houseInfo.startDate}\r\n                    </Badge>\r\n                  </h4>\r\n                  <h4 className=\"dateDash\">-</h4>\r\n                  <h4>\r\n                    <Badge color=\"secondary\">\r\n                      {\" \"}\r\n                      {houseInfo.houseInfo.endDate}\r\n                    </Badge>\r\n                  </h4>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={addressImg}\r\n                    alt=\"주소\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    {houseInfo.houseInfo.houseAddress +\r\n                      \" \" +\r\n                      houseInfo.houseInfo.houseDetailAddress}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={personImg}\r\n                    alt=\"수용인원\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    최대수용 인원 {houseInfo.houseInfo.maxPerson} 명\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={priceImg}\r\n                    alt=\"가격\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    1박 당 {houseInfo.houseInfo.housePrice} 원\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={roomImg}\r\n                    alt=\"방갯수\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    {\" \"}\r\n                    방 {houseInfo.houseInfo.rooms} 개\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={houseTypeImg}\r\n                    alt=\"타입\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    형태 {houseInfo.houseInfo.houseType}{\" \"}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <div>\r\n                    <Card>\r\n                      <CardBody>\r\n                        <Form onSubmit={onSubmitMakePlan}>\r\n                          <Row form>\r\n                            <Button color=\"primary\" size=\"lg\" block>\r\n                              <Badge color=\"light\" pill>\r\n                                여행기간 : {location.state.sDate} ~{\" \"}\r\n                                {location.state.eDate}\r\n                              </Badge>{\" \"}\r\n                            </Button>\r\n                          </Row>\r\n                          <Row form>\r\n                            <Col md={6}>\r\n                              <FormGroup>\r\n                                <Label for=\"exampleState\">Start Date</Label>\r\n                                <br />\r\n                                <DatePicker\r\n                                  minDate={new Date(location.state.sDate)}\r\n                                  selected={sDate}\r\n                                  onChange={(date) => onChangeSDate(date)}\r\n                                  selectsStart\r\n                                  startDate={new Date(location.state.sDate)}\r\n                                  endDate={new Date(location.state.eDate)}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                              <FormGroup>\r\n                                <Label for=\"exampleZip\">Last Date</Label>\r\n                                <br />\r\n                                <DatePicker\r\n                                  selected={eDate}\r\n                                  onChange={(date) => onChangeEDate(date)}\r\n                                  selectsEnd\r\n                                  startDate={new Date(location.state.sDate)}\r\n                                  endDate={new Date(location.state.eDate)}\r\n                                  minDate={new Date(location.state.sDate)}\r\n                                  maxDate={new Date(location.state.eDate)}\r\n                                />\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Row>\r\n                        </Form>\r\n                      </CardBody>\r\n                    </Card>\r\n                  </div>\r\n                  {location.state.search === 1 ? (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      onClick={HouseReservation}\r\n                    >\r\n                      <Badge color=\"light\" pill></Badge> 예약하기\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"lg\"\r\n                      block\r\n                      onClick={HouseReservationCancel}\r\n                    >\r\n                      <Badge color=\"light\" pill>\r\n                        {location.state.date}\r\n                      </Badge>{\" \"}\r\n                      예약 취소 하기\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              {/* <div>예약하기</div> roomImg houseTypeImg */}\r\n            </div>\r\n          </div>\r\n          <div className=\"detailHouseInfobotDiv\">\r\n            <div className=\"noticeDiv\">\r\n              <div\r\n                className={\"noticeTitle\" + (!choiceBoard && \" boardActive\")}\r\n                onClick={choiceNotice}\r\n              >\r\n                <div>공지사항 </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"repleDiv\">\r\n              <div\r\n                className={\"repleTitle\" + (choiceBoard && \" boardActive\")}\r\n                onClick={choiceReple}\r\n              >\r\n                <div>\r\n                  문의사항{\" \"}\r\n                  <img\r\n                    onClick={showRepleModal}\r\n                    src={repleImg}\r\n                    alt=\"repleImg\"\r\n                    width=\"50px\"\r\n                    height=\"50px\"\r\n                  />{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {!choiceBoard ? (\r\n            <div className=\"noticeContentDiv\">\r\n              {notice.map((item, idx) => (\r\n                <NoticeItem\r\n                  // type 0(집소유) 1(여행자)\r\n                  type=\"1\"\r\n                  idx={idx}\r\n                  key={item.id}\r\n                  notice={item}\r\n                  setNotice={setNotice}\r\n                  houseId={match.params.pk}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"repleContentDiv\">\r\n              {qna.map((item, idx) => (\r\n                <QnaItem\r\n                  idx={idx}\r\n                  key={item.pk}\r\n                  qna={item}\r\n                  qnaList={qna}\r\n                  setQna={setQna}\r\n                  houseId={match.params.id}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 모달 */}\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>문의사항</ModalHeader>\r\n          <ModalBody>\r\n            <span className=\"noticeModalTitle\">제 목 : </span>\r\n            <input\r\n              required={true}\r\n              onChange={qnaWrite}\r\n              name=\"title\"\r\n              className=\"QnATitle\"\r\n            ></input>\r\n            <textarea\r\n              required={true}\r\n              className=\"noticeContent\"\r\n              name=\"content\"\r\n              onChange={qnaWrite}\r\n              placeholder=\"내용\"\r\n              cols=\"56\"\r\n              rows=\"10\"\r\n            ></textarea>\r\n            공개 여부(체크 시 비공개){\" \"}\r\n            <input type=\"checkbox\" onChange={qnaWrite} name=\"public\"></input>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={qnASave}>\r\n              작성\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              취소\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction getDateRangeData(param1, param2) {\r\n  console.log(\"==getDateRangeData==\");\r\n  console.log(\"시작 : \" + param1);\r\n  console.log(\"끝 : \" + param2);\r\n  //param1은 시작일, param2는 종료일이다.\r\n  let res_day = [];\r\n  let ss_day = new Date(param1);\r\n  let ee_day = new Date(param2);\r\n  let nth = 1;\r\n  while (ss_day.getTime() <= ee_day.getTime()) {\r\n    let obj = {};\r\n    let _mon_ = ss_day.getMonth() + 1;\r\n    _mon_ = _mon_ < 10 ? \"0\" + _mon_ : _mon_;\r\n    let _day_ = ss_day.getDate();\r\n    _day_ = _day_ < 10 ? \"0\" + _day_ : _day_;\r\n\r\n    obj[\"date\"] = ss_day.getFullYear() + \"-\" + _mon_ + \"-\" + _day_;\r\n    obj[\"nth_day\"] = nth;\r\n\r\n    nth++;\r\n    res_day.push(obj);\r\n\r\n    ss_day.setDate(ss_day.getDate() + 1);\r\n  }\r\n  return res_day;\r\n}\r\n// ts, td  여행 첫날, 마지막날\r\n// rs re 예약 첫날, 예약 마지막날\r\nfunction getNthReservationRangeData(ts, te, rs, re) {\r\n  let res_day = [];\r\n  let ss_day = new Date(ts);\r\n  let ee_day = new Date(te);\r\n\r\n  while (ss_day.getTime() <= ee_day.getTime()) {\r\n    let _mon_ = ss_day.getMonth() + 1;\r\n    _mon_ = _mon_ < 10 ? \"0\" + _mon_ : _mon_;\r\n    let _day_ = ss_day.getDate();\r\n    _day_ = _day_ < 10 ? \"0\" + _day_ : _day_;\r\n\r\n    let date = ss_day.getFullYear() + \"-\" + _mon_ + \"-\" + _day_;\r\n\r\n    res_day.push(date);\r\n\r\n    ss_day.setDate(ss_day.getDate() + 1);\r\n  }\r\n\r\n  //param1은 시작일, param2는 종료일이다.\r\n  let resultList = [];\r\n  let rs_day = new Date(rs);\r\n  let re_day = new Date(re);\r\n\r\n  while (rs_day.getTime() <= re_day.getTime()) {\r\n    let obj = {};\r\n    let _mon_ = rs_day.getMonth() + 1;\r\n    _mon_ = _mon_ < 10 ? \"0\" + _mon_ : _mon_;\r\n    let _day_ = rs_day.getDate();\r\n    _day_ = _day_ < 10 ? \"0\" + _day_ : _day_;\r\n\r\n    let rDate = rs_day.getFullYear() + \"-\" + _mon_ + \"-\" + _day_;\r\n    obj[\"date\"] = rDate;\r\n    obj[\"nth_day\"] = res_day.indexOf(rDate) + 1;\r\n\r\n    resultList.push(obj);\r\n\r\n    rs_day.setDate(rs_day.getDate() + 1);\r\n  }\r\n  return resultList;\r\n}\r\n\r\nexport default ReservationHouse;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\qnaItem.js",["620"],"import React, { useState, useEffect } from \"react\";\r\nimport { VscAccount, VscKey } from \"react-icons/vsc\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  Button,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./qnaItem.scss\";\r\nimport QnaReple from \"./qnaReple\";\r\n\r\nconst QnaItem = ({ idx, qna, qnaList, setQna, houseId, type }) => {\r\n  const { store } = useAppContext();\r\n  console.log(\"===houseId : \", houseId);\r\n  console.log(\"===qna : \", qna);\r\n  console.log(\"===qnaList : \", qnaList);\r\n  console.log(\"===store : \", store);\r\n\r\n  // 오리진\r\n  const [originQnaContent, setOriginQnaContent] = useState({\r\n    title: qna.title,\r\n    content: qna.content,\r\n    public: qna.public,\r\n  });\r\n\r\n  const [qnaContent, setQnaContent] = useState({\r\n    title: qna.title,\r\n    content: qna.content,\r\n    public: qna.public,\r\n  });\r\n  const [repleList, setRepleList] = useState([]);\r\n\r\n  const [repleContent, setRepleContent] = useState(\"\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  const [repleActive, setRepleActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOriginQnaContent({\r\n      title: qna.title,\r\n      content: qna.content,\r\n      public: qna.public,\r\n    });\r\n\r\n    setQnaContent({\r\n      title: qna.title,\r\n      content: qna.content,\r\n      public: qna.public,\r\n    });\r\n  }, []);\r\n\r\n  const showQnaModal = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/houses/qna-reple/${qna.pk}`,\r\n\r\n          config\r\n        );\r\n        console.log(\"댓글 가져오기\");\r\n        console.log(response);\r\n        setRepleList(response.data);\r\n      } catch (error) {\r\n        alert(\"댓글 가져오기 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    // 작성자면\r\n    if (store.userName === qna.user.name) {\r\n      setModal(!modal);\r\n      fn();\r\n      // 작성자는 다르나 공개이면\r\n    } else if (store.userName !== qna.user.name && qna.public === false) {\r\n      setModal(!modal);\r\n      fn();\r\n\r\n      // 하우스 운영자\r\n    } else if (type === \"0\") {\r\n      setModal(!modal);\r\n      fn();\r\n\r\n      // 작성자는 다르나 비공개이면\r\n    } else if (store.userName !== qna.user.name && qna.public === true) {\r\n      alert(\"비공개 게시물 입니다.\");\r\n    }\r\n  };\r\n\r\n  const toggleInit = () => {\r\n    setQnaContent(originQnaContent);\r\n    toggle();\r\n  };\r\n  // 공지사항 글 작성\r\n  const qnaWrite = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"public\") {\r\n      setQnaContent((prev) => ({\r\n        ...prev,\r\n        [name]: !qnaContent[\"public\"],\r\n      }));\r\n    } else {\r\n      setQnaContent((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  //모달 (공지사항)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n    setRepleActive(false);\r\n  };\r\n  // 문의사항 업데이트\r\n  const qnaSave = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.put(\r\n          `http://localhost:8000/houses/qna/${qna.pk}`,\r\n          { content: qnaContent, houseId: houseId },\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        setQna(response.data);\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 문의사항 삭제\r\n  const qnaDelete = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.delete(\r\n          `http://localhost:8000/houses/qna/${qna.pk}`,\r\n\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        setQna(qnaList.filter((item) => item.pk !== qna.pk));\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 대댓글\r\n  const writeReple = () => {\r\n    setRepleActive(!repleActive);\r\n  };\r\n  const repleChange = (e) => {\r\n    let value = e.target.value;\r\n    setRepleContent(value);\r\n  };\r\n  // 댓글 쓰기\r\n  const repleSave = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/houses/qna-reple/${qna.pk}`,\r\n          { content: repleContent, houseId: houseId },\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        setRepleList(repleList.concat(response.data));\r\n        setRepleContent(\"\");\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"qnaBoardDiv\" onClick={showQnaModal}>\r\n        <div className=\"qnaBoardDivOrderDiv\">\r\n          <h2>\r\n            <Badge color=\"secondary\" className=\"qnaBoardDivOrder\">\r\n              {\" \"}\r\n              {idx + 1}\r\n            </Badge>\r\n          </h2>\r\n        </div>\r\n        <div className=\"qnaBoardUserDiv\">\r\n          <div>\r\n            <img\r\n              alt={\"프로필\"}\r\n              width=\"50\"\r\n              height=\"50\"\r\n              src={`http://localhost:8000${qna.user.profile.avatar}`}\r\n            ></img>\r\n          </div>\r\n          <div>{qna.user.name}</div>\r\n        </div>\r\n        <div className=\"qnaBoardTitleDiv\">\r\n          <div className=\"qnaBoardTitle\">{qna.title}</div>\r\n        </div>\r\n        <div className=\"qnaBoardDateDiv\">\r\n          <div className=\"qnaBoardDate\">{qna.created_at.substr(0, 10)}</div>\r\n        </div>\r\n        <div className=\"qnaBoardImgDiv\">\r\n          {store.userName === qna.user.name && <VscAccount />}\r\n          {qna.public === true && <VscKey />}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 모달 */}\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader>문의사항</ModalHeader>\r\n          <ModalBody>\r\n            <span className=\"noticeModalTitle\">제 목 : </span>\r\n            {store.userName === qna.user.name ? (\r\n              <>\r\n                <input\r\n                  onChange={qnaWrite}\r\n                  name=\"title\"\r\n                  value={qnaContent[\"title\"]}\r\n                ></input>\r\n                <textarea\r\n                  className=\"noticeContent\"\r\n                  name=\"content\"\r\n                  onChange={qnaWrite}\r\n                  placeholder=\"공지할 글 작성\"\r\n                  defaultValue={qnaContent[\"content\"]}\r\n                  cols=\"56\"\r\n                  rows=\"10\"\r\n                ></textarea>\r\n                공개 여부(체크 시 비공개){\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={qnaWrite}\r\n                  name=\"public\"\r\n                  checked={qnaContent[\"public\"]}\r\n                ></input>\r\n                <hr />\r\n                <div\r\n                  className={\r\n                    \"repleModalDiv \" +\r\n                    (repleActive ? \"repleModalActive\" : \"notRepleModalActive\")\r\n                  }\r\n                >\r\n                  <div>\r\n                    <textarea\r\n                      onChange={repleChange}\r\n                      cols=\"50\"\r\n                      className=\"\"\r\n                      value={repleContent}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"repleModalBtn\"\r\n                      onClick={repleSave}\r\n                    >\r\n                      작성\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"repleDivContain\">\r\n                  {repleList.map((item, idx) => (\r\n                    <QnaReple\r\n                      idx={idx}\r\n                      key={item.pk}\r\n                      info={item}\r\n                      repleList={repleList}\r\n                      setRepleList={setRepleList}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input name=\"title\" value={qna.title} readOnly={true}></input>\r\n                <textarea\r\n                  className=\"noticeContent\"\r\n                  name=\"content\"\r\n                  placeholder=\"공지할 글 작성\"\r\n                  cols=\"56\"\r\n                  rows=\"10\"\r\n                  defaultValue={qna.content}\r\n                  readOnly={true}\r\n                ></textarea>{\" \"}\r\n                <hr />\r\n                <div\r\n                  className={\r\n                    \"repleModalDiv \" +\r\n                    (repleActive ? \"repleModalActive\" : \"notRepleModalActive\")\r\n                  }\r\n                >\r\n                  <div>\r\n                    <textarea\r\n                      onChange={repleChange}\r\n                      cols=\"50\"\r\n                      className=\"\"\r\n                      defaultValue={repleContent}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"repleModalBtn\"\r\n                      onClick={repleSave}\r\n                    >\r\n                      작성\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"repleDivContain\">\r\n                  {repleList.map((item, idx) => (\r\n                    <QnaReple\r\n                      type=\"0\"\r\n                      idx={idx}\r\n                      key={item.pk}\r\n                      info={item}\r\n                      repleList={repleList}\r\n                      setRepleList={setRepleList}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {store.userName === qna.user.name ? (\r\n              <>\r\n                <Button color=\"primary\" onClick={qnaSave}>\r\n                  수정\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={qnaDelete}>\r\n                  삭제\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <Button color=\"secondary\" onClick={writeReple}>\r\n              댓글쓰기\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={toggleInit}>\r\n              취소\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QnaItem;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\qnaReple.js",["621"],"import React, { useState } from \"react\";\r\nimport {\r\n  VscDiffModified,\r\n  VscDebugStart,\r\n  VscDebugStepBack,\r\n  VscDiffRemoved,\r\n} from \"react-icons/vsc\";\r\nimport Axios from \"axios\";\r\nimport { Tooltip } from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./qnaReple.scss\";\r\nconst QnaReple = ({ info, idx, repleList, setRepleList, type }) => {\r\n  const { store } = useAppContext();\r\n  const [modifyActive, setModifyActive] = useState(false);\r\n  const [repleContentOrigin, setRepleContentOrigin] = useState(info.content);\r\n  const [repleContentModi, setRepleContentModi] = useState(info.content);\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  // 삭제\r\n  const [tooltipOpenRemo, setTooltipOpenRemo] = useState(false);\r\n\r\n  const toggleRemo = () => {\r\n    console.log(\"toggleRemo\");\r\n    setTooltipOpenRemo(!tooltipOpenRemo);\r\n  };\r\n\r\n  // 수정\r\n  const [tooltipOpenModi, setTooltipOpenModi] = useState(false);\r\n\r\n  const toggleModi = () => {\r\n    console.log(\"toggleModi\");\r\n    setTooltipOpenModi(!tooltipOpenModi);\r\n  };\r\n\r\n  // 돌아가기\r\n  const [tooltipOpenBack, setTooltipOpenBack] = useState(false);\r\n\r\n  const toggleBack = () => {\r\n    console.log(\"toggleBack\");\r\n    setTooltipOpenBack(!tooltipOpenBack);\r\n  };\r\n\r\n  // 수정완료\r\n  const [tooltipOpenStart, setTooltipOpenStart] = useState(false);\r\n\r\n  const toggleStart = () => {\r\n    console.log(\"toggleStart\");\r\n    setTooltipOpenStart(!tooltipOpenStart);\r\n  };\r\n\r\n  const onModifiReple = () => {\r\n    setModifyActive(true);\r\n  };\r\n\r\n  const onModifiCancelReple = () => {\r\n    setRepleContentModi(repleContentOrigin);\r\n    setModifyActive(false);\r\n  };\r\n\r\n  const onModifiActiveReple = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.put(\r\n          `http://localhost:8000/houses/qna-reple/${info.pk}`,\r\n          { content: repleContentModi },\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        //setRepleList(response.data);\r\n\r\n        setModifyActive(false);\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const onDeleteReple = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.delete(\r\n          `http://localhost:8000/houses/qna-reple/${info.pk}`,\r\n\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        console.log(repleList);\r\n        setRepleList(repleList.filter((item) => item.pk !== info.pk));\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  console.log(\"info : \", info);\r\n  return (\r\n    <div className=\"qnaRepleDiv\">\r\n      <div className=\"qnaRepleLeft\">\r\n        <div>\r\n          <img\r\n            alt={\"프로필\"}\r\n            width=\"50\"\r\n            height=\"50\"\r\n            src={\r\n              store.userName === info.user.name && type === \"0\"\r\n                ? \"http://localhost:8000/media/public/home.png\"\r\n                : `http://localhost:8000${info.user.profile.avatar}`\r\n            }\r\n          ></img>\r\n        </div>\r\n        <div>\r\n          {store.userName === info.user.name && type === \"0\"\r\n            ? \"집주인\"\r\n            : info.user.name}\r\n        </div>\r\n      </div>\r\n      <div className=\"qnaRepleRight\">\r\n        <div className=\"qnaRepleModalContent\">\r\n          <div>\r\n            {modifyActive ? (\r\n              <textarea\r\n                cols=\"45\"\r\n                rows=\"2\"\r\n                onChange={(e) => {\r\n                  setRepleContentModi(e.target.value);\r\n                }}\r\n                value={repleContentModi}\r\n              ></textarea>\r\n            ) : (\r\n              <textarea\r\n                readOnly={true}\r\n                cols=\"45\"\r\n                rows=\"2\"\r\n                value={repleContentModi}\r\n              ></textarea>\r\n            )}\r\n          </div>\r\n          {store.userName === info.user.name && (\r\n            <div>\r\n              <div className={modifyActive && \"repleActiveBtn\"}>\r\n                <VscDiffModified onClick={onModifiReple} id={\"modi\" + idx} />\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpenModi}\r\n                  target={\"modi\" + idx}\r\n                  toggle={toggleModi}\r\n                >\r\n                  수정\r\n                </Tooltip>\r\n                <br></br>\r\n                <VscDiffRemoved\r\n                  onClick={onDeleteReple}\r\n                  id={\"remo\" + idx}\r\n                />{\" \"}\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpenRemo}\r\n                  target={\"remo\" + idx}\r\n                  toggle={toggleRemo}\r\n                >\r\n                  삭제\r\n                </Tooltip>\r\n              </div>\r\n              <div className={!modifyActive && \"repleActiveBtn\"}>\r\n                <VscDebugStart\r\n                  onClick={onModifiActiveReple}\r\n                  id={\"start\" + idx}\r\n                />\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpenStart}\r\n                  target={\"start\" + idx}\r\n                  toggle={toggleStart}\r\n                >\r\n                  수정완료\r\n                </Tooltip>\r\n                <br></br>\r\n                <VscDebugStepBack\r\n                  onClick={onModifiCancelReple}\r\n                  id={\"back\" + idx}\r\n                />{\" \"}\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpenBack}\r\n                  target={\"back\" + idx}\r\n                  toggle={toggleBack}\r\n                >\r\n                  돌아가기\r\n                </Tooltip>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"qnaRepleModalDate\">\r\n          {info.created_at.substr(0, 10) + \" \" + info.created_at.substr(11, 8)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QnaReple;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\dateChangeModal.js",["622","623","624","625","626","627"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Spinner,\r\n  FormGroup,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./dateChangeModal.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst DateChangeModal = ({\r\n  modal,\r\n  toggle,\r\n  oSDate,\r\n  oEDate,\r\n  planId,\r\n  dateChangeModal,\r\n  setDetailPlanInfo,\r\n}) => {\r\n  const [sDate, setSDate] = useState(new Date(oSDate));\r\n  const [eDate, setEDate] = useState(new Date(oEDate));\r\n  const { store } = useAppContext();\r\n  const [sendData, setSendData] = useState({});\r\n  const history = useHistory();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  console.log(\"===DateChangeModal===\");\r\n  console.log(\"oSDate : \", oSDate);\r\n  console.log(\"oEDate : \", oEDate);\r\n  console.log(\"planId : \", planId);\r\n  console.log(\"sDate : \", sDate);\r\n\r\n  console.log(\"sDate gg: \", sDate.getFullYear());\r\n\r\n  console.log(\"eDate : \", eDate);\r\n  const calendar = useRef(null);\r\n\r\n  const onFoucsDate = () => {\r\n    //calendar.current.setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSendData({\r\n      sDate: getDateDash(oSDate),\r\n      eDate: getDateDash(oEDate),\r\n      schedule: getDateRangeData(getDateDash(oSDate), getDateDash(oEDate)),\r\n    });\r\n    onFoucsDate();\r\n  }, [dateChangeModal]);\r\n  // 여행 시작날짜 변경\r\n  const onChangeSDate = (e) => {\r\n    let date = new Date(e);\r\n    let year = date.getFullYear(); // 년도\r\n    let month; // 월\r\n    month =\r\n      String(date.getMonth() + 1).length === 1\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1;\r\n    let day = date.getDate(); // 날짜\r\n    let resultDay = year + \"-\" + month + \"-\" + day;\r\n    setSendData((prev) => ({\r\n      ...prev,\r\n      sDate: resultDay,\r\n    }));\r\n    setSDate(e);\r\n    setSendData((prev) => ({\r\n      ...prev,\r\n      schedule: getDateRangeData(e, eDate),\r\n    }));\r\n  };\r\n  // 여행 마지막날짜 변경\r\n  const onChangeEDate = (e) => {\r\n    let date = new Date(e);\r\n    let year = date.getFullYear(); // 년도\r\n    let month; // 월\r\n    month =\r\n      String(date.getMonth() + 1).length === 1\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1;\r\n    let day = date.getDate(); // 날짜\r\n    let resultDay = year + \"-\" + month + \"-\" + day;\r\n    setSendData((prev) => ({\r\n      ...prev,\r\n      eDate: resultDay,\r\n    }));\r\n    setEDate(e);\r\n    setSendData((prev) => ({\r\n      ...prev,\r\n      schedule: getDateRangeData(sDate, e),\r\n    }));\r\n  };\r\n\r\n  const sendChangeData = () => {\r\n    console.log(\"=====sendChangeData=====\");\r\n    console.log(sendData);\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/plans/change-date/${planId}`,\r\n          sendData,\r\n          config\r\n        );\r\n        console.log(\"----집 검색---\");\r\n        console.log(response.data);\r\n        if (response.data === \"includeHouse\") {\r\n          alert(\"숙소가 예약되어 있습니다. 변경하실수없습니다.\");\r\n        } else {\r\n          setDetailPlanInfo(response.data);\r\n          //window.location.reload();\r\n          //history.go(0);\r\n          //history.push(`/index/main/travel/${planId}`);\r\n          toggle();\r\n        }\r\n      } catch (error) {\r\n        alert(\"집검색 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n    //toggle();\r\n  };\r\n\r\n  const closeDataChangeModal = () => {\r\n    setSDate(new Date(oSDate));\r\n    setEDate(new Date(oEDate));\r\n    toggle();\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle} size=\"lg\" className=\"asd\">\r\n        <ModalHeader toggle={toggle}>\r\n          <div>\r\n            <div>날짜변경</div>\r\n          </div>\r\n        </ModalHeader>\r\n\r\n        <ModalBody>\r\n          <div className=\"changeDateModalBody\">\r\n            <div>\r\n              <Label for=\"exampleState\">Start Date : </Label>\r\n              <br />\r\n              <DatePicker\r\n                inline\r\n                minDate={new Date()}\r\n                selected={isNaN(sDate.getFullYear()) ? new Date(oSDate) : sDate}\r\n                onChange={(date) => onChangeSDate(date)}\r\n                selectsStart\r\n                startDate={\r\n                  isNaN(sDate.getFullYear()) ? new Date(oSDate) : sDate\r\n                }\r\n                endDate={isNaN(eDate.getFullYear()) ? new Date(oEDate) : eDate}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Label for=\"exampleZip\">Last Date : </Label>\r\n              <br />\r\n              <DatePicker\r\n                inline\r\n                selected={isNaN(eDate.getFullYear()) ? new Date(oEDate) : eDate}\r\n                onChange={(date) => onChangeEDate(date)}\r\n                selectsEnd\r\n                startDate={\r\n                  isNaN(sDate.getFullYear()) ? new Date(oSDate) : sDate\r\n                }\r\n                endDate={isNaN(eDate.getFullYear()) ? new Date(oEDate) : eDate}\r\n                minDate={isNaN(sDate.getFullYear()) ? new Date(oSDate) : sDate}\r\n              />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={sendChangeData}>\r\n            변경\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={closeDataChangeModal}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction getDateRangeData(param1, param2) {\r\n  console.log(\"==getDateRangeData==\");\r\n  console.log(\"시작 : \" + param1);\r\n  console.log(\"끝 : \" + param2);\r\n  //param1은 시작일, param2는 종료일이다.\r\n  let res_day = [];\r\n  let ss_day = new Date(param1);\r\n  let ee_day = new Date(param2);\r\n  let nth = 1;\r\n  while (ss_day.getTime() <= ee_day.getTime()) {\r\n    let obj = {};\r\n    let _mon_ = ss_day.getMonth() + 1;\r\n    _mon_ = _mon_ < 10 ? \"0\" + _mon_ : _mon_;\r\n    let _day_ = ss_day.getDate();\r\n    _day_ = _day_ < 10 ? \"0\" + _day_ : _day_;\r\n\r\n    obj[\"date\"] = ss_day.getFullYear() + \"-\" + _mon_ + \"-\" + _day_;\r\n    obj[\"nth_day\"] = nth;\r\n\r\n    nth++;\r\n    res_day.push(obj);\r\n\r\n    ss_day.setDate(ss_day.getDate() + 1);\r\n  }\r\n  return res_day;\r\n}\r\n\r\nfunction getDateDash(param1) {\r\n  let date = new Date(param1);\r\n  let year = date.getFullYear(); // 년도\r\n  let month; // 월\r\n  month =\r\n    String(date.getMonth() + 1).length === 1\r\n      ? \"0\" + (date.getMonth() + 1)\r\n      : date.getMonth() + 1;\r\n  let day = date.getDate(); // 날짜\r\n  let resultDay = year + \"-\" + month + \"-\" + day;\r\n  return resultDay;\r\n}\r\nexport default DateChangeModal;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\moveDetailPlan.js",["628","629","630","631","632","633","634"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Spinner,\r\n  FormGroup,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./dateChangeModal.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MoveDetailPlan = ({\r\n  date,\r\n  modal,\r\n  toggle,\r\n  planId,\r\n  planDateId,\r\n  nthDay,\r\n}) => {\r\n  console.log(\"===MoveDetailPlan===\");\r\n  console.log(\"date : \", date);\r\n  console.log(\"planId : \", planId);\r\n  console.log(\"planDateId : \", planDateId);\r\n  console.log(\"nthDay : \", nthDay);\r\n\r\n  useEffect(() => {\r\n    modal && alert(\"gg\");\r\n  }, [modal]);\r\n\r\n  const closeMoveModal = () => {\r\n    toggle();\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle} size=\"lg\" className=\"asd\">\r\n        <ModalHeader toggle={toggle}>\r\n          <div>\r\n            <div>계획 이동 시키기</div>\r\n          </div>\r\n        </ModalHeader>\r\n\r\n        <ModalBody>\r\n          <div className=\"changeDateModalBody\">\r\n            <div>\r\n              <Label for=\"exampleState\">Start Date : </Label>\r\n              <br />\r\n              <input />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={null}>\r\n            변경\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={closeMoveModal}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveDetailPlan;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\travelMyHistory.js",["635","636","637","638","639"],"import React from \"react\";\r\nimport { Button, Nav, NavItem, NavLink, Badge } from \"reactstrap\";\r\nimport HouseBook from \"../history/houseBook\";\r\nimport SharePlan from \"../history/sharePlan\";\r\nimport \"./travelMyHistory.scss\";\r\nconst TravelMyHistory = () => {\r\n  return (\r\n    <div className=\"myHistoryMain\">\r\n      <SharePlan />\r\n      <HouseBook />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TravelMyHistory;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\sharePlan.js",["640","641","642"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport TravelMyPlanList from \"../travel/travelMyPlanList\";\r\nimport SharePlanApplyItem from \"./sharePlanApplyItem\";\r\nimport ShareList from \"./shareList\";\r\nconst SharePlan = () => {\r\n  const { store } = useAppContext();\r\n  const [modal, setModal] = useState(false);\r\n  const [makePlanList, setMakePlanList] = useState([]);\r\n  const [shareList, setShareList] = useState([]);\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          \"http://localhost:8000/plans/apply-plan/\",\r\n          config\r\n        );\r\n        console.log(\"공유플랜 불러오기\");\r\n        console.log(response);\r\n        setShareList(response.data.myPlan);\r\n      } catch (error) {\r\n        alert(\"공유플랜 불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n  const showMyPlanList = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          \"http://localhost:8000/plans/will-apply-plan/\",\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setMakePlanList(makePlanList.concat(response.data.myPlan));\r\n\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"historyContainer\">\r\n        <div className=\"memberInPlan\">\r\n          <Nav tabs>\r\n            <NavItem className=\"historyTitle \">\r\n              <NavLink>\r\n                {\" \"}\r\n                나의 여행 공유{\" \"}\r\n                <Button onClick={showMyPlanList} className=\"applyShaerPlanBtn\">\r\n                  공유 신청\r\n                </Button>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </div>\r\n        <div className=\"historyContent\">\r\n          {shareList.map((item, idx) => (\r\n            <ShareList\r\n              key={item.id}\r\n              id={item.id}\r\n              basicInfo={item}\r\n              shareList={shareList}\r\n              setShareList={setShareList}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {/* 모달 */}\r\n      <div>\r\n        <Modal size=\"lg\" isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>내 여행 계획 공유 신청</ModalHeader>\r\n          <ModalBody>\r\n            {makePlanList.map((item, idx) => (\r\n              <SharePlanApplyItem\r\n                number={idx + 1}\r\n                key={item.id}\r\n                id={item.id}\r\n                basicInfo={item}\r\n                setShareList={setShareList}\r\n                shareList={shareList}\r\n                makePlanList={makePlanList}\r\n                setMakePlanList={setMakePlanList}\r\n              />\r\n            ))}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SharePlan;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\sharePlanApplyItem.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\shareList.js",["643"],"import React, { useState } from \"react\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Tooltip,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport \"../travel/travelMyPlanList.scss\";\r\n\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nconst ShareList = ({ id, basicInfo, shareList, setShareList }) => {\r\n  console.log(\"==ShareList==\");\r\n  console.log(\"basicInfo ; \", basicInfo);\r\n  console.log(\"shareList ; \", shareList);\r\n  const [rejectModal, setModal] = useState(false);\r\n\r\n  const rejectToggle = () => setModal(!rejectModal);\r\n\r\n  const [rejectReason, setRejectReason] = useState(\"\");\r\n\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  // 심사중일땐 1->0으로 변경해주기\r\n  // 완료 일땐, share plan에서 삭제 해주고 2->1로\r\n  const onCancelShare = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.put(\r\n          `http://localhost:8000/plans/cancel-apply-plan/`,\r\n          { planId: id, shareType: basicInfo.share },\r\n          config\r\n        );\r\n        console.log(\"여행 신청\");\r\n        console.log(response.data);\r\n        setShareList(shareList.filter((item) => item.id !== id));\r\n      } catch (error) {\r\n        alert(\"여행 신청 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  //거절 이유 보기\r\n  const showRejectReason = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/show-reject/${id}`,\r\n          config\r\n        );\r\n\r\n        console.log(\"==showRejectReason==\");\r\n        console.log(response);\r\n        setRejectReason(response.data);\r\n        rejectToggle();\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"travelMyPlanListMain\">\r\n        <div className=\"planNumberFlex\">\r\n          {basicInfo.share === 1 ? (\r\n            <Badge className=\"planNumber\" color=\"warning\">\r\n              심사\r\n            </Badge>\r\n          ) : basicInfo.share === 2 ? (\r\n            <Badge className=\"planNumber\" color=\"primary\">\r\n              승인\r\n            </Badge>\r\n          ) : (\r\n            basicInfo.share === 3 && (\r\n              <Badge className=\"planNumber\" color=\"danger\">\r\n                거절\r\n              </Badge>\r\n            )\r\n          )}\r\n        </div>\r\n        <div className=\"planMiddleFlex\">\r\n          <div className=\"planTitleFlex\">\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"plan_title\"]}</Badge>\r\n            </div>\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"location\"]}</Badge>\r\n            </div>\r\n          </div>\r\n          <div className=\"planDateFlex\">\r\n            <Badge color=\"info\">{basicInfo[\"start_date\"]}</Badge>~\r\n            <Badge color=\"info\">{basicInfo[\"end_date\"]}</Badge>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {basicInfo.share === 3 ? (\r\n            <>\r\n              <Button\r\n                size=\"sm\"\r\n                color=\"primary\"\r\n                outline\r\n                onClick={showRejectReason}\r\n              >\r\n                이유\r\n              </Button>\r\n              <span> </span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                size=\"sm\"\r\n                color=\"primary\"\r\n                outline\r\n                className=\"invisibleShareReject\"\r\n                onClick={showRejectReason}\r\n              >\r\n                이유\r\n              </Button>\r\n              <span> </span>\r\n            </>\r\n          )}\r\n          <Button size=\"sm\" color=\"primary\" outline onClick={onCancelShare}>\r\n            취소\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Modal isOpen={rejectModal} toggle={rejectToggle}>\r\n          <ModalHeader toggle={rejectToggle}>\r\n            '{basicInfo.plan_title}' 거절 이유\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            {rejectReason}\r\n            <hr></hr>\r\n            {/* <div className=\"noticeReject\">\r\n              다시 심사를 신청하고자 할땐, 반드시 하단에 [초기화하기]를 눌러야\r\n              합니다.\r\n            </div> */}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {/* <Button color=\"primary\" onClick={initHouse}>\r\n              초기화하기\r\n            </Button>{\" \"} */}\r\n            <Button color=\"secondary\" onClick={rejectToggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShareList;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminMain.js",["644","645"],"import React from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport AdminManage from \"./adminManage\";\r\n\r\nconst AdminMain = () => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"houseNav\">\r\n        <div className=\"houseMenu\">관리</div>\r\n      </div>\r\n\r\n      <div>\r\n        <Route exact path=\"/index/main/admin/manage\" component={AdminManage} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminMain;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminManage.js",["646","647","648","649"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\n\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./adminManage.scss\";\r\nimport AdminEvaluateList from \"./adminEvaluateList\";\r\nimport ShowDetailPlan from \"./showDetailPlan\";\r\nimport ShowDetailHouse from \"./showDetailHouse\";\r\nimport NoticeItem from \"../house/noticeItem\";\r\nimport QnaItem from \"../house/qnaItem\";\r\nimport AdminNoticeItem from \"./adminNoticeItem\";\r\nimport AdminQnaItem from \"./adminQnaItem\";\r\nconst AdminManage = () => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  //false 여행 // true 숙소\r\n  const [evaluateType, setEvaluateType] = useState(false);\r\n  const [choiceId, setChoiceId] = useState(0);\r\n  const [houseList, setHouseList] = useState([]);\r\n  const [planList, setPlanList] = useState([]);\r\n\r\n  // 공지사항 모달\r\n  //모달 (공지사항)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  // 질문 글\r\n  const [qna, setQna] = useState([]);\r\n  // 공지 글\r\n  const [notice, setNotice] = useState([]);\r\n  // 공지 사항 글 내용\r\n  const [noticeContent, setNoticeContent] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n  // 공지사항 글 작성\r\n  const noticeWrite = (e) => {\r\n    const { name, value } = e.target;\r\n    setNoticeContent((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const showNoticeModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  //\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/gabomAdmin/noticeAndQna/`,\r\n          config\r\n        );\r\n\r\n        setNotice(response.data.notice);\r\n        setQna(response.data.qna);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n\r\n  // 공지사항 글 작성 완료\r\n  const noticeSave = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/gabomAdmin/notice/0`,\r\n          { content: noticeContent },\r\n          config\r\n        );\r\n        console.log(response);\r\n        setNotice(notice.concat([response.data]));\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"adminMain\">\r\n        <div className=\"adminMainContainer adminTop\">\r\n          <div>\r\n            <div className=\"memberInPlan\">\r\n              <Nav tabs>\r\n                <NavItem className=\"adminTitle \">\r\n                  <NavLink> 심사화면 </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n            <div className=\"adminContentTop\">\r\n              <AdminEvaluateList\r\n                evaluateType={evaluateType}\r\n                setEvaluateType={setEvaluateType}\r\n                setChoiceId={setChoiceId}\r\n                planList={planList}\r\n                houseList={houseList}\r\n                setHouseList={setHouseList}\r\n                setPlanList={setPlanList}\r\n              />\r\n              {choiceId === 0 ? (\r\n                <div className=\"adminContentTopInner\"></div>\r\n              ) : evaluateType === false && choiceId !== 0 ? (\r\n                <>\r\n                  <ShowDetailPlan\r\n                    choiceId={choiceId}\r\n                    planList={planList}\r\n                    setPlanList={setPlanList}\r\n                    setChoiceId={setChoiceId}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ShowDetailHouse\r\n                    choiceId={choiceId}\r\n                    houseList={houseList}\r\n                    setHouseList={setHouseList}\r\n                    setChoiceId={setChoiceId}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"adminMainContainer adminBottom\">\r\n          <div className=\"adminBoard\">\r\n            <div className=\"memberInPlan\">\r\n              <Nav tabs>\r\n                <NavItem className=\"adminTitle \">\r\n                  <NavLink>\r\n                    {\" \"}\r\n                    공지사항{\" \"}\r\n                    <BsPencilSquare\r\n                      className=\"writeBtn\"\r\n                      onClick={showNoticeModal}\r\n                    />{\" \"}\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n            <div className=\"adminContent\">\r\n              {notice.map((item, idx) => (\r\n                <AdminNoticeItem\r\n                  type=\"0\"\r\n                  idx={idx}\r\n                  key={item.id}\r\n                  notice={item}\r\n                  setNotice={setNotice}\r\n                  noticeList={notice}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"adminBoard\">\r\n            <div className=\"memberInPlan\">\r\n              <Nav tabs>\r\n                <NavItem className=\"adminTitle \">\r\n                  <NavLink> 질문사항 </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n            <div className=\"adminContent\">\r\n              {qna.map((item, idx) => (\r\n                <AdminQnaItem\r\n                  type=\"0\"\r\n                  idx={idx}\r\n                  key={item.pk}\r\n                  qna={item}\r\n                  qnaList={qna}\r\n                  setQna={setQna}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* 모달 */}\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>공지사항</ModalHeader>\r\n          <ModalBody>\r\n            <span className=\"noticeModalTitle\">제 목 : </span>\r\n            <input onChange={noticeWrite} name=\"title\"></input>\r\n            <textarea\r\n              className=\"noticeContent\"\r\n              name=\"content\"\r\n              onChange={noticeWrite}\r\n              placeholder=\"공지할 글 작성\"\r\n              cols=\"56\"\r\n              rows=\"10\"\r\n            ></textarea>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={noticeSave}>\r\n              작성\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              취소\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AdminManage;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminEvaluateList.js",["650","651","652","653","654","655","656","657","658","659"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport \"./adminEvaluateList.scss\";\r\nimport EvaluatePlanItem from \"./evaluatePlanItem\";\r\nimport EvaluateHouseItem from \"./evaluateHouseItem\";\r\nconst AdminEvaluateList = ({\r\n  evaluateType,\r\n  planList,\r\n  houseList,\r\n  setEvaluateType,\r\n  setChoiceId,\r\n  setHouseList,\r\n  setPlanList,\r\n}) => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          \"http://localhost:8000/plans/evaluate-plan/\",\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response.data.myPlan);\r\n        setPlanList(response.data.myPlan);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n  const changeEvTypePlan = (evaluateType) => {\r\n    setEvaluateType(false);\r\n    setChoiceId(0);\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          \"http://localhost:8000/plans/evaluate-plan/\",\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setPlanList(response.data.myPlan);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const changeEvTypeHouse = (evaluateType) => {\r\n    setEvaluateType(true);\r\n    setChoiceId(0);\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          \"http://localhost:8000/houses/evaluate-house/\",\r\n          config\r\n        );\r\n        console.log(\"메인 숙소 리스트11\");\r\n        console.log(response);\r\n        setHouseList(response.data);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  return (\r\n    <div className=\"adminContentTopInner\">\r\n      <div className=\"adminContentTopInnerBtn\">\r\n        <Button outline={evaluateType && true} onClick={changeEvTypePlan}>\r\n          여행\r\n        </Button>\r\n        <Button outline={!evaluateType && true} onClick={changeEvTypeHouse}>\r\n          숙박\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {!evaluateType === true\r\n          ? planList.map((item, index) => (\r\n              <EvaluatePlanItem\r\n                index={index}\r\n                key={item.id}\r\n                basicInfo={item}\r\n                id={item.id}\r\n                setChoiceId={setChoiceId}\r\n              />\r\n            ))\r\n          : houseList.map((item, index) => (\r\n              <EvaluateHouseItem\r\n                index={index}\r\n                key={item.pk}\r\n                basicInfo={item}\r\n                id={item.pk}\r\n                setChoiceId={setChoiceId}\r\n              />\r\n            ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminEvaluateList;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\evaluatePlanItem.js",["660","661"],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\showDetailPlan.js",["662"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport AdminTravelDetail from \"./adminTravelDetail\";\r\nimport \"./adminTravelDetail.scss\";\r\n\r\nconst ShowDetailPlan = ({ choiceId, planList, setPlanList, setChoiceId }) => {\r\n  console.log(\"===ShowDetailPlan===\");\r\n  console.log(\"planList : \", planList);\r\n  const [modal, setModal] = useState(false);\r\n  const [rejectReason, setRejectReason] = useState(\"\");\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  const [detailPlanInfo, setDetailPlanInfo] = useState({\r\n    schedule: [{ detailPlace: [] }],\r\n  });\r\n  // 공지사항 글 작성\r\n\r\n  const rejectReasonWrite = (e) => {\r\n    const { value } = e.target;\r\n    setRejectReason(value);\r\n  };\r\n  const rejectWrite = () => {\r\n    console.log(\"==rejectWrite==\");\r\n    console.log(rejectReason);\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/plans/evPlanReject/${choiceId}`,\r\n          { rejectReason: rejectReason },\r\n          config\r\n        );\r\n        console.log(\"==거절 의사 ==\");\r\n\r\n        console.log(response.data);\r\n        setRejectReason(\"\");\r\n        setPlanList(planList.filter((item) => item.id !== choiceId));\r\n        setDetailPlanInfo({\r\n          schedule: [{ detailPlace: [] }],\r\n        });\r\n        setChoiceId(0);\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"거절 의사 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const planAgree = () => {\r\n    console.log(\"==planAgree==\");\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/plans/evPlanAgree/${choiceId}`,\r\n          {},\r\n          config\r\n        );\r\n        console.log(\"==승인 의사 ==\");\r\n\r\n        console.log(response.data.agreePlanId);\r\n\r\n        setPlanList(planList.filter((item) => item.id !== choiceId));\r\n        setChoiceId(0);\r\n        setDetailPlanInfo({\r\n          schedule: [{ detailPlace: [] }],\r\n        });\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"승인 의사 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const rejectWriteCancel = () => {\r\n    console.log(\"==rejectWriteCancel==\");\r\n\r\n    setRejectReason(\"\");\r\n\r\n    toggle();\r\n  };\r\n\r\n  useEffect(() => {\r\n    //alert(\"여행 디테일\");\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/detailplan/${choiceId}`,\r\n          config\r\n        );\r\n        console.log(\"==어드민 요약 데이터 ==\");\r\n\r\n        console.log(response.data);\r\n\r\n        setDetailPlanInfo(response.data.planInfo[0]);\r\n      } catch (error) {\r\n        alert(\"여행 디테일 정보 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, [choiceId]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"adminContentTopInner\">\r\n        <AdminTravelDetail\r\n          detailPlanInfo={detailPlanInfo}\r\n          choiceId={choiceId}\r\n        />\r\n        <div className=\"adminPlanEvBtns\">\r\n          <Button color=\"primary\" onClick={toggle}>\r\n            {\" \"}\r\n            거절\r\n          </Button>\r\n          <Button color=\"primary\" onClick={planAgree}>\r\n            승낙\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>거절 이유</ModalHeader>\r\n          <ModalBody>\r\n            <textarea\r\n              className=\"noticeContent\"\r\n              name=\"content\"\r\n              onChange={rejectReasonWrite}\r\n              placeholder=\"거절 이유를 쓰세요\"\r\n              cols=\"56\"\r\n              rows=\"10\"\r\n              value={rejectReason}\r\n            ></textarea>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={rejectWrite}>\r\n              거절\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={rejectWriteCancel}>\r\n              취소\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDetailPlan;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminTravelDetail.js",["663","664","665","666","667","668","669"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport KakaoMapPlace from \"../travel/kakaoMapPlace\";\r\nimport DetailPlaces from \"../travel/detailPlaces\";\r\nimport AdminShowKaKao from \"./adminShowKaKao\";\r\nimport \"./adminTravelDetail.scss\";\r\nimport AdminDetailPlaces from \"./adminDetailPlaces\";\r\nconst { kakao } = window;\r\nconst AdminTravelDetail = ({ detailPlanInfo, choiceId }) => {\r\n  console.log(\"========AdminTravelDetail=======\");\r\n  console.log(\"detailPlanInfo : \", detailPlanInfo);\r\n  console.log(\"choiceId : \", choiceId);\r\n  const { store } = useAppContext();\r\n  const [kakaoMap, setKakaoMap] = useState();\r\n\r\n  const [nthDay, setNthDay] = useState(1);\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mapContainer = document.getElementById(\"adminMapPlace\"); // 지도를 표시할 div\r\n    let mapOption = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n      level: 3, // 지도의 확대 레벨\r\n    };\r\n    setKakaoMap(new kakao.maps.Map(mapContainer, mapOption));\r\n  }, []);\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  // 숙소 modal\r\n\r\n  const [houseModal, setHouseModal] = useState(false);\r\n\r\n  const houseToggle = () => setHouseModal(!houseModal);\r\n\r\n  // 날짜 변경 모달\r\n  const [dateChangeModal, setDateChangeModal] = useState(false);\r\n\r\n  const dateChangeToggle = () => setDateChangeModal(!dateChangeModal);\r\n\r\n  // 이동  모달\r\n  // const [moveChangeModal, setMoveChangeModal] = useState(false);\r\n\r\n  // const moveChangeToggle = () => {\r\n  //   setMoveChangeModal(!moveChangeModal);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"adminDetailContainer\">\r\n      <div>\r\n        <div className=\"adminTitleAndDate\">\r\n          <div>\r\n            <span>{detailPlanInfo[\"plan_title\"]}</span>\r\n          </div>\r\n          <div>\r\n            <span>{detailPlanInfo[\"start_date\"]}</span> ~\r\n            <span>{detailPlanInfo[\"end_date\"]}</span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <AdminShowKaKao\r\n              kakaoMap={kakaoMap}\r\n              detailPlanInfo={detailPlanInfo}\r\n              nthDay={nthDay}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <AdminDetailPlaces\r\n        detailInfo={detailPlanInfo[\"schedule\"][nthDay - 1]}\r\n        nthDay={nthDay}\r\n        maxDay={detailPlanInfo[\"schedule\"].length}\r\n        setNthDay={setNthDay}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTravelDetail;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminShowKaKao.js",["670","671","672"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./adminShowKaKao.scss\";\r\nconst { kakao } = window;\r\nlet dots = [];\r\nconst AdminShowKaKao = ({ kakaoMap, detailPlanInfo, nthDay }) => {\r\n  const [bounds, setBounds] = useState(new kakao.maps.LatLngBounds());\r\n  const [customOverlay, setCustomOverlay] = useState([]);\r\n\r\n  //const [dots, setDots] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"=======detailPlanInfo========\");\r\n    console.log(detailPlanInfo);\r\n\r\n    //맵 생성\r\n\r\n    var moveLine; // 선이 그려지고 있을때 마우스 움직임에 따라 그려질 선 객체 입니다\r\n\r\n    var distanceOverlay; // 선의 거리정보를 표시할 커스텀오버레이 입니다\r\n    //var dots = [dots]; // 선이 그려지고 있을때 클릭할 때마다 클릭 지점과 거리를 표시하는 커스텀 오버레이 배열입니다.\r\n\r\n    let clickLine;\r\n    setTimeout(() => {\r\n      clickLine = new kakao.maps.Polyline({\r\n        map: kakaoMap, // 선을 표시할 지도입니다\r\n        path: [], // 선을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\r\n        strokeWeight: 3, // 선의 두께입니다\r\n        strokeColor: \"#db4040\", // 선의 색깔입니다\r\n        strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\r\n        strokeStyle: \"solid\", // 선의 스타일입니다\r\n      });\r\n\r\n      for (let i = 0; i < points.length; i++) {\r\n        console.log(\"======clickLine======\");\r\n        console.log(\"path : \" + points[i]);\r\n        console.log(\"clickLine : \", clickLine);\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        let path = clickLine.getPath();\r\n        path.push(points[i]);\r\n        clickLine.setPath(path);\r\n\r\n        var distance = Math.round(clickLine.getLength());\r\n        displayCircleDot(kakaoMap, points[i], distance, dots);\r\n      }\r\n    }, 300);\r\n\r\n    console.log(\"====detailPlace_test===\");\r\n\r\n    console.log(detailPlanInfo);\r\n    console.log(detailPlanInfo[\"schedule\"][nthDay - 1]);\r\n    console.log(detailPlanInfo[\"schedule\"][nthDay - 1][\"detailPlace\"]);\r\n\r\n    let placeList = detailPlanInfo[\"schedule\"][nthDay - 1][\"detailPlace\"];\r\n    // 각 장소 위경도 격납\r\n    let points = placeList.map(\r\n      (item) => new kakao.maps.LatLng(item.place_y, item.place_x)\r\n    );\r\n\r\n    let customOverlayList = placeList.map(\r\n      (item, index) =>\r\n        new kakao.maps.CustomOverlay({\r\n          position: new kakao.maps.LatLng(item.place_y, item.place_x),\r\n          content: `<button class =\"myBtns displayBtn${\r\n            index + 1\r\n          }\"><span class=\"myMarker\">${index + 1}</span></button>`,\r\n        })\r\n    );\r\n    //console.log(\"points\", points);\r\n    //console.log(\"customOverlay1\", customOverlay);\r\n\r\n    //console.log(\"customOverlayList\", customOverlayList);\r\n    setCustomOverlay(customOverlay.concat(customOverlayList));\r\n    //console.log(\"customOverlay2\", customOverlay);\r\n\r\n    if (customOverlay.length !== 0) {\r\n      for (let j = 0; j < customOverlay.length; j++) {\r\n        customOverlay[j].setMap(null);\r\n      }\r\n    }\r\n    // 지도 범위 재생성\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      console.log(\"======clickLine======\");\r\n      console.log(\"path : \" + points[i]);\r\n      console.log(\"clickLine : \", clickLine);\r\n      // LatLngBounds 객체에 좌표를 추가합니다\r\n\r\n      //  var distance = Math.round(clickLine.getLength());\r\n      // displayCircleDot(clickPosition, distance);\r\n\r\n      customOverlayList[i].setMap(kakaoMap);\r\n\r\n      bounds.extend(points[i]);\r\n    }\r\n\r\n    let totlaY = 0;\r\n    placeList.map((item, index) => (totlaY += parseFloat(item.place_y)));\r\n    console.log(\"totlaY : \", totlaY);\r\n    let totlaX = 0;\r\n    placeList.map((item, index) => (totlaX += parseFloat(item.place_x)));\r\n    console.log(\"totlaX : \", totlaX);\r\n    const coords = new kakao.maps.LatLng(\r\n      totlaY / placeList.length,\r\n      totlaX / placeList.length\r\n    );\r\n\r\n    kakaoMap && kakaoMap.setCenter(coords);\r\n    console.log(\"bounds : \", bounds);\r\n    kakaoMap && kakaoMap.setBounds(bounds);\r\n\r\n    return () => {\r\n      console.log(\"=======dot========\");\r\n      console.log(dots);\r\n      console.log(\"=======points========\");\r\n      console.log(points);\r\n      setBounds(new kakao.maps.LatLngBounds());\r\n      for (let i = 0; i < dots.length; i++) {\r\n        if (dots[i].circle) {\r\n          dots[i].circle.setMap(null);\r\n        }\r\n\r\n        if (dots[i].distance) {\r\n          dots[i].distance.setMap(null);\r\n        }\r\n      }\r\n\r\n      dots = [];\r\n      clickLine && clickLine.setMap(null);\r\n\r\n      clickLine && (clickLine = null);\r\n    };\r\n  }, [detailPlanInfo, nthDay]);\r\n\r\n  return (\r\n    <div\r\n      id=\"adminMapPlace\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nfunction displayCircleDot(map, position, distance, dots) {\r\n  // 클릭 지점을 표시할 빨간 동그라미 커스텀오버레이를 생성합니다\r\n  var circleOverlay = new kakao.maps.CustomOverlay({\r\n    content: '<span class=\"dot\"></span>',\r\n    position: position,\r\n    zIndex: 1,\r\n  });\r\n\r\n  // 지도에 표시합니다\r\n  circleOverlay.setMap(map);\r\n\r\n  if (distance > 0) {\r\n    // 클릭한 지점까지의 그려진 선의 총 거리를 표시할 커스텀 오버레이를 생성합니다\r\n    var distanceOverlay = new kakao.maps.CustomOverlay({\r\n      content:\r\n        '<div class=\"dotOverlay\">거리 <span class=\"number\">' +\r\n        distance +\r\n        \"</span>m</div>\",\r\n      position: position,\r\n      yAnchor: 1.5,\r\n      zIndex: 2,\r\n    });\r\n\r\n    // 지도에 표시합니다\r\n    distanceOverlay.setMap(map);\r\n  }\r\n\r\n  // 배열에 추가합니다\r\n  dots.push({ circle: circleOverlay, distance: distanceOverlay });\r\n}\r\n\r\nexport default AdminShowKaKao;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminDetailPlaces.js",["673","674","675"],"import React from \"react\";\r\n\r\nimport CollectPlaces from \"../travel/collectPlaces\";\r\n\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport \"./adminDetailPlaces.scss\";\r\nimport AdminCollectPlaces from \"./adminCollectPlaces\";\r\nconst AdminDetailPlaces = ({\r\n  searchToggle,\r\n  detailInfo,\r\n  houseToggle,\r\n  moveToggle,\r\n  nthDay,\r\n  maxDay,\r\n  setNthDay,\r\n  setDetailPlanInfo,\r\n}) => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  console.log(\"--여행--1\");\r\n  console.log(detailInfo);\r\n\r\n  const onClickPreDay = () => {\r\n    if (nthDay === 1) {\r\n      return;\r\n    }\r\n    setNthDay(nthDay - 1);\r\n  };\r\n\r\n  const onClickNextDay = () => {\r\n    if (nthDay === maxDay) {\r\n      return;\r\n    }\r\n    setNthDay(nthDay + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"adminNthDetailPlanContainer\">\r\n      <div className=\"adminNthAndButton\">\r\n        <button onClick={onClickPreDay}>왼</button>\r\n        <span>{nthDay}번째 날</span>\r\n        <button onClick={onClickNextDay}>오</button>\r\n      </div>\r\n      <div className=\"adminNthDetailPlanList\">\r\n        <AdminCollectPlaces detailInfo={detailInfo} nthDay={nthDay} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDetailPlaces;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminCollectPlaces.js",["676"],"import React from \"react\";\r\nimport CollectPlaceItem from \"../travel/collectPlaceItem\";\r\nimport AdminCollectPlaceItem from \"./adminCollectPlaceItem\";\r\nimport \"./adminCollectPlaces.scss\";\r\nconst AdminCollectPlaces = ({ nthDay, detailInfo, setDetailPlanInfo }) => {\r\n  console.log(\"CollectPlaces\");\r\n  return (\r\n    <div className=\"adminDetailPlanDiv\">\r\n      {detailInfo &&\r\n        detailInfo[\"detailPlace\"].map((item, index) => (\r\n          <AdminCollectPlaceItem\r\n            index={index}\r\n            key={item[\"move_turn\"]}\r\n            info={item}\r\n            nthDay={nthDay}\r\n            setDetailPlanInfo={setDetailPlanInfo}\r\n            detailInfo={detailInfo}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCollectPlaces;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminCollectPlaceItem.js",["677","678","679","680","681","682"],"import React, { useState } from \"react\";\r\nimport \"./adminCollectPlaceItem.scss\";\r\nimport { Button, Badge } from \"reactstrap\";\r\nimport {\r\n  BsFillCaretUpFill,\r\n  BsFillCaretDownFill,\r\n  BsCardText,\r\n  BsXSquareFill,\r\n} from \"react-icons/bs\";\r\nimport produce from \"immer\";\r\nconst AdminCollectPlaceItem = ({\r\n  index,\r\n  info,\r\n  nthDay,\r\n  setDetailPlanInfo,\r\n  detailInfo,\r\n}) => {\r\n  console.log(\"===info==== move_turn : \" + info[\"move_turn\"]);\r\n  console.log(info);\r\n  console.log(detailInfo);\r\n  console.log(detailInfo[\"detailPlace\"]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"adminPlaceUnit\">\r\n        <div>\r\n          <Button\r\n            className={\"displayBtn\" + (index + 1) + \" btnArea\"}\r\n            color=\"primary\"\r\n            onMouseEnter={(e) => {\r\n              let className = e.target.classList[0];\r\n              document.getElementsByClassName(\r\n                className\r\n              )[0].style.backgroundColor = \"red\";\r\n\r\n              document.getElementsByClassName(\r\n                className\r\n              )[1].style.backgroundColor = \"red\";\r\n            }}\r\n            onMouseLeave={(e) => {\r\n              let className = e.target.classList[0];\r\n              document.getElementsByClassName(\r\n                className\r\n              )[0].style.backgroundColor = \"#007bff\";\r\n\r\n              document.getElementsByClassName(\r\n                className\r\n              )[1].style.backgroundColor = \"#007bff\";\r\n            }}\r\n          >\r\n            <Badge className=\"placeTurn\" color=\"secondary\">\r\n              {info.move_turn}\r\n            </Badge>\r\n          </Button>\r\n        </div>\r\n        <div className=\"adminPlaceImg\">\r\n          <img width=\"100%\" src={info.detail_img} alt={info.place_name} />\r\n        </div>\r\n        <div className=\"adminPlaceName\">{info.place_name}</div>\r\n        <div className=\"adminPlaceLocation\">{info.place_location}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminCollectPlaceItem;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\evaluateHouseItem.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\showDetailHouse.js",["683","684","685","686","687","688"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport AdminTravelDetail from \"./adminTravelDetail\";\r\nimport \"./adminTravelDetail.scss\";\r\nimport AdminHouseDetail from \"./adminHouseDetail\";\r\n\r\nconst ShowDetailHouse = ({\r\n  choiceId,\r\n  houseList,\r\n  setHouseList,\r\n  setChoiceId,\r\n}) => {\r\n  console.log(\"===ShowDetailHouse===\");\r\n  console.log(\"houseList : \", houseList);\r\n  const [modal, setModal] = useState(false);\r\n  const [rejectReason, setRejectReason] = useState(\"\");\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  const [houseInfo, seHouseInfo] = useState({ housedetaiiImages: [] });\r\n  // 공지사항 글 작성\r\n\r\n  const rejectReasonWrite = (e) => {\r\n    const { value } = e.target;\r\n    setRejectReason(value);\r\n  };\r\n  const rejectWrite = () => {\r\n    console.log(\"==rejectWrite==\");\r\n    console.log(rejectReason);\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/houses/evHouseReject/${choiceId}`,\r\n          { rejectReason: rejectReason },\r\n          config\r\n        );\r\n        console.log(\"==거절 의사 ==\");\r\n\r\n        console.log(response.data);\r\n        setRejectReason(\"\");\r\n        setHouseList(houseList.filter((item) => item.pk !== choiceId));\r\n        seHouseInfo({ housedetaiiImages: [] });\r\n        setChoiceId(0);\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"거절 의사 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const houseAgree = () => {\r\n    console.log(\"==planAgree==\");\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/houses/evHouseAgree/${choiceId}`,\r\n          {},\r\n          config\r\n        );\r\n        console.log(\"==승인 의사 ==\");\r\n\r\n        console.log(response.data.agreePlanId);\r\n\r\n        setHouseList(houseList.filter((item) => item.pk !== choiceId));\r\n        seHouseInfo({ housedetaiiImages: [] });\r\n        setChoiceId(0);\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"승인 의사 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const rejectWriteCancel = () => {\r\n    console.log(\"==rejectWriteCancel==\");\r\n\r\n    setRejectReason(\"\");\r\n\r\n    toggle();\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/houses/housebyid/${choiceId}`,\r\n          config\r\n        );\r\n        console.log(\"==어드민 요약 데이터 ==\");\r\n\r\n        console.log(response.data);\r\n\r\n        seHouseInfo(response.data[\"houseInfo\"]);\r\n      } catch (error) {\r\n        alert(\"여행 디테일 정보 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, [choiceId]);\r\n  return (\r\n    <>\r\n      <div className=\"adminContentTopInner\">\r\n        <AdminHouseDetail houseInfo={houseInfo} choiceId={choiceId} />\r\n        <div className=\"adminPlanEvBtns\">\r\n          <Button color=\"primary\" onClick={toggle}>\r\n            {\" \"}\r\n            거절\r\n          </Button>\r\n          <Button color=\"primary\" onClick={houseAgree}>\r\n            승낙\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>거절 이유</ModalHeader>\r\n          <ModalBody>\r\n            <textarea\r\n              className=\"noticeContent\"\r\n              name=\"content\"\r\n              onChange={rejectReasonWrite}\r\n              placeholder=\"숙소 승인의 거절 이유를 쓰세요\"\r\n              cols=\"56\"\r\n              rows=\"10\"\r\n              value={rejectReason}\r\n            ></textarea>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={rejectWrite}>\r\n              거절\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={rejectWriteCancel}>\r\n              취소\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ShowDetailHouse;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminHouseDetail.js",["689","690","691","692","693","694","695"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport \"./adminHouseDetail.scss\";\r\n\r\nimport addressImg from \"public/img/address.png\";\r\nimport priceImg from \"public/img/price.png\";\r\nimport roomImg from \"public/img/room.png\";\r\n\r\nimport personImg from \"public/img/person.png\";\r\nimport houseTypeImg from \"public/img/houseType.png\";\r\n\r\nconst { kakao } = window;\r\nconst AdminHouseDetail = ({ houseInfo, choiceId }) => {\r\n  const { store } = useAppContext();\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"===AdminHouseDetail===\");\r\n\r\n    console.log(houseInfo);\r\n\r\n    const container = document.getElementById(\"myHouse\");\r\n    const options = {\r\n      center: new kakao.maps.LatLng(houseInfo.yPoint, houseInfo.xPoint),\r\n      level: 3,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n    // 주소로 좌표를 검색합니다\r\n    geocoder.addressSearch(houseInfo.houseAddress, function (result, status) {\r\n      // 정상적으로 검색이 완료됐으면\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n        // 결과값으로 받은 위치를 마커로 표시합니다\r\n        const marker = new kakao.maps.Marker({\r\n          map: map,\r\n          position: coords,\r\n        });\r\n\r\n        // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n        const infowindow = new kakao.maps.InfoWindow({\r\n          content:\r\n            '<div style=\"width:150px;text-align:center;padding:6px 0;\">' +\r\n            houseInfo.houseName +\r\n            \"</div>\",\r\n        });\r\n        infowindow.open(map, marker);\r\n\r\n        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n        map.setCenter(coords);\r\n      }\r\n    });\r\n  }, [houseInfo]);\r\n\r\n  // 사진\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex =\r\n      activeIndex === houseInfo.housedetaiiImages.length - 1\r\n        ? 0\r\n        : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex =\r\n      activeIndex === 0\r\n        ? houseInfo.housedetaiiImages.length - 1\r\n        : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  const slides = houseInfo.housedetaiiImages.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item}\r\n      >\r\n        <img\r\n          src={\"http://localhost:8000/media/\" + item}\r\n          alt={item.altText}\r\n          width=\"80%\"\r\n          height=\"300px\"\r\n        />\r\n        <CarouselCaption\r\n          //captionText={item.caption}\r\n          captionHeader={item.caption}\r\n        />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"adminHouseContainer\">\r\n        <div className=\"adminHouseMainDiv\">\r\n          <div className=\"adminHouseTitle\">{houseInfo.houseName}</div>\r\n          <img\r\n            src={\"http://localhost:8000\" + houseInfo.mainImage}\r\n            alt=\"mainImg\"\r\n            width=\"100%\"\r\n            height=\"150px\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className=\"adminHouseDetailDiv\">\r\n          <div className=\"adminKaKaoHouse\">\r\n            <div className=\"myHouse\">\r\n              {\r\n                <div\r\n                  id=\"myHouse\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"250px\",\r\n                  }}\r\n                ></div>\r\n              }\r\n            </div>\r\n            <div className=\"adminAddressText\">\r\n              {\" \"}\r\n              위치 :{\" \"}\r\n              {houseInfo.houseAddress + \" \" + houseInfo.houseDetailAddress}{\" \"}\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"adminHousePics\">\r\n            <Carousel activeIndex={activeIndex} next={next} previous={previous}>\r\n              <CarouselIndicators\r\n                items={houseInfo.housedetaiiImages}\r\n                activeIndex={activeIndex}\r\n                onClickHandler={goToIndex}\r\n              />\r\n              {slides}\r\n              <CarouselControl\r\n                className=\"leftDetailImageBtn\"\r\n                direction=\"prev\"\r\n                directionText=\"Previous\"\r\n                onClickHandler={previous}\r\n              />\r\n              <CarouselControl\r\n                className=\"rightDetailImageBtn\"\r\n                direction=\"next\"\r\n                directionText=\"Next\"\r\n                onClickHandler={next}\r\n              />\r\n            </Carousel>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 디테일 정보 */}\r\n        <div className=\"adminDetailHouseInfoContainer\">\r\n          <div className=\"adminDetailHouseInfoUpper\">\r\n            <div className=\"adminDetailHouseInfoUpperDiv\">\r\n              <div>\r\n                <div className=\"adminDateRange\">\r\n                  <h4>\r\n                    <Badge color=\"secondary\">{houseInfo.startDate}</Badge>\r\n                  </h4>\r\n                  <h4 className=\"adminDateDash\">-</h4>\r\n                  <h4>\r\n                    <Badge color=\"secondary\"> {houseInfo.endDate}</Badge>\r\n                  </h4>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={addressImg}\r\n                    alt=\"주소\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"adminAddressText\">\r\n                    {houseInfo.houseAddress +\r\n                      \" \" +\r\n                      houseInfo.houseDetailAddress}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={personImg}\r\n                    alt=\"수용인원\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    최대수용 인원 {houseInfo.maxPerson} 명\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={priceImg}\r\n                    alt=\"가격\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    1박 당 {houseInfo.housePrice} 원\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={roomImg}\r\n                    alt=\"방갯수\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\"> 방 {houseInfo.rooms} 개</span>\r\n                </div>\r\n                <div>\r\n                  <img\r\n                    className=\"photoImg\"\r\n                    src={houseTypeImg}\r\n                    alt=\"타입\"\r\n                    width=\"80px\"\r\n                    height=\"80px\"\r\n                  />\r\n                  <span className=\"addressText\">\r\n                    형태 {houseInfo.houseType}{\" \"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {/* <div>예약하기</div> roomImg houseTypeImg */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr></hr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminHouseDetail;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseReject.js",["696"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Tooltip,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./houseReject.scss\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nconst HouseReject = ({ info, setHouse, house }) => {\r\n  const history = useHistory();\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  const [rejectModal, setModal] = useState(false);\r\n\r\n  const rejectToggle = () => setModal(!rejectModal);\r\n\r\n  const [rejectReason, setRejectReason] = useState(\"\");\r\n  const showRejectReason = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/houses/show-reject/${info.pk}`,\r\n          config\r\n        );\r\n\r\n        console.log(\"==showRejectReason==\");\r\n        console.log(response);\r\n        setRejectReason(response.data);\r\n        rejectToggle();\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 삭제\r\n  const houseDelete = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.delete(\r\n          `http://localhost:8000/houses/delete-house/${info.pk}`,\r\n          config\r\n        );\r\n\r\n        console.log(\"==houseDelete==\");\r\n        console.log(response);\r\n        setHouse(house.filter((item) => item.pk !== info.pk));\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 초기화 인데 일단 보류\r\n  const initHouse = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.delete(\r\n          `http://localhost:8000/houses/show-reject/${info.pk}`,\r\n          config\r\n        );\r\n\r\n        console.log(\"==showRejectReason==\");\r\n        console.log(response);\r\n        setHouse(response.data);\r\n        rejectToggle();\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const moveUpdateHouse = () => {\r\n    history.push(\"/index/main/house/update/\" + info.pk + \"/2\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"houseManageRow\">\r\n        <div className=\"houseManageRowImg\">\r\n          <img\r\n            src={\"http://localhost:8000\" + info.mainImage}\r\n            alt=\"mainImg\"\r\n            width=\"100px\"\r\n            height=\"80px\"\r\n          />\r\n        </div>\r\n        <div className=\"houseManageRowTitle\">\r\n          <span className=\"rejectHouseName\">{info.houseName}</span>\r\n        </div>\r\n        <div className=\"houseManageRowState\">\r\n          <Button\r\n            color=\"danger\"\r\n            id={\"rejectHouseId\" + info.pk}\r\n            onClick={showRejectReason}\r\n          >\r\n            Reject\r\n          </Button>\r\n          <Tooltip\r\n            placement=\"right\"\r\n            isOpen={tooltipOpen}\r\n            target={\"rejectHouseId\" + info.pk}\r\n            toggle={toggle}\r\n          >\r\n            '클릭' 거절이유 보기\r\n          </Tooltip>\r\n        </div>\r\n        <div className=\"houseManageRowBtn\">\r\n          <div>\r\n            <Button color=\"danger\" onClick={moveUpdateHouse}>\r\n              수정\r\n            </Button>\r\n            <Button color=\"danger\" onClick={houseDelete}>\r\n              삭제\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Modal isOpen={rejectModal} toggle={rejectToggle}>\r\n          <ModalHeader toggle={rejectToggle}>\r\n            '{info.houseName}' 거절 이유\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            {rejectReason}\r\n            <hr></hr>\r\n            {/* <div className=\"noticeReject\">\r\n              다시 심사를 신청하고자 할땐, 반드시 하단에 [초기화하기]를 눌러야\r\n              합니다.\r\n            </div> */}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {/* <Button color=\"primary\" onClick={initHouse}>\r\n              초기화하기\r\n            </Button>{\" \"} */}\r\n            <Button color=\"secondary\" onClick={rejectToggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HouseReject;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseEnd.js",["697"],"import React, { useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./houseReject.scss\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAppContext } from \"store\";\r\nconst HouseEnd = ({ info, setHouse, house }) => {\r\n  const history = useHistory();\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  // 삭제\r\n  const houseDelete = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.delete(\r\n          `http://localhost:8000/houses/delete-house/${info.pk}`,\r\n          config\r\n        );\r\n\r\n        console.log(\"==houseDelete==\");\r\n        console.log(response);\r\n        setHouse(house.filter((item) => item.pk !== info.pk));\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const moveUpdateHouse = () => {\r\n    history.push(\"/index/main/house/update/\" + info.pk + \"/2\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"houseManageRow\">\r\n        <div className=\"houseManageRowImg\">\r\n          <img\r\n            src={\"http://localhost:8000\" + info.mainImage}\r\n            alt=\"mainImg\"\r\n            width=\"100px\"\r\n            height=\"80px\"\r\n          />\r\n        </div>\r\n        <div className=\"houseManageRowTitle\">\r\n          <span className=\"rejectHouseName\">{info.houseName}</span>\r\n        </div>\r\n        <div className=\"houseManageRowState\">\r\n          <Button color=\"secondary\" id={\"rejectHouseId\" + info.pk}>\r\n            기간만료\r\n          </Button>\r\n        </div>\r\n        <div className=\"houseManageRowBtn\">\r\n          <div>\r\n            <Button color=\"danger\" onClick={moveUpdateHouse}>\r\n              수정\r\n            </Button>\r\n            <Button color=\"danger\" onClick={houseDelete}>\r\n              삭제\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HouseEnd;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\house\\houseUpdate.js",["698"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport { BsCaretLeftFill, BsCaretRightFill } from \"react-icons/bs\";\r\nimport { Form, FormGroup, Label, Input, Button, Modal } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst { kakao } = window;\r\nconst HouseUpdate = ({ match }) => {\r\n  console.log(\"==houseUpdate==\");\r\n  console.log(match);\r\n  const [houseInfo, seHouseInfo] = useState({ housedetaiiImages: [] });\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  const [formData, setFormData] = useState({});\r\n  const history = useHistory();\r\n  const [imgData, setImgData] = useState({ resultUrl: [], mainUrl: \"\" });\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const buttonLabel = \"주소찾기\";\r\n  const className = \"addressModal\";\r\n\r\n  useEffect(() => {\r\n    console.log(\"===houseUpdate 인포===\");\r\n    Axios.get(\r\n      `http://localhost:8000/houses/housebyid/${match.params.pk}`,\r\n      config\r\n    )\r\n      .then((response) => {\r\n        console.log(\"====???====\");\r\n        console.log(response.data);\r\n\r\n        seHouseInfo(response.data[\"houseInfo\"]);\r\n\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          // houseName: response.data[\"houseInfo\"].houseName,\r\n\r\n          // houseAddress: response.data[\"houseInfo\"].houseAddress,\r\n          // houseDetailAddress: response.data[\"houseInfo\"].houseDetailAddress,\r\n          // housePrice: response.data[\"houseInfo\"].housePrice,\r\n\r\n          // houseType: response.data[\"houseInfo\"].houseType,\r\n          // maxPerson: response.data[\"houseInfo\"].maxPerson,\r\n          // rooms: response.data[\"houseInfo\"].rooms,\r\n          // startDate: response.data[\"houseInfo\"].startDate,\r\n          // xPoint: response.data[\"houseInfo\"].xPoint,\r\n          // yPoint: response.data[\"houseInfo\"].yPoint,\r\n          // endDate: response.data[\"houseInfo\"].endDate,\r\n          // mainImage: response.data[\"houseInfo\"].mainImage,\r\n          // detailImage: response.data[\"houseInfo\"].housedetaiiImages,\r\n        }));\r\n\r\n        // 메인 사진에 이미지 격납\r\n        setImgData((prev) => ({\r\n          ...prev,\r\n          mainUrl:\r\n            \"http://localhost:8000\" + response.data[\"houseInfo\"].mainImage,\r\n        }));\r\n        // 디테일 사진 격납\r\n        setImgData((prev) => ({\r\n          ...prev,\r\n          resultUrl: response.data[\"houseInfo\"].housedetaiiImages.map(\r\n            (item) => \"http://localhost:8000/media/\" + item\r\n          ),\r\n        }));\r\n\r\n        const container = document.getElementById(\"myUpdateHouse\");\r\n        const options = {\r\n          center: new kakao.maps.LatLng(\r\n            response.data[\"houseInfo\"].yPoint,\r\n            response.data[\"houseInfo\"].xPoint\r\n          ),\r\n          level: 3,\r\n        };\r\n        const map = new kakao.maps.Map(container, options);\r\n        const geocoder = new kakao.maps.services.Geocoder();\r\n        // 주소로 좌표를 검색합니다\r\n        geocoder.addressSearch(\r\n          response.data[\"houseInfo\"].houseAddress,\r\n          function (result, status) {\r\n            // 정상적으로 검색이 완료됐으면\r\n            if (status === kakao.maps.services.Status.OK) {\r\n              const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n              // 결과값으로 받은 위치를 마커로 표시합니다\r\n              const marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: coords,\r\n              });\r\n\r\n              // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n              const infowindow = new kakao.maps.InfoWindow({\r\n                content:\r\n                  '<div style=\"width:150px;text-align:center;padding:6px 0;\">' +\r\n                  response.data[\"houseInfo\"].houseName +\r\n                  \"</div>\",\r\n              });\r\n              infowindow.open(map, marker);\r\n\r\n              // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n              map.setCenter(coords);\r\n            }\r\n          }\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error.response);\r\n      });\r\n  }, []);\r\n\r\n  //input 값 삽입했을 때\r\n  const changeForm = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n\r\n    seHouseInfo((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //form data 전송\r\n  const sendForm = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"===form===\");\r\n    console.log(formData);\r\n    const aFormData = new FormData();\r\n    let keys = Object.keys(formData);\r\n    console.log(keys);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      console.log(keys[i] + \" : \" + formData[keys[i]]);\r\n      if (keys[i] === \"detailImage\") {\r\n        for (let j = 0; j < formData[keys[i]].length; j++) {\r\n          aFormData.append(\"detailImage\", formData[keys[i]][j]);\r\n        }\r\n      }\r\n      aFormData.append(keys[i], formData[keys[i]]);\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n        Authorization: `JWT ${store.jwtToken}`,\r\n      },\r\n    };\r\n\r\n    console.log(\"config \", config);\r\n    console.log(aFormData);\r\n\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.patch(\r\n          `http://localhost:8000/houses/update-house/${match.params.pk}`,\r\n          aFormData,\r\n          config\r\n        );\r\n\r\n        console.log(response);\r\n        history.push(\"/index/main/house/manage\");\r\n      } catch (error) {\r\n        alert(\"로그인실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  //디테일 이미지 변경 할 때\r\n  const onDetailImgChange = (e) => {\r\n    const { name, files } = e.target;\r\n    console.log(\"==onDetailImgChange==\");\r\n    console.log(files);\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: files,\r\n    }));\r\n\r\n    console.log(e);\r\n    const filesObj = e.target.files;\r\n\r\n    let resultUrl = [];\r\n    let file;\r\n    for (let idx = 0; idx < filesObj.length; idx++) {\r\n      file = filesObj[idx];\r\n      let reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        resultUrl[idx] = reader.result;\r\n        setImgData((prev) => ({\r\n          ...prev,\r\n          resultUrl,\r\n        }));\r\n      };\r\n      console.log(\"ssend : \", imgData);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  //메인 이미지 변경 할 때\r\n  const onMainImgChange = (e) => {\r\n    const { name, files } = e.target;\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: files[0],\r\n    }));\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      setImgData((prev) => ({\r\n        ...prev,\r\n        mainUrl: reader.result,\r\n      }));\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  // 왼쪽 클릭할때\r\n  const onClickLetfDetail = () => {\r\n    console.log(\"onClickLetfDetail \");\r\n    let resultUrlList = imgData.resultUrl;\r\n    let firstImg = resultUrlList[0];\r\n    for (let idx = 1; idx < resultUrlList.length; idx++) {\r\n      resultUrlList[idx - 1] = resultUrlList[idx];\r\n    }\r\n    resultUrlList[resultUrlList.length - 1] = firstImg;\r\n    console.log(\"resultUrlList : \", resultUrlList);\r\n    setImgData((prev) => ({\r\n      ...prev,\r\n      resultUrl: resultUrlList,\r\n    }));\r\n  };\r\n\r\n  // 오른쪽 클릭할때\r\n  const onClickRightDetail = () => {\r\n    console.log(\"onClickLetfDetail \");\r\n    let resultUrlList = imgData.resultUrl;\r\n    let lastImg = resultUrlList[resultUrlList.length - 1];\r\n    for (let idx = resultUrlList.length - 2; idx >= 0; idx--) {\r\n      resultUrlList[idx + 1] = resultUrlList[idx];\r\n    }\r\n    resultUrlList[0] = lastImg;\r\n    console.log(\"resultUrlList : \", resultUrlList);\r\n    setImgData((prev) => ({\r\n      ...prev,\r\n      resultUrl: resultUrlList,\r\n    }));\r\n  };\r\n\r\n  const postCodeStyle = {\r\n    display: \"block\",\r\n    position: \"absolute\",\r\n    top: \"50px\",\r\n    zIndex: \"100\",\r\n    padding: \"7px\",\r\n  };\r\n\r\n  // 카카오지도\r\n  const inputKaKaoMap = (e) => {\r\n    console.log(\"............\", e);\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      houseAddress: e.roadAddress,\r\n    }));\r\n\r\n    const container = document.getElementById(\"myUpdateHouse\");\r\n    const options = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      level: 3,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n    // 주소로 좌표를 검색합니다\r\n    geocoder.addressSearch(e.roadAddress, function (result, status) {\r\n      // 정상적으로 검색이 완료됐으면\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          xPoint: result[0].x,\r\n          yPoint: result[0].y,\r\n        }));\r\n        // 결과값으로 받은 위치를 마커로 표시합니다\r\n        const marker = new kakao.maps.Marker({\r\n          map: map,\r\n          position: coords,\r\n        });\r\n\r\n        // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n        const infowindow = new kakao.maps.InfoWindow({\r\n          content:\r\n            '<div style=\"width:150px;text-align:center;padding:6px 0;\">' +\r\n            e.roadAddress +\r\n            \"</div>\",\r\n        });\r\n        infowindow.open(map, marker);\r\n\r\n        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n        map.setCenter(coords);\r\n      }\r\n    });\r\n\r\n    toggle();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"mainHR\">\r\n        <div className=\"formDiv\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <div className=\"formTitle\">\r\n            <span>공유 집 등록</span>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <Form onSubmit={sendForm} className=\"formHR\">\r\n            <FormGroup>\r\n              <Label for=\"HouseName\">House Name</Label>\r\n\r\n              <Input\r\n                onChange={changeForm}\r\n                name=\"houseName\"\r\n                id=\"houseName\"\r\n                placeholder=\"input house name\"\r\n                value={houseInfo[\"houseName\"] || \"\"}\r\n              />\r\n            </FormGroup>\r\n            <div className=\"myMap\">\r\n              {formData.houseAddress && (\r\n                <div\r\n                  id=\"myUpdateHouse\"\r\n                  style={{\r\n                    width: \"300px\",\r\n                    height: \"300px\",\r\n                  }}\r\n                ></div>\r\n              )}\r\n            </div>\r\n\r\n            <FormGroup>\r\n              <Label for=\"HouseAddress\">House Address</Label>\r\n\r\n              <Input\r\n                onChange={changeForm}\r\n                name=\"houseAddress\"\r\n                id=\"houseAddress\"\r\n                placeholder=\"input house address\"\r\n                value={houseInfo[\"houseAddress\"] || \"\"}\r\n              />\r\n              <Input\r\n                onChange={changeForm}\r\n                name=\"houseDetailAddress\"\r\n                id=\"houseDetailAddress\"\r\n                placeholder=\"input detail house address\"\r\n                value={houseInfo[\"houseDetailAddress\"] || \"\"}\r\n              />\r\n              <Button color=\"danger\" onClick={toggle}>\r\n                {buttonLabel}\r\n              </Button>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"HousePrice\">House Price</Label>\r\n\r\n              <Input\r\n                onChange={changeForm}\r\n                name=\"housePrice\"\r\n                id=\"housePrice\"\r\n                placeholder=\"input house price\"\r\n                value={houseInfo[\"housePrice\"] || \"\"}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"HouseType\">House Type</Label>\r\n\r\n              <Input\r\n                onChange={changeForm}\r\n                name=\"houseType\"\r\n                id=\"houseType\"\r\n                placeholder=\"input house type\"\r\n                value={houseInfo[\"houseType\"] || \"\"}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"MaxPerson\">Person</Label>\r\n\r\n              <Input\r\n                onChange={changeForm}\r\n                name=\"maxPerson\"\r\n                id=\"maxPerson\"\r\n                placeholder=\"input max person\"\r\n                value={houseInfo[\"maxPerson\"] || \"\"}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"Rooms\">Rooms</Label>\r\n\r\n              <Input\r\n                onChange={changeForm}\r\n                name=\"rooms\"\r\n                id=\"rooms\"\r\n                placeholder=\"input rooms\"\r\n                value={houseInfo[\"rooms\"] || \"\"}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"StartDate\">Reservation Start Date</Label>\r\n              <Input\r\n                onChange={changeForm}\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                id=\"startDate\"\r\n                placeholder=\"input startdate\"\r\n                value={houseInfo[\"startDate\"] || \"\"}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for=\"EndDate\">Reservation End Date</Label>\r\n              <Input\r\n                onChange={changeForm}\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                id=\"endDate\"\r\n                placeholder=\"input end date\"\r\n                value={houseInfo[\"endDate\"] || \"\"}\r\n              />\r\n            </FormGroup>\r\n            <br />\r\n            <br />\r\n            <FormGroup>\r\n              <div className=\"mainHouseImg\">\r\n                {imgData.mainUrl && (\r\n                  <img\r\n                    src={imgData.mainUrl}\r\n                    alt=\"메인이미지\"\r\n                    width=\"50%\"\r\n                    height=\"30%\"\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n              <Label for=\"MainImage\">Main Image</Label>\r\n\r\n              <Input\r\n                type=\"file\"\r\n                name=\"mainImage\"\r\n                id=\"mainImage\"\r\n                onChange={onMainImgChange}\r\n              />\r\n\r\n              <br />\r\n            </FormGroup>\r\n            <br />\r\n            <br />\r\n            <div className=\"detailHouseImg\">\r\n              {imgData.resultUrl.length >= 4 ? (\r\n                <span className=\"leftDetail\" onClick={onClickLetfDetail}>\r\n                  {\" \"}\r\n                  <BsCaretLeftFill />{\" \"}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <ul className=\"detailHouse\">\r\n                {imgData.resultUrl.map((file, index) =>\r\n                  index < 3 ? (\r\n                    <li key={index}>\r\n                      <img\r\n                        key={index}\r\n                        src={file}\r\n                        alt=\".\"\r\n                        width=\"100px\"\r\n                        height=\"100px\"\r\n                      />\r\n                    </li>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )}\r\n              </ul>\r\n              {imgData.resultUrl.length >= 4 ? (\r\n                <span className=\"rightDetail\" onClick={onClickRightDetail}>\r\n                  {\" \"}\r\n                  <BsCaretRightFill />{\" \"}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <FormGroup>\r\n              <Label for=\"DetailImage\">Detail Image</Label>\r\n\r\n              <Input\r\n                type=\"file\"\r\n                name=\"detailImage\"\r\n                id=\"detailImage\"\r\n                onChange={onDetailImgChange}\r\n                accept=\"image/jpg,image/png,image/jpeg,image/gif\"\r\n                multiple\r\n              />\r\n            </FormGroup>\r\n\r\n            {match.params.type === \"0\" ? (\r\n              <Button color=\"secondary\" size=\"lg\" block>\r\n                수정\r\n              </Button>\r\n            ) : (\r\n              match.params.type === \"2\" && (\r\n                <Button color=\"secondary\" size=\"lg\" block>\r\n                  수정 후 재심사\r\n                </Button>\r\n              )\r\n            )}\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle} className={className}>\r\n          <div>\r\n            <DaumPostcode\r\n              onComplete={inputKaKaoMap}\r\n              style={postCodeStyle}\r\n              height={400}\r\n              autoClose={true}\r\n            />\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default HouseUpdate;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\houseBook.js",["699","700"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport HouseBookItem from \"./houseBookItem\";\r\nimport StarScore from \"./starScore\";\r\nconst HouseBook = () => {\r\n  const { store } = useAppContext();\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [bookInfo, setBookInfo] = useState([]);\r\n\r\n  const [cHouseName, setCHouseName] = useState();\r\n  const [cHousePk, setCHousePk] = useState();\r\n  const [cBookPk, setCBookPk] = useState();\r\n  const [currentScore, setCurrentScore] = useState(0);\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          \"http://localhost:8000/houses/book-list/\",\r\n          config\r\n        );\r\n        console.log(\"내 예약 내역 불러오기\");\r\n        console.log(response);\r\n        setBookInfo(response.data);\r\n      } catch (error) {\r\n        alert(\"숙소 불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n\r\n  const sendScore = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/houses/score/${cHousePk}/${cBookPk}`,\r\n          { score: currentScore },\r\n          config\r\n        );\r\n        console.log(\"점수삽입\");\r\n        console.log(response);\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"공유플랜 불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"historyContainer\">\r\n        <div className=\"memberInPlan\">\r\n          <Nav tabs>\r\n            <NavItem className=\"historyTitle \">\r\n              <NavLink> 나의 여행 숙소 </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </div>\r\n        <div className=\"historyBookContent\">\r\n          {bookInfo.map((item1, idx) => (\r\n            <HouseBookItem\r\n              key={item1.pk}\r\n              bookId={item1.pk}\r\n              itemInfo={item1}\r\n              toggle={toggle}\r\n              setCHouseName={setCHouseName}\r\n              setCHousePk={setCHousePk}\r\n              setCBookPk={setCBookPk}\r\n              setCurrentScore={setCurrentScore}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 모달 */}\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>[{cHouseName}]의 평점</ModalHeader>\r\n          <ModalBody>\r\n            <StarScore\r\n              cHousePk={cHousePk}\r\n              cBookPk={cBookPk}\r\n              currentScore={currentScore}\r\n              setCurrentScore={setCurrentScore}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={sendScore}>\r\n              완료\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HouseBook;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\houseBookItem.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\starScore.js",["701"],"import React, { useState, useEffect } from \"react\";\r\nimport NoStarItem from \"./noStarItem\";\r\nimport StarItem from \"./starItem\";\r\n\r\nconst StartScore = ({ currentScore, setCurrentScore }) => {\r\n  const [checkClick, setCheckClick] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {[...Array(5)].map((n, index) => {\r\n          return index < currentScore ? (\r\n            <StarItem\r\n              key={index}\r\n              index={index}\r\n              setCurrentScore={setCurrentScore}\r\n              currentScore={currentScore}\r\n              setCheckClick={setCheckClick}\r\n              checkClick={checkClick}\r\n            />\r\n          ) : (\r\n            <NoStarItem\r\n              key={index}\r\n              index={index}\r\n              setCurrentScore={setCurrentScore}\r\n              currentScore={currentScore}\r\n              setCheckClick={setCheckClick}\r\n              checkClick={checkClick}\r\n            />\r\n          );\r\n        })}\r\n        <span> 별점 : {currentScore}</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StartScore;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\noStarItem.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\history\\starItem.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareModal.js",["702"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Axios from \"axios\";\r\nimport TravelMyPlanList from \"./travelMyPlanList\";\r\nimport SharePlanList from \"./sharePlanList\";\r\nimport \"./shareModal.scss\";\r\nimport ShareShowDetatil from \"./shareShowDetatil\";\r\nconst ShareModal = ({ modal, shareToggle, makePlanList, setMakePlanList }) => {\r\n  const [sDate, setSDate] = useState(null);\r\n  const [shareList, setShareList] = useState([]);\r\n  const [choiceShare, setChoiceShare] = useState(0);\r\n  const [rangeDate, setRangeDate] = useState(0);\r\n  const [location, setLocation] = useState(\"\");\r\n  const [areaCode, setAreaCode] = useState(0);\r\n  const [inputTitle, setInputTitle] = useState(\"\");\r\n  const [inputDate, setInputDate] = useState();\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  const [shareSearchInfo, setShareSearchInfo] = useState({\r\n    location: \"\",\r\n  });\r\n\r\n  const shareModalClose = (e) => {\r\n    setSDate(null);\r\n    setShareList([]);\r\n    setChoiceShare(0);\r\n    setInputTitle(\"\");\r\n    setInputDate();\r\n    shareToggle();\r\n  };\r\n\r\n  const chageInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setShareSearchInfo({ ...shareSearchInfo, [name]: value });\r\n  };\r\n\r\n  // 여행 시작날짜 변경\r\n  const onChangeSDate = (e) => {\r\n    let date = new Date(e);\r\n    let year = date.getFullYear(); // 년도\r\n    let month; // 월\r\n    month =\r\n      String(date.getMonth() + 1).length === 1\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1;\r\n    let day = date.getDate(); // 날짜\r\n    let resultDay = year + \"-\" + month + \"-\" + day;\r\n    setInputDate(resultDay);\r\n    setSDate(e);\r\n  };\r\n  const searchClick = () => {\r\n    console.log(shareSearchInfo[\"location\"]);\r\n\r\n    let location = shareSearchInfo[\"location\"];\r\n    // 날짜 갯수\r\n\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/share-plan/${location}`,\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setShareList(response.data);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const onSaveSharePlan = () => {\r\n    console.log(\"choiceShare : \" + choiceShare);\r\n    console.log(\"inputTitle : \" + inputTitle);\r\n    console.log(\"inputDate : \" + inputDate);\r\n    console.log(\"rangeDate : \" + rangeDate);\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/plans/share-detail/${choiceShare}`,\r\n          {\r\n            inputTitle: inputTitle,\r\n            inputDate: inputDate,\r\n            rangeDate: rangeDate,\r\n            areaCode: areaCode,\r\n            location: location,\r\n          },\r\n          config\r\n        );\r\n        console.log(\"공유 플랜  저장하기\");\r\n        console.log(response);\r\n\r\n        setMakePlanList(makePlanList.concat(response.data));\r\n      } catch (error) {\r\n        alert(\"공유플랜저장하기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n\r\n      shareModalClose();\r\n    }\r\n    let check = window.confirm(\r\n      `${inputDate}~${getAddTravelDate(\r\n        inputDate,\r\n        rangeDate\r\n      )} (${rangeDate})동안 여행으로 공유 받으시겠습니까?`\r\n    );\r\n\r\n    if (check) {\r\n      fn();\r\n    } else {\r\n      shareModalClose();\r\n    }\r\n  };\r\n  return (\r\n    <Modal size=\"xl\" isOpen={modal} toggle={shareModalClose}>\r\n      <ModalHeader toggle={shareModalClose}>\r\n        공유 여행\r\n        <br></br>\r\n        <div className=\"shareInputs\">\r\n          <div>\r\n            <Input name=\"location\" placeholder=\"지역명\" onChange={chageInput} />\r\n          </div>\r\n\r\n          <div>\r\n            <Button onClick={searchClick}>검색</Button>\r\n          </div>\r\n        </div>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        {\" \"}\r\n        <div className=\"shareModalBody\">\r\n          <div className=\"shareListBody\">\r\n            {shareList.map((item, idx) => (\r\n              <SharePlanList\r\n                idx={idx}\r\n                key={item.id}\r\n                id={item.id}\r\n                basicInfo={item}\r\n                setChoiceShare={setChoiceShare}\r\n                setRangeDate={setRangeDate}\r\n                setAreaCode={setAreaCode}\r\n                setLocation={setLocation}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"shareDetailBody\">\r\n            <ShareShowDetatil choiceShare={choiceShare} />\r\n          </div>\r\n        </div>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        {choiceShare !== 0 && (\r\n          <>\r\n            <input\r\n              placeholder=\"여행 제목\"\r\n              name=\"planTitle\"\r\n              value={inputTitle}\r\n              onChange={(e) => {\r\n                setInputTitle(e.target.value);\r\n              }}\r\n            ></input>\r\n            <DatePicker\r\n              placeholderText=\"여행 첫 날짜 \"\r\n              minDate={new Date()}\r\n              selected={sDate !== null && sDate}\r\n              onChange={(date) => onChangeSDate(date)}\r\n              selectsStart\r\n              startDate={new Date()}\r\n            />\r\n            <span>\r\n              <Button color=\"primary\" onClick={onSaveSharePlan}>\r\n                결정\r\n              </Button>{\" \"}\r\n            </span>\r\n          </>\r\n        )}\r\n        <Button color=\"secondary\" onClick={shareModalClose}>\r\n          Cancel\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// 날짜 계싼기\r\nfunction getAddTravelDate(param1, number) {\r\n  console.log(\"==getDateRangeData==\");\r\n  console.log(\"시작 : \" + param1);\r\n\r\n  //param1은 시작일, param2는 종료일이다.\r\n\r\n  let ss_day = new Date(param1);\r\n\r\n  ss_day.setDate(ss_day.getDate() + (number - 1));\r\n\r\n  let _mon_ = ss_day.getMonth() + 1;\r\n  _mon_ = _mon_ < 10 ? \"0\" + _mon_ : _mon_;\r\n  let _day_ = ss_day.getDate();\r\n  _day_ = _day_ < 10 ? \"0\" + _day_ : _day_;\r\n\r\n  return ss_day.getFullYear() + \"-\" + _mon_ + \"-\" + _day_;\r\n}\r\n\r\nexport default ShareModal;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\sharePlanList.js",["703","704"],"import React from \"react\";\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport \"./sharePlanList.scss\";\r\n\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nconst SharePlanList = ({\r\n  idx,\r\n  id,\r\n  basicInfo,\r\n  setRangeDate,\r\n  setChoiceShare,\r\n  setAreaCode,\r\n  setLocation,\r\n}) => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  const onClickMovePlan = () => {\r\n    setRangeDate(basicInfo[\"range_date\"]);\r\n    setAreaCode(basicInfo[\"areacode\"]);\r\n    setLocation(basicInfo[\"location\"]);\r\n    setChoiceShare(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sharePlanListMain\" onClick={onClickMovePlan}>\r\n        <div className=\"shareNumberFlex\">\r\n          <Badge className=\"shareNumber\" color=\"primary\">\r\n            {idx + 1}\r\n          </Badge>\r\n        </div>\r\n        <div>\r\n          <div className=\"sharePlanTitleFlex\">\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"plan_title\"]}</Badge>\r\n            </div>\r\n\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"location\"]}</Badge>\r\n            </div>\r\n          </div>\r\n          <div className=\"sharePlanDateFlex\">\r\n            <Badge color=\"info\">{basicInfo[\"range_date\"]}일 동안의 여행</Badge>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Button size=\"sm\" color=\"primary\" outline>\r\n            추천<Badge color=\"secondary\">{basicInfo[\"recommend\"]}</Badge>\r\n          </Button>\r\n          <Button size=\"sm\" color=\"primary\" outline>\r\n            공유<Badge color=\"secondary\">{basicInfo[\"share\"]}</Badge>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SharePlanList;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareShowDetatil.js",["705","706"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport ShareTravelDetail from \"./shareTravelDetail\";\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport \"./shareShowDetatil.scss\";\r\nconst ShareShowDetatil = ({ choiceShare }) => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  const [shareInfo, setShareInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (choiceShare === 0) {\r\n      return;\r\n    }\r\n\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/share-detail/${choiceShare}`,\r\n          config\r\n        );\r\n        console.log(\"선택 공유 계획 \");\r\n        console.log(response);\r\n        setShareInfo(response.data);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, [choiceShare]);\r\n  return (\r\n    <div className=\"shareContentTopInner\">\r\n      {shareInfo !== null && (\r\n        <ShareTravelDetail shareInfo={shareInfo} choiceShare={choiceShare} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareShowDetatil;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareTravelDetail.js",["707","708"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport ShareKaKao from \"./shareKaKao\";\r\nimport ShareKaKaoDetailPlace from \"./shareKaKaoDetailPlace\";\r\nimport \"./shareTravelDetail.scss\";\r\nconst { kakao } = window;\r\n\r\nconst ShareTravelDetail = ({ shareInfo, choiceShare }) => {\r\n  const { store } = useAppContext();\r\n  const [kakaoMap, setKakaoMap] = useState(null);\r\n\r\n  const [nthDay, setNthDay] = useState(1);\r\n\r\n  useEffect(() => {\r\n    let mapContainer = document.getElementById(\"shareMapPlace\"); // 지도를 표시할 div\r\n    let mapOption = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n      level: 3, // 지도의 확대 레벨\r\n    };\r\n    setKakaoMap(new kakao.maps.Map(mapContainer, mapOption));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"shareDetailContainer\">\r\n      <div>\r\n        <div className=\"shareTitleAndDate\">\r\n          <div className=\"sharePlanTitle\">\r\n            {\" \"}\r\n            <span>{shareInfo[\"plan_title\"]}</span>{\" \"}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <ShareKaKao\r\n              kakaoMap={kakaoMap}\r\n              shareInfo={shareInfo}\r\n              nthDay={nthDay}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ShareKaKaoDetailPlace\r\n        shareInfo={shareInfo[\"share_schedule\"][nthDay - 1]}\r\n        nthDay={nthDay}\r\n        maxDay={shareInfo[\"share_schedule\"].length}\r\n        setNthDay={setNthDay}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareTravelDetail;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareKaKao.js",["709","710","711"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../admin/adminShowKaKao.scss\";\r\nconst { kakao } = window;\r\nlet dots = [];\r\nconst ShareKaKao = ({ kakaoMap, shareInfo, nthDay }) => {\r\n  const [bounds, setBounds] = useState(new kakao.maps.LatLngBounds());\r\n  const [customOverlay, setCustomOverlay] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"=======ShareKaKao========\");\r\n    console.log(shareInfo);\r\n\r\n    //맵 생성\r\n\r\n    var moveLine; // 선이 그려지고 있을때 마우스 움직임에 따라 그려질 선 객체 입니다\r\n\r\n    var distanceOverlay; // 선의 거리정보를 표시할 커스텀오버레이 입니다\r\n    //var dots = [dots]; // 선이 그려지고 있을때 클릭할 때마다 클릭 지점과 거리를 표시하는 커스텀 오버레이 배열입니다.\r\n\r\n    let clickLine;\r\n    setTimeout(() => {\r\n      clickLine = new kakao.maps.Polyline({\r\n        map: kakaoMap, // 선을 표시할 지도입니다\r\n        path: [], // 선을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\r\n        strokeWeight: 3, // 선의 두께입니다\r\n        strokeColor: \"#db4040\", // 선의 색깔입니다\r\n        strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\r\n        strokeStyle: \"solid\", // 선의 스타일입니다\r\n      });\r\n\r\n      for (let i = 0; i < points.length; i++) {\r\n        console.log(\"======clickLine======\");\r\n        console.log(\"path : \" + points[i]);\r\n        console.log(\"clickLine : \", clickLine);\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        let path = clickLine.getPath();\r\n        path.push(points[i]);\r\n        clickLine.setPath(path);\r\n\r\n        var distance = Math.round(clickLine.getLength());\r\n        displayCircleDot(kakaoMap, points[i], distance, dots);\r\n      }\r\n    }, 300);\r\n\r\n    console.log(\"====detailPlace_test===\");\r\n    console.log(shareInfo);\r\n    console.log(shareInfo[\"share_schedule\"][nthDay - 1]);\r\n    console.log(shareInfo[\"share_schedule\"][nthDay - 1][\"share_detailPlace\"]);\r\n\r\n    let placeList =\r\n      shareInfo[\"share_schedule\"][nthDay - 1][\"share_detailPlace\"];\r\n    // 각 장소 위경도 격납\r\n    let points = placeList.map(\r\n      (item) => new kakao.maps.LatLng(item.place_y, item.place_x)\r\n    );\r\n\r\n    let customOverlayList = placeList.map(\r\n      (item, index) =>\r\n        new kakao.maps.CustomOverlay({\r\n          position: new kakao.maps.LatLng(item.place_y, item.place_x),\r\n          content: `<button class =\"myBtns displayBtn${\r\n            index + 1\r\n          }\"><span class=\"myMarker\">${index + 1}</span></button>`,\r\n        })\r\n    );\r\n    //console.log(\"points\", points);\r\n    //console.log(\"customOverlay1\", customOverlay);\r\n\r\n    //console.log(\"customOverlayList\", customOverlayList);\r\n    setCustomOverlay(customOverlay.concat(customOverlayList));\r\n    //console.log(\"customOverlay2\", customOverlay);\r\n\r\n    if (customOverlay.length !== 0) {\r\n      for (let j = 0; j < customOverlay.length; j++) {\r\n        customOverlay[j].setMap(null);\r\n      }\r\n    }\r\n    // 지도 범위 재생성\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      console.log(\"======clickLine======\");\r\n      console.log(\"path : \" + points[i]);\r\n      console.log(\"clickLine : \", clickLine);\r\n      // LatLngBounds 객체에 좌표를 추가합니다\r\n\r\n      //  var distance = Math.round(clickLine.getLength());\r\n      // displayCircleDot(clickPosition, distance);\r\n\r\n      customOverlayList[i].setMap(kakaoMap);\r\n\r\n      bounds.extend(points[i]);\r\n    }\r\n\r\n    let totlaY = 0;\r\n    placeList.map((item, index) => (totlaY += parseFloat(item.place_y)));\r\n    console.log(\"totlaY : \", totlaY);\r\n    let totlaX = 0;\r\n    placeList.map((item, index) => (totlaX += parseFloat(item.place_x)));\r\n    console.log(\"totlaX : \", totlaX);\r\n    const coords = new kakao.maps.LatLng(\r\n      totlaY / placeList.length,\r\n      totlaX / placeList.length\r\n    );\r\n\r\n    console.log(\"bounds : \", bounds);\r\n\r\n    console.log(\"coords : \", coords);\r\n    console.log(\"kakaoMap : \", kakaoMap);\r\n    kakaoMap && kakaoMap.setCenter(coords);\r\n    kakaoMap && kakaoMap.setBounds(bounds);\r\n\r\n    return () => {\r\n      console.log(\"=======dot========\");\r\n      console.log(dots);\r\n      console.log(\"=======points========\");\r\n      console.log(points);\r\n      setBounds(new kakao.maps.LatLngBounds());\r\n      for (let i = 0; i < dots.length; i++) {\r\n        if (dots[i].circle) {\r\n          dots[i].circle.setMap(null);\r\n        }\r\n\r\n        if (dots[i].distance) {\r\n          dots[i].distance.setMap(null);\r\n        }\r\n      }\r\n\r\n      dots = [];\r\n      clickLine && clickLine.setMap(null);\r\n\r\n      clickLine && (clickLine = null);\r\n    };\r\n  }, [shareInfo, nthDay, kakaoMap]);\r\n\r\n  return (\r\n    <div\r\n      id=\"shareMapPlace\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nfunction displayCircleDot(map, position, distance, dots) {\r\n  // 클릭 지점을 표시할 빨간 동그라미 커스텀오버레이를 생성합니다\r\n  var circleOverlay = new kakao.maps.CustomOverlay({\r\n    content: '<span class=\"dot\"></span>',\r\n    position: position,\r\n    zIndex: 1,\r\n  });\r\n\r\n  // 지도에 표시합니다\r\n  circleOverlay.setMap(map);\r\n\r\n  if (distance > 0) {\r\n    // 클릭한 지점까지의 그려진 선의 총 거리를 표시할 커스텀 오버레이를 생성합니다\r\n    var distanceOverlay = new kakao.maps.CustomOverlay({\r\n      content:\r\n        '<div class=\"dotOverlay\">거리 <span class=\"number\">' +\r\n        distance +\r\n        \"</span>m</div>\",\r\n      position: position,\r\n      yAnchor: 1.5,\r\n      zIndex: 2,\r\n    });\r\n\r\n    // 지도에 표시합니다\r\n    distanceOverlay.setMap(map);\r\n  }\r\n\r\n  // 배열에 추가합니다\r\n  dots.push({ circle: circleOverlay, distance: distanceOverlay });\r\n}\r\n\r\nexport default ShareKaKao;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareKaKaoDetailPlace.js",["712"],"import React from \"react\";\r\n\r\nimport ShareCollectPlaces from \"./shareCollectPlaces\";\r\nimport \"./shareKaKaoDetailPlace.scss\";\r\nimport { AiOutlineDoubleLeft, AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport BestShareCollectPlaces from \"./bestShareCollectPlaces\";\r\nconst ShareKaKaoDetailPlace = ({ shareInfo, nthDay, maxDay, setNthDay }) => {\r\n  const onClickPreDay = () => {\r\n    if (nthDay === 1) {\r\n      return;\r\n    }\r\n    setNthDay(nthDay - 1);\r\n  };\r\n\r\n  const onClickNextDay = () => {\r\n    if (nthDay === maxDay) {\r\n      return;\r\n    }\r\n    setNthDay(nthDay + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"shareNthDetailPlanContainer\">\r\n      <div className=\"shareNthAndButton\">\r\n        <AiOutlineDoubleLeft\r\n          onClick={onClickPreDay}\r\n          className=\"NthMoveBtn\"\r\n        ></AiOutlineDoubleLeft>\r\n        <span className=\"nthDayContext\">{nthDay}번째 날</span>\r\n        <AiOutlineDoubleRight\r\n          onClick={onClickNextDay}\r\n          className=\"NthMoveBtn\"\r\n        ></AiOutlineDoubleRight>\r\n      </div>\r\n      <div className=\"shareNthDetailPlanList\">\r\n        <BestShareCollectPlaces shareInfo={shareInfo} nthDay={nthDay} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareKaKaoDetailPlace;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareCollectPlaces.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareCollectPlaceItem.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareScoreModal.js",["713","714","715","716","717","718","719"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nconst ShareScoreModal = () => {\r\n  return (\r\n    <></>\r\n    // <div>\r\n    //   <Modal isOpen={modal} toggle={toggle}>\r\n    //     <ModalHeader toggle={toggle}>[{cHouseName}]의 평점</ModalHeader>\r\n    //     <ModalBody>\r\n    //       <StarScore\r\n    //         cHousePk={cHousePk}\r\n    //         cBookPk={cBookPk}\r\n    //         currentScore={currentScore}\r\n    //         setCurrentScore={setCurrentScore}\r\n    //       />\r\n    //     </ModalBody>\r\n    //     <ModalFooter>\r\n    //       <Button color=\"secondary\" onClick={sendScore}>\r\n    //         완료\r\n    //       </Button>\r\n    //       <Button color=\"secondary\" onClick={toggle}>\r\n    //         Cancel\r\n    //       </Button>\r\n    //     </ModalFooter>\r\n    //   </Modal>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ShareScoreModal;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\shareScore.js",["720"],"import React, { useState, useEffect } from \"react\";\r\nimport NoStarItem from \"../history/noStarItem\";\r\nimport StarItem from \"../history/starItem\";\r\n\r\nconst ShareScore = ({ shareScore, setshareScore }) => {\r\n  const [checkClick, setCheckClick] = useState(false);\r\n  return (\r\n    <>\r\n      <div>\r\n        {[...Array(5)].map((n, index) => {\r\n          return index < shareScore ? (\r\n            <StarItem\r\n              key={index}\r\n              index={index}\r\n              setCurrentScore={setshareScore}\r\n              currentScore={shareScore}\r\n              setCheckClick={setCheckClick}\r\n              checkClick={checkClick}\r\n            />\r\n          ) : (\r\n            <NoStarItem\r\n              key={index}\r\n              index={index}\r\n              setCurrentScore={setshareScore}\r\n              currentScore={shareScore}\r\n              setCheckClick={setCheckClick}\r\n              checkClick={checkClick}\r\n            />\r\n          );\r\n        })}\r\n        <span> 별점 : {shareScore}</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShareScore;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\lost.js",["721","722","723"],"import React from \"react\";\r\n\r\nimport { Button, Card, CardText, CardBody, CardTitle, Badge } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Lost = () => {\r\n  return (\r\n    <>\r\n      <div class=\"typeArea\">\r\n        <div>아이디, 비밀번호 찾기, 선택해주세요</div>\r\n        <div class=\"cardArea\">\r\n          <Link to=\"/index/check?type=1\">\r\n            <h2>\r\n              <Badge href=\"#\" color=\"info\">\r\n                <CardText>아이디</CardText>\r\n              </Badge>\r\n            </h2>\r\n          </Link>\r\n          <span>\r\n            {\"\\u00A0\"}\r\n            {\"\\u00A0\"}\r\n            {\"\\u00A0\"}\r\n          </span>\r\n          <Link to=\"/index/check?type=2\">\r\n            <h2>\r\n              <Badge href=\"#\" color=\"info\">\r\n                <CardText>비밀번호</CardText>\r\n              </Badge>\r\n            </h2>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/index\">\r\n            <Button className=\"firstBtn\" outline color=\"secondary\">\r\n              돌아가기\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lost;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\accounts\\check.js",["724","725"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport queryString from \"query-string\";\r\nconst Check = ({ match, location }) => {\r\n  const checkType = queryString.parse(location.search).type;\r\n\r\n  const [formData, setFormData] = useState({\r\n    checkType: checkType,\r\n  });\r\n  const history = useHistory();\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    console.log(formData);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          \"http://localhost:8000/accounts/lost/\",\r\n          formData\r\n        );\r\n        console.log(\"response : \", response);\r\n\r\n        history.push(\"/index\");\r\n      } catch (error) {\r\n        if (error.response) {\r\n          console.log(error.response);\r\n          // setFieldsErrorMessagess   => {username : [\"m1\",\"m2\"], password : []}\r\n          // python dict.items();\r\n        } else {\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"signUpFormArea\">\r\n        <h3>{checkType === \"1\" ? \"아이디 찾기\" : \"비밀번호 찾기\"}</h3>\r\n\r\n        <Form onSubmit={onSubmit}>\r\n          {checkType === \"2\" && (\r\n            <FormGroup>\r\n              <Label for=\"username\">userId</Label>\r\n              <Input\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                name=\"username\"\r\n                id=\"username\"\r\n                placeholder=\"input username\"\r\n              />\r\n            </FormGroup>\r\n          )}\r\n\r\n          <FormGroup>\r\n            <Label for=\"name\">your name</Label>\r\n            <Input\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              placeholder=\"input your name\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"email\">email</Label>\r\n            <Input\r\n              onChange={onChange}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"input email\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"phone_number\">your phone number</Label>\r\n            <Input\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              name=\"phone_number\"\r\n              id=\"phone_number\"\r\n              placeholder=\"input your phone_number\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <hr />\r\n          <div className=\"submitBtn\">\r\n            <Button>Submit</Button>\r\n            <Link to=\"/index/lost\">\r\n              <Button className=\"firstBtn\" outline color=\"secondary\">\r\n                돌아가기\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Check;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\myEditPWForm.js",["726","727","728","729","730"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  CardImg,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./myEditProfileForm.scss\";\r\nimport Axios from \"axios\";\r\nconst MyEditPWForm = ({ editToggle }) => {\r\n  const { store } = useAppContext();\r\n  const [pwForm, setPwForm] = useState({});\r\n\r\n  const onChangeinput = (e) => {\r\n    const { name, value } = e.target;\r\n    setPwForm((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onSubmitEditPW = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"data : \", pwForm);\r\n    let pw = pwForm[\"pw\"];\r\n    let cpw = pwForm[\"cpw\"];\r\n    let ccpw = pwForm[\"ccpw\"];\r\n\r\n    if (pw !== cpw && cpw === ccpw) {\r\n      fn();\r\n    } else if (pw === cpw) {\r\n      alert(\"현재 비밀번호와 변경할 비밀번호가 같습니다. 다시 입력해주세요\");\r\n    } else if (cpw !== ccpw) {\r\n      alert(\"변경할 비밀번호와 확인 비밀번호가 다릅니다. 다시 입력해주세요\");\r\n    }\r\n\r\n    async function fn() {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `JWT ${store.jwtToken}`,\r\n        },\r\n      };\r\n      try {\r\n        let response = await Axios.put(\r\n          \"http://localhost:8000/accounts/editPW/\",\r\n          pwForm,\r\n          config\r\n        );\r\n\r\n        console.log(response.data);\r\n\r\n        response.data.msg && alert(\"비밀번호가 변경되었습니다.\");\r\n        editToggle();\r\n      } catch (error) {\r\n        alert(\"로그인실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <br />\r\n      <form onSubmit={onSubmitEditPW}>\r\n        <FormGroup row>\r\n          <Label for=\"pw\" sm={4}>\r\n            current PassWord\r\n          </Label>\r\n          <Col sm={6}>\r\n            <Input\r\n              onChange={onChangeinput}\r\n              type=\"password\"\r\n              name=\"pw\"\r\n              placeholder=\"현재비밀번호\"\r\n              id=\"pw\"\r\n              value={setPwForm.pw}\r\n              required={true}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label for=\"cpw\" sm={4}>\r\n            change PassWord\r\n          </Label>\r\n          <Col sm={6}>\r\n            <Input\r\n              onChange={onChangeinput}\r\n              type=\"password\"\r\n              placeholder=\"변경할 비밀번호\"\r\n              name=\"cpw\"\r\n              id=\"cpw\"\r\n              value={setPwForm.cpw}\r\n              required={true}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label for=\"ccpw\" sm={4}>\r\n            check PassWord\r\n          </Label>\r\n          <Col sm={6}>\r\n            <Input\r\n              onChange={onChangeinput}\r\n              type=\"password\"\r\n              name=\"ccpw\"\r\n              placeholder=\"변경할 비밀번호 재입력\"\r\n              id=\"ccpw\"\r\n              value={setPwForm.ccpw}\r\n              required={true}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <br />\r\n        <hr />\r\n        <div className=\"profileModalBtns\">\r\n          <Button type=\"submit\" outline color=\"primary\">\r\n            change\r\n          </Button>\r\n          <Button type=\"button\" outline color=\"primary\" onClick={editToggle}>\r\n            close\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyEditPWForm;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestSharePlanList.js",["731","732","733","734","735","736","737"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Input, Badge } from \"reactstrap\";\r\nimport SharePlanList from \"./sharePlanList\";\r\nimport Axios from \"axios\";\r\nimport \"./bestSharePlanList.scss\";\r\nimport { useAppContext } from \"store\";\r\nimport BestSharePlanListAvg from \"./bestSharePlanListAvg\";\r\nimport BestShareList from \"./bestShareList\";\r\nimport BestSharePlanItem from \"./bestSharePlanItem\";\r\nconst BestSharePlanList = ({ setChoiceShare }) => {\r\n  const [bestShareType, setBestShareType] = useState(false);\r\n  const [shareList, setShareList] = useState([]);\r\n  const [scoreList, setScoreList] = useState([]);\r\n  const [rangeDate, setRangeDate] = useState(0);\r\n  const [areaCode, setAreaCode] = useState(0);\r\n  const [location, setLocation] = useState(\"\");\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/best-share/0`, // 0 공유 순\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setShareList(response.data);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n\r\n  const searchShareCountClick = () => {\r\n    // 날짜 갯수\r\n\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/best-share/0`,\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setShareList(response.data);\r\n        setBestShareType(false);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const searchShareAverageClick = () => {\r\n    // 날짜 갯수\r\n\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/best-share/1`,\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setShareList(response.data.sharePlan);\r\n        setScoreList(response.data.score);\r\n        setBestShareType(true);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"shareInputs\">\r\n        <div>\r\n          <h3>\r\n            <Badge>Best 여행 5</Badge>\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <Button onClick={searchShareCountClick}>공유 순</Button>\r\n        </div>\r\n\r\n        <div>\r\n          <Button onClick={searchShareAverageClick}>평점 순</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"bestShareListBody\">\r\n        {bestShareType\r\n          ? shareList.map((item, idx) => (\r\n              <BestSharePlanListAvg\r\n                idx={idx}\r\n                key={item.id}\r\n                id={item.id}\r\n                basicInfo={item}\r\n                setChoiceShare={setChoiceShare}\r\n                setRangeDate={setRangeDate}\r\n                setAreaCode={setAreaCode}\r\n                setLocation={setLocation}\r\n                avgScore={scoreList[idx]}\r\n              />\r\n            ))\r\n          : shareList.map((item, idx) => (\r\n              <BestSharePlanItem\r\n                idx={idx}\r\n                key={item.id}\r\n                id={item.id}\r\n                basicInfo={item}\r\n                setChoiceShare={setChoiceShare}\r\n                setRangeDate={setRangeDate}\r\n                setAreaCode={setAreaCode}\r\n                setLocation={setLocation}\r\n              />\r\n            ))}\r\n        {/* {shareList.map((item, idx) => (\r\n          <BestSharePlanList\r\n            idx={idx}\r\n            key={item.id}\r\n            id={item.id}\r\n            basicInfo={item}\r\n            setChoiceShare={setChoiceShare}\r\n            setRangeDate={setRangeDate}\r\n            setAreaCode={setAreaCode}\r\n            setLocation={setLocation}\r\n          />\r\n        ))} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BestSharePlanList;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestSharePlanListAvg.js",["738","739"],"import React from \"react\";\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport \"./sharePlanList.scss\";\r\n\r\nimport { useAppContext } from \"store\";\r\n\r\nimport Axios from \"axios\";\r\nconst BestSharePlanListAvg = ({\r\n  idx,\r\n  id,\r\n  basicInfo,\r\n  setRangeDate,\r\n  setChoiceShare,\r\n  setAreaCode,\r\n  avgScore,\r\n  setLocation,\r\n}) => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  const onClickMovePlan = () => {\r\n    setRangeDate(basicInfo[\"range_date\"]);\r\n    setAreaCode(basicInfo[\"areacode\"]);\r\n    setLocation(basicInfo[\"location\"]);\r\n    setChoiceShare(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sharePlanListMain\" onClick={onClickMovePlan}>\r\n        <div className=\"shareNumberFlex\">\r\n          <Badge className=\"shareNumber\" color=\"primary\">\r\n            {idx + 1}\r\n          </Badge>\r\n        </div>\r\n        <div>\r\n          <div className=\"sharePlanTitleFlex\">\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"plan_title\"]}</Badge>\r\n            </div>\r\n\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"location\"]}</Badge>\r\n            </div>\r\n          </div>\r\n          <div className=\"sharePlanDateFlex\">\r\n            <Badge color=\"info\">{basicInfo[\"range_date\"]}일 동안의 여행</Badge>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Button size=\"sm\" color=\"primary\" outline>\r\n            평점<Badge color=\"secondary\">{String(avgScore).substr(0, 3)}</Badge>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BestSharePlanListAvg;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareList.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestSharePlanItem.js",["740","741"],"import React from \"react\";\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport \"./sharePlanList.scss\";\r\n\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nconst BestSharePlanItem = ({\r\n  idx,\r\n  id,\r\n  basicInfo,\r\n  setRangeDate,\r\n  setChoiceShare,\r\n  setAreaCode,\r\n  setLocation,\r\n}) => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n  const onClickMovePlan = () => {\r\n    setRangeDate(basicInfo[\"range_date\"]);\r\n    setAreaCode(basicInfo[\"areacode\"]);\r\n    setLocation(basicInfo[\"location\"]);\r\n    setChoiceShare(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sharePlanListMain\" onClick={onClickMovePlan}>\r\n        <div className=\"shareNumberFlex\">\r\n          <Badge className=\"shareNumber\" color=\"primary\">\r\n            {idx + 1}\r\n          </Badge>\r\n        </div>\r\n        <div>\r\n          <div className=\"sharePlanTitleFlex\">\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"plan_title\"]}</Badge>\r\n            </div>\r\n\r\n            <div>\r\n              <Badge color=\"success\">{basicInfo[\"location\"]}</Badge>\r\n            </div>\r\n          </div>\r\n          <div className=\"sharePlanDateFlex\">\r\n            <Badge color=\"info\">{basicInfo[\"range_date\"]}일 동안의 여행</Badge>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Button size=\"sm\" color=\"primary\" outline>\r\n            공유<Badge color=\"secondary\">{basicInfo[\"share\"]}</Badge>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BestSharePlanItem;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareShowDetail.js",["742","743","744"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport ShareTravelDetail from \"./shareTravelDetail\";\r\nimport { useAppContext } from \"store\";\r\nimport Axios from \"axios\";\r\nimport \"./bestShareShowDetail.scss\";\r\nimport BestShareTravelDetail from \"./bestShareTravelDetail\";\r\nconst BestShareShowDetail = ({ choiceShare }) => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  const [shareInfo, setShareInfo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (choiceShare === 0) {\r\n      return;\r\n    }\r\n\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/plans/share-detail/${choiceShare}`,\r\n          config\r\n        );\r\n        console.log(\"선택 공유 계획 \");\r\n        console.log(response);\r\n        setShareInfo(response.data);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, [choiceShare]);\r\n  return (\r\n    <div className=\"bestShareContentTopInner\">\r\n      {shareInfo !== null && (\r\n        <BestShareTravelDetail\r\n          shareInfo={shareInfo}\r\n          choiceShare={choiceShare}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BestShareShowDetail;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareTravelDetail.js",["745","746","747"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport ShareKaKao from \"./shareKaKao\";\r\nimport ShareKaKaoDetailPlace from \"./shareKaKaoDetailPlace\";\r\nimport \"./bestShareTravelDetail.scss\";\r\nimport BestShareKaKao from \"./bestShareKaKao\";\r\nconst { kakao } = window;\r\nconst BestShareTravelDetail = ({ shareInfo, choiceShare }) => {\r\n  const { store } = useAppContext();\r\n  const [kakaoMap, setKakaoMap] = useState(null);\r\n\r\n  const [nthDay, setNthDay] = useState(1);\r\n\r\n  useEffect(() => {\r\n    let mapContainer = document.getElementById(\"bestShareMapPlace\"); // 지도를 표시할 div\r\n    let mapOption = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n      level: 3, // 지도의 확대 레벨\r\n    };\r\n    setKakaoMap(new kakao.maps.Map(mapContainer, mapOption));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"shareDetailContainer\">\r\n      <div>\r\n        <div className=\"shareTitleAndDate\">\r\n          <div className=\"sharePlanTitle\">\r\n            {\" \"}\r\n            <span>{shareInfo[\"plan_title\"]}</span>{\" \"}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <BestShareKaKao\r\n              kakaoMap={kakaoMap}\r\n              shareInfo={shareInfo}\r\n              nthDay={nthDay}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ShareKaKaoDetailPlace\r\n        shareInfo={shareInfo[\"share_schedule\"][nthDay - 1]}\r\n        nthDay={nthDay}\r\n        maxDay={shareInfo[\"share_schedule\"].length}\r\n        setNthDay={setNthDay}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BestShareTravelDetail;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareKaKao.js",["748","749","750"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../admin/adminShowKaKao.scss\";\r\nconst { kakao } = window;\r\nlet dots = [];\r\nconst BestShareKaKao = ({ kakaoMap, shareInfo, nthDay }) => {\r\n  const [bounds, setBounds] = useState(new kakao.maps.LatLngBounds());\r\n  const [customOverlay, setCustomOverlay] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"=======ShareKaKao========\");\r\n    console.log(shareInfo);\r\n\r\n    //맵 생성\r\n\r\n    var moveLine; // 선이 그려지고 있을때 마우스 움직임에 따라 그려질 선 객체 입니다\r\n\r\n    var distanceOverlay; // 선의 거리정보를 표시할 커스텀오버레이 입니다\r\n    //var dots = [dots]; // 선이 그려지고 있을때 클릭할 때마다 클릭 지점과 거리를 표시하는 커스텀 오버레이 배열입니다.\r\n\r\n    let clickLine;\r\n    setTimeout(() => {\r\n      clickLine = new kakao.maps.Polyline({\r\n        map: kakaoMap, // 선을 표시할 지도입니다\r\n        path: [], // 선을 구성하는 좌표 배열입니다 클릭한 위치를 넣어줍니다\r\n        strokeWeight: 3, // 선의 두께입니다\r\n        strokeColor: \"#db4040\", // 선의 색깔입니다\r\n        strokeOpacity: 1, // 선의 불투명도입니다 0에서 1 사이값이며 0에 가까울수록 투명합니다\r\n        strokeStyle: \"solid\", // 선의 스타일입니다\r\n      });\r\n\r\n      for (let i = 0; i < points.length; i++) {\r\n        console.log(\"======clickLine======\");\r\n        console.log(\"path : \" + points[i]);\r\n        console.log(\"clickLine : \", clickLine);\r\n        // LatLngBounds 객체에 좌표를 추가합니다\r\n        let path = clickLine.getPath();\r\n        path.push(points[i]);\r\n        clickLine.setPath(path);\r\n\r\n        var distance = Math.round(clickLine.getLength());\r\n        displayCircleDot(kakaoMap, points[i], distance, dots);\r\n      }\r\n    }, 300);\r\n\r\n    console.log(\"====detailPlace_test===\");\r\n    console.log(shareInfo);\r\n    console.log(shareInfo[\"share_schedule\"][nthDay - 1]);\r\n    console.log(shareInfo[\"share_schedule\"][nthDay - 1][\"share_detailPlace\"]);\r\n\r\n    let placeList =\r\n      shareInfo[\"share_schedule\"][nthDay - 1][\"share_detailPlace\"];\r\n    // 각 장소 위경도 격납\r\n    let points = placeList.map(\r\n      (item) => new kakao.maps.LatLng(item.place_y, item.place_x)\r\n    );\r\n\r\n    let customOverlayList = placeList.map(\r\n      (item, index) =>\r\n        new kakao.maps.CustomOverlay({\r\n          position: new kakao.maps.LatLng(item.place_y, item.place_x),\r\n          content: `<button class =\"myBtns displayBtn${\r\n            index + 1\r\n          }\"><span class=\"myMarker\">${index + 1}</span></button>`,\r\n        })\r\n    );\r\n    //console.log(\"points\", points);\r\n    //console.log(\"customOverlay1\", customOverlay);\r\n\r\n    //console.log(\"customOverlayList\", customOverlayList);\r\n    setCustomOverlay(customOverlay.concat(customOverlayList));\r\n    //console.log(\"customOverlay2\", customOverlay);\r\n\r\n    if (customOverlay.length !== 0) {\r\n      for (let j = 0; j < customOverlay.length; j++) {\r\n        customOverlay[j].setMap(null);\r\n      }\r\n    }\r\n    // 지도 범위 재생성\r\n\r\n    for (let i = 0; i < points.length; i++) {\r\n      console.log(\"======clickLine======\");\r\n      console.log(\"path : \" + points[i]);\r\n      console.log(\"clickLine : \", clickLine);\r\n      // LatLngBounds 객체에 좌표를 추가합니다\r\n\r\n      //  var distance = Math.round(clickLine.getLength());\r\n      // displayCircleDot(clickPosition, distance);\r\n\r\n      customOverlayList[i].setMap(kakaoMap);\r\n\r\n      bounds.extend(points[i]);\r\n    }\r\n\r\n    let totlaY = 0;\r\n    placeList.map((item, index) => (totlaY += parseFloat(item.place_y)));\r\n    console.log(\"totlaY : \", totlaY);\r\n    let totlaX = 0;\r\n    placeList.map((item, index) => (totlaX += parseFloat(item.place_x)));\r\n    console.log(\"totlaX : \", totlaX);\r\n    const coords = new kakao.maps.LatLng(\r\n      totlaY / placeList.length,\r\n      totlaX / placeList.length\r\n    );\r\n\r\n    console.log(\"bounds : \", bounds);\r\n\r\n    console.log(\"coords : \", coords);\r\n    console.log(\"kakaoMap : \", kakaoMap);\r\n    kakaoMap && kakaoMap.setCenter(coords);\r\n    kakaoMap && kakaoMap.setBounds(bounds);\r\n\r\n    return () => {\r\n      console.log(\"=======dot========\");\r\n      console.log(dots);\r\n      console.log(\"=======points========\");\r\n      console.log(points);\r\n      setBounds(new kakao.maps.LatLngBounds());\r\n      for (let i = 0; i < dots.length; i++) {\r\n        if (dots[i].circle) {\r\n          dots[i].circle.setMap(null);\r\n        }\r\n\r\n        if (dots[i].distance) {\r\n          dots[i].distance.setMap(null);\r\n        }\r\n      }\r\n\r\n      dots = [];\r\n      clickLine && clickLine.setMap(null);\r\n\r\n      clickLine && (clickLine = null);\r\n    };\r\n  }, [shareInfo, nthDay, kakaoMap]);\r\n\r\n  return (\r\n    <div\r\n      id=\"bestShareMapPlace\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"300px\",\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\nfunction displayCircleDot(map, position, distance, dots) {\r\n  // 클릭 지점을 표시할 빨간 동그라미 커스텀오버레이를 생성합니다\r\n  var circleOverlay = new kakao.maps.CustomOverlay({\r\n    content: '<span class=\"dot\"></span>',\r\n    position: position,\r\n    zIndex: 1,\r\n  });\r\n\r\n  // 지도에 표시합니다\r\n  circleOverlay.setMap(map);\r\n\r\n  if (distance > 0) {\r\n    // 클릭한 지점까지의 그려진 선의 총 거리를 표시할 커스텀 오버레이를 생성합니다\r\n    var distanceOverlay = new kakao.maps.CustomOverlay({\r\n      content:\r\n        '<div class=\"dotOverlay\">거리 <span class=\"number\">' +\r\n        distance +\r\n        \"</span>m</div>\",\r\n      position: position,\r\n      yAnchor: 1.5,\r\n      zIndex: 2,\r\n    });\r\n\r\n    // 지도에 표시합니다\r\n    distanceOverlay.setMap(map);\r\n  }\r\n\r\n  // 배열에 추가합니다\r\n  dots.push({ circle: circleOverlay, distance: distanceOverlay });\r\n}\r\n\r\nexport default BestShareKaKao;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestShareCollectPlaces.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\travel\\bestTravelHouseList.js",["751","752"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Input, Badge } from \"reactstrap\";\r\n\r\nimport Axios from \"axios\";\r\nimport \"./bestSharePlanList.scss\";\r\nimport { useAppContext } from \"store\";\r\n\r\nconst BestTravelHouseList = () => {\r\n  const [bestHouseType, setBestHouseType] = useState(false);\r\n  const [shareList, setShareList] = useState([]);\r\n  const [scoreList, setScoreList] = useState([]);\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/houses/best-house/0`, // 0 좋아요 순\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setShareList(response.data);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n\r\n  const searchHouseCountClick = () => {\r\n    // 날짜 갯수\r\n\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/houses/best-house/0`,\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setShareList(response.data);\r\n        setBestHouseType(false);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const searchHouseAverageClick = () => {\r\n    // 날짜 갯수\r\n\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/houses/best-house/1`,\r\n          config\r\n        );\r\n        console.log(\"메인 여행 리스트11\");\r\n        console.log(response);\r\n        setShareList(response.data.houseList);\r\n        setScoreList(response.data.score);\r\n        setBestHouseType(true);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"shareInputs\">\r\n        <div>\r\n          <h3>\r\n            <Badge>Best 숙소 5</Badge>\r\n          </h3>\r\n        </div>\r\n        <div>\r\n          <Button onClick={searchHouseCountClick}>좋아요 순</Button>\r\n        </div>\r\n\r\n        <div>\r\n          <Button onClick={searchHouseAverageClick}>평점 순</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"bestHouseListBody\">\r\n        {bestHouseType\r\n          ? shareList.map((i, idx) => (\r\n              <div key={i.pk} className=\"houseCotainer\">\r\n                <div className=\"houseTitle\">{i.houseName}</div>\r\n                <img\r\n                  alt=\"이미지\"\r\n                  width=\"100%\"\r\n                  height=\"150px\"\r\n                  src={`http://localhost:8000${i.mainImage}`}\r\n                />\r\n                <div className=\"houseAddress\">{i.houseAddress}</div>\r\n                <div className=\"score\">\r\n                  <Button color=\"primary\" outline>\r\n                    평점{\" \"}\r\n                    <Badge color=\"secondary\">\r\n                      {String(scoreList[idx]).substr(0, 3)}\r\n                    </Badge>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          : shareList.map((i, idx) => (\r\n              <div key={i.pk} className=\"houseCotainer\">\r\n                <div className=\"houseTitle\">{i.houseName}</div>\r\n                <img\r\n                  alt=\"이미지\"\r\n                  width=\"100%\"\r\n                  height=\"150px\"\r\n                  src={`http://localhost:8000${i.mainImage}`}\r\n                />\r\n                <div className=\"houseAddress\">{i.houseAddress}</div>\r\n                <div className=\"score\">\r\n                  <Button color=\"primary\" outline>\r\n                    좋아요 <Badge color=\"secondary\">{i.like}</Badge>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BestTravelHouseList;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\friend\\friendInfo.js",["753","754","755","756"],"import React from \"react\";\r\nimport {\r\n  CardImg,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nconst FriendInfo = ({ friendInfo }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img\r\n          className=\"myImgCardEdit \"\r\n          src={`http://localhost:8000${friendInfo.profile.avatar}` || \"\"}\r\n          alt=\"Card cap\"\r\n        />\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <form>\r\n        <FormGroup row>\r\n          <Label for=\"Name\" sm={2}>\r\n            Name\r\n          </Label>\r\n          <Col sm={9}>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={friendInfo.name || \"\"}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Label for=\"Phone\" sm={2}>\r\n            Phone\r\n          </Label>\r\n          <Col sm={9}>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"phone_number\"\r\n              id=\"phone_number\"\r\n              placeholder=\"('-')제외한 숫자 11자리\"\r\n              value={friendInfo.phone_number || \"\"}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label for=\"Phone\" sm={2}>\r\n            email\r\n          </Label>\r\n          <Col sm={9}>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"phone_number\"\r\n              id=\"phone_number\"\r\n              placeholder=\"('-')제외한 숫자 11자리\"\r\n              value={friendInfo.email || \"\"}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label for=\"Phone\" sm={2}>\r\n            gender\r\n          </Label>\r\n          <Col sm={9}>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"phone_number\"\r\n              id=\"phone_number\"\r\n              value={friendInfo.gender || \"\"}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label for=\"Introduce\" sm={2}>\r\n            Introduce\r\n          </Label>\r\n          <Col sm={9}>\r\n            <Input\r\n              type=\"textarea\"\r\n              name=\"introduce\"\r\n              id=\"introduce\"\r\n              value={friendInfo.profile.introduce || \"\"}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendInfo;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminMainNotice.js",["757","758","759","760","761","762","763","764"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport \"./adminManage.scss\";\r\n\r\nimport AdminNoticeItem from \"./adminNoticeItem\";\r\nimport AdminQnaItem from \"./adminQnaItem\";\r\nconst AdminMainNotice = () => {\r\n  const { store } = useAppContext();\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  //false 여행 // true 숙소\r\n  const [myPostType, setMyPostType] = useState(false);\r\n  const [choiceId, setChoiceId] = useState(0);\r\n  const [houseList, setHouseList] = useState([]);\r\n  const [planList, setPlanList] = useState([]);\r\n\r\n  // 질문 글\r\n  const [qna, setQna] = useState([]);\r\n  // 공지 글\r\n  const [notice, setNotice] = useState([]);\r\n\r\n  //모달 (질문)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  // 질문\r\n  const [qnAContent, setQnAContent] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    public: false,\r\n  });\r\n  // 질문 글 작성\r\n  const qnaWrite = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"public\") {\r\n      setQnAContent((prev) => ({\r\n        ...prev,\r\n        [name]: !qnAContent[\"public\"],\r\n      }));\r\n    } else {\r\n      setQnAContent((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const myPost = () => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let type = !myPostType ? \"0\" : \"1\";\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/gabomAdmin/qantype/${type}`,\r\n          config\r\n        );\r\n\r\n        setQna(response.data);\r\n        setMyPostType(!myPostType);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  const showNoticeModal = () => {\r\n    setModal(!modal);\r\n  };\r\n  //\r\n  useEffect(() => {\r\n    async function fn() {\r\n      try {\r\n        // 전송\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/gabomAdmin/noticeAndQna/`,\r\n          config\r\n        );\r\n\r\n        setNotice(response.data.notice);\r\n        setQna(response.data.qna);\r\n      } catch (error) {\r\n        alert(\"플랜불러오기 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  }, []);\r\n\r\n  // 질문사항 글 작성 완료\r\n  const QnaSave = () => {\r\n    console.log(qnAContent);\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/gabomAdmin/qna/0`,\r\n          { content: qnAContent },\r\n          config\r\n        );\r\n        console.log(response);\r\n        setQna(qna.concat([response.data]));\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"adminMain\">\r\n        <div className=\"adminMainContainer adminBottom\">\r\n          <div className=\"adminBoard\">\r\n            <div className=\"memberInPlan\">\r\n              <Nav tabs>\r\n                <NavItem className=\"adminTitle \">\r\n                  <NavLink> 공지사항 </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n            <div className=\"adminContent\">\r\n              {notice.map((item, idx) => (\r\n                <AdminNoticeItem\r\n                  type=\"0\"\r\n                  idx={idx}\r\n                  key={item.id}\r\n                  notice={item}\r\n                  setNotice={setNotice}\r\n                  noticeList={notice}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"adminBoard\">\r\n            <div className=\"memberInPlan\">\r\n              <Nav tabs>\r\n                <NavItem className=\"adminTitle \">\r\n                  <NavLink>\r\n                    {\" \"}\r\n                    질문사항{\" \"}\r\n                    <BsPencilSquare\r\n                      className=\"writeBtn\"\r\n                      onClick={showNoticeModal}\r\n                    />{\" \"}\r\n                    <span className=\"adminMyPost\">\r\n                      내가 쓴 글만 보기{\" \"}\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        onChange={myPost}\r\n                        name=\"public\"\r\n                      ></input>\r\n                    </span>\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n            <div className=\"adminContent\">\r\n              {qna.map((item, idx) => (\r\n                <AdminQnaItem\r\n                  idx={idx}\r\n                  key={item.pk}\r\n                  qna={item}\r\n                  qnaList={qna}\r\n                  setQna={setQna}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* 모달 */}\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader toggle={toggle}>문의사항</ModalHeader>\r\n          <ModalBody>\r\n            <span className=\"noticeModalTitle\">제 목 : </span>\r\n            <input\r\n              required={true}\r\n              onChange={qnaWrite}\r\n              name=\"title\"\r\n              className=\"QnATitle\"\r\n            ></input>\r\n            <textarea\r\n              required={true}\r\n              className=\"noticeContent\"\r\n              name=\"content\"\r\n              onChange={qnaWrite}\r\n              placeholder=\"내용\"\r\n              cols=\"56\"\r\n              rows=\"10\"\r\n            ></textarea>\r\n            공개 여부(체크 시 비공개){\" \"}\r\n            <input type=\"checkbox\" onChange={qnaWrite} name=\"public\"></input>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={QnaSave}>\r\n              작성\r\n            </Button>{\" \"}\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              취소\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminMainNotice;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminNoticeItem.js",[],"C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminQnaItem.js",["765"],"import React, { useState, useEffect } from \"react\";\r\nimport { VscAccount, VscKey } from \"react-icons/vsc\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  Button,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport \"../house/qnaItem.scss\";\r\n\r\nimport AdminQnaReple from \"./adminQnaReple\";\r\n\r\nconst AdminQnaItem = ({ idx, qna, qnaList, setQna, houseId, type }) => {\r\n  const { store } = useAppContext();\r\n  console.log(\"===houseId : \", houseId);\r\n  console.log(\"===qna : \", qna);\r\n  console.log(\"===qnaList : \", qnaList);\r\n  console.log(\"===store : \", store);\r\n\r\n  // 오리진\r\n  const [originQnaContent, setOriginQnaContent] = useState({\r\n    title: qna.title,\r\n    content: qna.content,\r\n    public: qna.public,\r\n  });\r\n\r\n  const [qnaContent, setQnaContent] = useState({\r\n    title: qna.title,\r\n    content: qna.content,\r\n    public: qna.public,\r\n  });\r\n  const [repleList, setRepleList] = useState([]);\r\n\r\n  const [repleContent, setRepleContent] = useState(\"\");\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  const [repleActive, setRepleActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOriginQnaContent({\r\n      title: qna.title,\r\n      content: qna.content,\r\n      public: qna.public,\r\n    });\r\n\r\n    setQnaContent({\r\n      title: qna.title,\r\n      content: qna.content,\r\n      public: qna.public,\r\n    });\r\n  }, []);\r\n\r\n  const showQnaModal = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.get(\r\n          `http://localhost:8000/gabomAdmin/qna-reple/${qna.pk}`,\r\n\r\n          config\r\n        );\r\n        console.log(\"댓글 가져오기\");\r\n        console.log(response);\r\n        setRepleList(response.data);\r\n      } catch (error) {\r\n        alert(\"댓글 가져오기 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    // 작성자면\r\n    if (store.userName === qna.user.name) {\r\n      setModal(!modal);\r\n      fn();\r\n      // 작성자는 다르나 공개이면\r\n    } else if (store.userName !== qna.user.name && qna.public === false) {\r\n      setModal(!modal);\r\n      fn();\r\n\r\n      // 하우스 운영자\r\n    } else if (type === \"0\") {\r\n      setModal(!modal);\r\n      fn();\r\n\r\n      // 작성자는 다르나 비공개이면\r\n    } else if (store.userName !== qna.user.name && qna.public === true) {\r\n      alert(\"비공개 게시물 입니다.\");\r\n    }\r\n  };\r\n\r\n  const toggleInit = () => {\r\n    setQnaContent(originQnaContent);\r\n    toggle();\r\n  };\r\n  // 공지사항 글 작성\r\n  const qnaWrite = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"public\") {\r\n      setQnaContent((prev) => ({\r\n        ...prev,\r\n        [name]: !qnaContent[\"public\"],\r\n      }));\r\n    } else {\r\n      setQnaContent((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  //모달 (공지사항)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n    setRepleActive(false);\r\n  };\r\n  // 문의사항 업데이트\r\n  const qnaSave = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.put(\r\n          `http://localhost:8000/gabomAdmin/qna/${qna.pk}`,\r\n          { content: qnaContent, houseId: houseId },\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        setQna(response.data);\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 문의사항 삭제\r\n  const qnaDelete = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.delete(\r\n          `http://localhost:8000/gabomAdmin/qna/${qna.pk}`,\r\n\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        setQna(qnaList.filter((item) => item.pk !== qna.pk));\r\n        toggle();\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  // 대댓글\r\n  const writeReple = () => {\r\n    setRepleActive(!repleActive);\r\n  };\r\n  const repleChange = (e) => {\r\n    let value = e.target.value;\r\n    setRepleContent(value);\r\n  };\r\n  // 댓글 쓰기\r\n  const repleSave = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.post(\r\n          `http://localhost:8000/gabomAdmin/qna-reple/${qna.pk}`,\r\n          { content: repleContent, houseId: houseId },\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        setRepleList(repleList.concat(response.data));\r\n        setRepleContent(\"\");\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"qnaBoardDiv\" onClick={showQnaModal}>\r\n        <div className=\"qnaBoardDivOrderDiv\">\r\n          <h2>\r\n            <Badge color=\"secondary\" className=\"qnaBoardDivOrder\">\r\n              {\" \"}\r\n              {idx + 1}\r\n            </Badge>\r\n          </h2>\r\n        </div>\r\n        <div className=\"qnaBoardUserDiv\">\r\n          <div>\r\n            <img\r\n              alt={\"프로필\"}\r\n              width=\"50\"\r\n              height=\"50\"\r\n              src={`http://localhost:8000${qna.user.profile.avatar}`}\r\n            ></img>\r\n          </div>\r\n          <div>{qna.user.name}</div>\r\n        </div>\r\n        <div className=\"qnaBoardTitleDiv\">\r\n          <div className=\"qnaBoardTitle\">{qna.title}</div>\r\n        </div>\r\n        <div className=\"qnaBoardDateDiv\">\r\n          <div className=\"qnaBoardDate\">{qna.created_at.substr(0, 10)}</div>\r\n        </div>\r\n        <div className=\"qnaBoardImgDiv\">\r\n          {store.userName === qna.user.name && <VscAccount />}\r\n          {qna.public === true && <VscKey />}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 모달 */}\r\n      <div>\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n          <ModalHeader>문의사항</ModalHeader>\r\n          <ModalBody>\r\n            <span className=\"noticeModalTitle\">제 목 : </span>\r\n            {store.userName === qna.user.name ? (\r\n              <>\r\n                <input\r\n                  onChange={qnaWrite}\r\n                  name=\"title\"\r\n                  value={qnaContent[\"title\"]}\r\n                ></input>\r\n                <textarea\r\n                  className=\"noticeContent\"\r\n                  name=\"content\"\r\n                  onChange={qnaWrite}\r\n                  placeholder=\"공지할 글 작성\"\r\n                  defaultValue={qnaContent[\"content\"]}\r\n                  cols=\"56\"\r\n                  rows=\"10\"\r\n                ></textarea>\r\n                공개 여부(체크 시 비공개){\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={qnaWrite}\r\n                  name=\"public\"\r\n                  checked={qnaContent[\"public\"]}\r\n                ></input>\r\n                <hr />\r\n                <div\r\n                  className={\r\n                    \"repleModalDiv \" +\r\n                    (repleActive ? \"repleModalActive\" : \"notRepleModalActive\")\r\n                  }\r\n                >\r\n                  <div>\r\n                    <textarea\r\n                      onChange={repleChange}\r\n                      cols=\"50\"\r\n                      className=\"\"\r\n                      value={repleContent}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"repleModalBtn\"\r\n                      onClick={repleSave}\r\n                    >\r\n                      작성\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"repleDivContain\">\r\n                  {repleList.map((item, idx) => (\r\n                    <AdminQnaReple\r\n                      idx={idx}\r\n                      key={item.pk}\r\n                      info={item}\r\n                      repleList={repleList}\r\n                      setRepleList={setRepleList}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input name=\"title\" value={qna.title} readOnly={true}></input>\r\n                <textarea\r\n                  className=\"noticeContent\"\r\n                  name=\"content\"\r\n                  placeholder=\"공지할 글 작성\"\r\n                  cols=\"56\"\r\n                  rows=\"10\"\r\n                  defaultValue={qna.content}\r\n                  readOnly={true}\r\n                ></textarea>{\" \"}\r\n                <hr />\r\n                <div\r\n                  className={\r\n                    \"repleModalDiv \" +\r\n                    (repleActive ? \"repleModalActive\" : \"notRepleModalActive\")\r\n                  }\r\n                >\r\n                  <div>\r\n                    <textarea\r\n                      onChange={repleChange}\r\n                      cols=\"50\"\r\n                      className=\"\"\r\n                      defaultValue={repleContent}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"repleModalBtn\"\r\n                      onClick={repleSave}\r\n                    >\r\n                      작성\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"repleDivContain\">\r\n                  {repleList.map((item, idx) => (\r\n                    <AdminQnaReple\r\n                      type=\"0\"\r\n                      idx={idx}\r\n                      key={item.pk}\r\n                      info={item}\r\n                      repleList={repleList}\r\n                      setRepleList={setRepleList}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            {store.userName === qna.user.name ? (\r\n              <>\r\n                <Button color=\"primary\" onClick={qnaSave}>\r\n                  수정\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={qnaDelete}>\r\n                  삭제\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <Button color=\"secondary\" onClick={writeReple}>\r\n              댓글쓰기\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={toggleInit}>\r\n              취소\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default AdminQnaItem;\r\n","C:\\Users\\ha\\Desktop\\gabomm\\frontend\\src\\components\\main\\admin\\adminQnaReple.js",["766"],"import React, { useState } from \"react\";\r\nimport {\r\n  VscDiffModified,\r\n  VscDebugStart,\r\n  VscDebugStepBack,\r\n  VscDiffRemoved,\r\n} from \"react-icons/vsc\";\r\nimport Axios from \"axios\";\r\nimport { Tooltip } from \"reactstrap\";\r\nimport { useAppContext } from \"store\";\r\nimport \"../house/qnaReple.scss\";\r\nconst AdminQnaReple = ({ info, idx, repleList, setRepleList, type }) => {\r\n  const { store } = useAppContext();\r\n  const [modifyActive, setModifyActive] = useState(false);\r\n  const [repleContentOrigin, setRepleContentOrigin] = useState(info.content);\r\n  const [repleContentModi, setRepleContentModi] = useState(info.content);\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${store.jwtToken}`,\r\n    },\r\n  };\r\n\r\n  // 삭제\r\n  const [tooltipOpenRemo, setTooltipOpenRemo] = useState(false);\r\n\r\n  const toggleRemo = () => {\r\n    console.log(\"toggleRemo\");\r\n    setTooltipOpenRemo(!tooltipOpenRemo);\r\n  };\r\n\r\n  // 수정\r\n  const [tooltipOpenModi, setTooltipOpenModi] = useState(false);\r\n\r\n  const toggleModi = () => {\r\n    console.log(\"toggleModi\");\r\n    setTooltipOpenModi(!tooltipOpenModi);\r\n  };\r\n\r\n  // 돌아가기\r\n  const [tooltipOpenBack, setTooltipOpenBack] = useState(false);\r\n\r\n  const toggleBack = () => {\r\n    console.log(\"toggleBack\");\r\n    setTooltipOpenBack(!tooltipOpenBack);\r\n  };\r\n\r\n  // 수정완료\r\n  const [tooltipOpenStart, setTooltipOpenStart] = useState(false);\r\n\r\n  const toggleStart = () => {\r\n    console.log(\"toggleStart\");\r\n    setTooltipOpenStart(!tooltipOpenStart);\r\n  };\r\n\r\n  const onModifiReple = () => {\r\n    setModifyActive(true);\r\n  };\r\n\r\n  const onModifiCancelReple = () => {\r\n    setRepleContentModi(repleContentOrigin);\r\n    setModifyActive(false);\r\n  };\r\n\r\n  const onModifiActiveReple = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.put(\r\n          `http://localhost:8000/gabomAdmin/qna-reple/${info.pk}`,\r\n          { content: repleContentModi },\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        //setRepleList(response.data);\r\n\r\n        setModifyActive(false);\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  const onDeleteReple = () => {\r\n    async function fn() {\r\n      try {\r\n        let response = await Axios.delete(\r\n          `http://localhost:8000/gabomAdmin/qna-reple/${info.pk}`,\r\n\r\n          config\r\n        );\r\n        console.log(\"qwewqewqewqe\");\r\n        console.log(response);\r\n        console.log(repleList);\r\n        setRepleList(repleList.filter((item) => item.pk !== info.pk));\r\n      } catch (error) {\r\n        alert(\"공지사항 등록 실패\");\r\n        console.log(error);\r\n        if (error.response) {\r\n          console.log(error.response);\r\n        }\r\n      }\r\n    }\r\n\r\n    fn();\r\n  };\r\n\r\n  console.log(\"info : \", info);\r\n  return (\r\n    <div className=\"qnaRepleDiv\">\r\n      <div className=\"qnaRepleLeft\">\r\n        <div>\r\n          <img\r\n            alt={\"프로필\"}\r\n            width=\"50\"\r\n            height=\"50\"\r\n            src={\r\n              store.userName === info.user.name && type === \"0\"\r\n                ? \"http://localhost:8000/media/public/home.png\"\r\n                : `http://localhost:8000${info.user.profile.avatar}`\r\n            }\r\n          ></img>\r\n        </div>\r\n        <div>\r\n          {store.userName === info.user.name && type === \"0\"\r\n            ? \"집주인\"\r\n            : info.user.name}\r\n        </div>\r\n      </div>\r\n      <div className=\"qnaRepleRight\">\r\n        <div className=\"qnaRepleModalContent\">\r\n          <div>\r\n            {modifyActive ? (\r\n              <textarea\r\n                cols=\"45\"\r\n                rows=\"2\"\r\n                onChange={(e) => {\r\n                  setRepleContentModi(e.target.value);\r\n                }}\r\n                value={repleContentModi}\r\n              ></textarea>\r\n            ) : (\r\n              <textarea\r\n                readOnly={true}\r\n                cols=\"45\"\r\n                rows=\"2\"\r\n                value={repleContentModi}\r\n              ></textarea>\r\n            )}\r\n          </div>\r\n          {store.userName === info.user.name && (\r\n            <div>\r\n              <div className={modifyActive && \"repleActiveBtn\"}>\r\n                <VscDiffModified onClick={onModifiReple} id={\"modi\" + idx} />\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpenModi}\r\n                  target={\"modi\" + idx}\r\n                  toggle={toggleModi}\r\n                >\r\n                  수정\r\n                </Tooltip>\r\n                <br></br>\r\n                <VscDiffRemoved\r\n                  onClick={onDeleteReple}\r\n                  id={\"remo\" + idx}\r\n                />{\" \"}\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpenRemo}\r\n                  target={\"remo\" + idx}\r\n                  toggle={toggleRemo}\r\n                >\r\n                  삭제\r\n                </Tooltip>\r\n              </div>\r\n              <div className={!modifyActive && \"repleActiveBtn\"}>\r\n                <VscDebugStart\r\n                  onClick={onModifiActiveReple}\r\n                  id={\"start\" + idx}\r\n                />\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpenStart}\r\n                  target={\"start\" + idx}\r\n                  toggle={toggleStart}\r\n                >\r\n                  수정완료\r\n                </Tooltip>\r\n                <br></br>\r\n                <VscDebugStepBack\r\n                  onClick={onModifiCancelReple}\r\n                  id={\"back\" + idx}\r\n                />{\" \"}\r\n                <Tooltip\r\n                  placement=\"right\"\r\n                  isOpen={tooltipOpenBack}\r\n                  target={\"back\" + idx}\r\n                  toggle={toggleBack}\r\n                >\r\n                  돌아가기\r\n                </Tooltip>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"qnaRepleModalDate\">\r\n          {info.created_at.substr(0, 10) + \" \" + info.created_at.substr(11, 8)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminQnaReple;\r\n",{"ruleId":"767","replacedBy":"768"},{"ruleId":"769","replacedBy":"770"},{"ruleId":"771","severity":1,"message":"772","line":22,"column":28,"nodeType":"773","messageId":"774","endLine":22,"endColumn":37},{"ruleId":"771","severity":1,"message":"775","line":22,"column":39,"nodeType":"773","messageId":"774","endLine":22,"endColumn":51},{"ruleId":"771","severity":1,"message":"776","line":4,"column":3,"nodeType":"773","messageId":"774","endLine":4,"endColumn":9},{"ruleId":"771","severity":1,"message":"777","line":1,"column":38,"nodeType":"773","messageId":"774","endLine":1,"endColumn":44},{"ruleId":"771","severity":1,"message":"778","line":4,"column":3,"nodeType":"773","messageId":"774","endLine":4,"endColumn":11},{"ruleId":"771","severity":1,"message":"779","line":12,"column":26,"nodeType":"773","messageId":"774","endLine":12,"endColumn":40},{"ruleId":"771","severity":1,"message":"780","line":16,"column":10,"nodeType":"773","messageId":"774","endLine":16,"endColumn":17},{"ruleId":"771","severity":1,"message":"781","line":19,"column":10,"nodeType":"773","messageId":"774","endLine":19,"endColumn":14},{"ruleId":"771","severity":1,"message":"772","line":21,"column":28,"nodeType":"773","messageId":"774","endLine":21,"endColumn":37},{"ruleId":"771","severity":1,"message":"775","line":21,"column":39,"nodeType":"773","messageId":"774","endLine":21,"endColumn":51},{"ruleId":"771","severity":1,"message":"782","line":27,"column":10,"nodeType":"773","messageId":"774","endLine":27,"endColumn":20},{"ruleId":"771","severity":1,"message":"783","line":2,"column":17,"nodeType":"773","messageId":"774","endLine":2,"endColumn":23},{"ruleId":"771","severity":1,"message":"784","line":1,"column":27,"nodeType":"773","messageId":"774","endLine":1,"endColumn":38},{"ruleId":"771","severity":1,"message":"785","line":1,"column":40,"nodeType":"773","messageId":"774","endLine":1,"endColumn":49},{"ruleId":"771","severity":1,"message":"786","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":25},{"ruleId":"771","severity":1,"message":"787","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":15},{"ruleId":"771","severity":1,"message":"788","line":2,"column":17,"nodeType":"773","messageId":"774","endLine":2,"endColumn":23},{"ruleId":"789","severity":1,"message":"790","line":78,"column":6,"nodeType":"791","endLine":78,"endColumn":8,"suggestions":"792"},{"ruleId":"771","severity":1,"message":"783","line":3,"column":17,"nodeType":"773","messageId":"774","endLine":3,"endColumn":23},{"ruleId":"771","severity":1,"message":"793","line":7,"column":8,"nodeType":"773","messageId":"774","endLine":7,"endColumn":19},{"ruleId":"789","severity":1,"message":"794","line":24,"column":6,"nodeType":"791","endLine":24,"endColumn":8,"suggestions":"795"},{"ruleId":"789","severity":1,"message":"796","line":154,"column":6,"nodeType":"791","endLine":154,"endColumn":8,"suggestions":"797"},{"ruleId":"771","severity":1,"message":"786","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":25},{"ruleId":"771","severity":1,"message":"798","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":12},{"ruleId":"771","severity":1,"message":"799","line":9,"column":8,"nodeType":"773","messageId":"774","endLine":9,"endColumn":13},{"ruleId":"771","severity":1,"message":"800","line":3,"column":10,"nodeType":"773","messageId":"774","endLine":3,"endColumn":15},{"ruleId":"771","severity":1,"message":"781","line":3,"column":17,"nodeType":"773","messageId":"774","endLine":3,"endColumn":21},{"ruleId":"771","severity":1,"message":"801","line":14,"column":3,"nodeType":"773","messageId":"774","endLine":14,"endColumn":14},{"ruleId":"771","severity":1,"message":"802","line":16,"column":8,"nodeType":"773","messageId":"774","endLine":16,"endColumn":23},{"ruleId":"789","severity":1,"message":"794","line":37,"column":6,"nodeType":"791","endLine":37,"endColumn":8,"suggestions":"803"},{"ruleId":"771","severity":1,"message":"800","line":3,"column":10,"nodeType":"773","messageId":"774","endLine":3,"endColumn":15},{"ruleId":"771","severity":1,"message":"781","line":3,"column":17,"nodeType":"773","messageId":"774","endLine":3,"endColumn":21},{"ruleId":"771","severity":1,"message":"804","line":5,"column":7,"nodeType":"773","messageId":"774","endLine":5,"endColumn":14},{"ruleId":"771","severity":1,"message":"805","line":5,"column":8,"nodeType":"773","messageId":"774","endLine":5,"endColumn":24},{"ruleId":"771","severity":1,"message":"806","line":30,"column":8,"nodeType":"773","messageId":"774","endLine":30,"endColumn":23},{"ruleId":"789","severity":1,"message":"807","line":109,"column":6,"nodeType":"791","endLine":109,"endColumn":8,"suggestions":"808"},{"ruleId":"771","severity":1,"message":"809","line":266,"column":13,"nodeType":"773","messageId":"774","endLine":266,"endColumn":21},{"ruleId":"771","severity":1,"message":"810","line":3,"column":3,"nodeType":"773","messageId":"774","endLine":3,"endColumn":10},{"ruleId":"771","severity":1,"message":"811","line":6,"column":3,"nodeType":"773","messageId":"774","endLine":6,"endColumn":7},{"ruleId":"789","severity":1,"message":"812","line":38,"column":6,"nodeType":"791","endLine":38,"endColumn":8,"suggestions":"813"},{"ruleId":"771","severity":1,"message":"814","line":5,"column":3,"nodeType":"773","messageId":"774","endLine":5,"endColumn":8},{"ruleId":"771","severity":1,"message":"815","line":15,"column":8,"nodeType":"773","messageId":"774","endLine":15,"endColumn":18},{"ruleId":"789","severity":1,"message":"816","line":59,"column":6,"nodeType":"791","endLine":59,"endColumn":8,"suggestions":"817"},{"ruleId":"771","severity":1,"message":"788","line":4,"column":10,"nodeType":"773","messageId":"774","endLine":4,"endColumn":16},{"ruleId":"771","severity":1,"message":"818","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":13},{"ruleId":"771","severity":1,"message":"819","line":12,"column":8,"nodeType":"773","messageId":"774","endLine":12,"endColumn":22},{"ruleId":"771","severity":1,"message":"772","line":30,"column":18,"nodeType":"773","messageId":"774","endLine":30,"endColumn":27},{"ruleId":"771","severity":1,"message":"820","line":34,"column":9,"nodeType":"773","messageId":"774","endLine":34,"endColumn":15},{"ruleId":"771","severity":1,"message":"821","line":40,"column":9,"nodeType":"773","messageId":"774","endLine":40,"endColumn":23},{"ruleId":"771","severity":1,"message":"822","line":63,"column":10,"nodeType":"773","messageId":"774","endLine":63,"endColumn":20},{"ruleId":"789","severity":1,"message":"794","line":95,"column":6,"nodeType":"791","endLine":95,"endColumn":23,"suggestions":"823"},{"ruleId":"789","severity":1,"message":"824","line":44,"column":6,"nodeType":"791","endLine":44,"endColumn":8,"suggestions":"825"},{"ruleId":"771","severity":1,"message":"826","line":165,"column":13,"nodeType":"773","messageId":"774","endLine":165,"endColumn":24},{"ruleId":"771","severity":1,"message":"826","line":197,"column":13,"nodeType":"773","messageId":"774","endLine":197,"endColumn":24},{"ruleId":"771","severity":1,"message":"787","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":15},{"ruleId":"771","severity":1,"message":"827","line":4,"column":8,"nodeType":"773","messageId":"774","endLine":4,"endColumn":17},{"ruleId":"771","severity":1,"message":"828","line":19,"column":9,"nodeType":"773","messageId":"774","endLine":19,"endColumn":17},{"ruleId":"771","severity":1,"message":"829","line":21,"column":9,"nodeType":"773","messageId":"774","endLine":21,"endColumn":24},{"ruleId":"789","severity":1,"message":"830","line":135,"column":6,"nodeType":"791","endLine":135,"endColumn":49,"suggestions":"831"},{"ruleId":"789","severity":1,"message":"832","line":69,"column":6,"nodeType":"791","endLine":69,"endColumn":28,"suggestions":"833"},{"ruleId":"789","severity":1,"message":"834","line":100,"column":6,"nodeType":"791","endLine":100,"endColumn":8,"suggestions":"835"},{"ruleId":"771","severity":1,"message":"836","line":23,"column":10,"nodeType":"773","messageId":"774","endLine":23,"endColumn":18},{"ruleId":"771","severity":1,"message":"837","line":23,"column":20,"nodeType":"773","messageId":"774","endLine":23,"endColumn":31},{"ruleId":"789","severity":1,"message":"838","line":57,"column":6,"nodeType":"791","endLine":57,"endColumn":8,"suggestions":"839"},{"ruleId":"771","severity":1,"message":"788","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":16},{"ruleId":"771","severity":1,"message":"788","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":16},{"ruleId":"771","severity":1,"message":"788","line":3,"column":10,"nodeType":"773","messageId":"774","endLine":3,"endColumn":16},{"ruleId":"771","severity":1,"message":"787","line":3,"column":18,"nodeType":"773","messageId":"774","endLine":3,"endColumn":23},{"ruleId":"771","severity":1,"message":"818","line":4,"column":8,"nodeType":"773","messageId":"774","endLine":4,"endColumn":13},{"ruleId":"771","severity":1,"message":"820","line":9,"column":9,"nodeType":"773","messageId":"774","endLine":9,"endColumn":15},{"ruleId":"771","severity":1,"message":"840","line":9,"column":3,"nodeType":"773","messageId":"774","endLine":9,"endColumn":18},{"ruleId":"771","severity":1,"message":"841","line":16,"column":3,"nodeType":"773","messageId":"774","endLine":16,"endColumn":23},{"ruleId":"771","severity":1,"message":"814","line":24,"column":3,"nodeType":"773","messageId":"774","endLine":24,"endColumn":8},{"ruleId":"771","severity":1,"message":"842","line":25,"column":3,"nodeType":"773","messageId":"774","endLine":25,"endColumn":13},{"ruleId":"771","severity":1,"message":"843","line":26,"column":3,"nodeType":"773","messageId":"774","endLine":26,"endColumn":10},{"ruleId":"771","severity":1,"message":"844","line":27,"column":3,"nodeType":"773","messageId":"774","endLine":27,"endColumn":6},{"ruleId":"771","severity":1,"message":"845","line":28,"column":3,"nodeType":"773","messageId":"774","endLine":28,"endColumn":10},{"ruleId":"771","severity":1,"message":"846","line":29,"column":3,"nodeType":"773","messageId":"774","endLine":29,"endColumn":10},{"ruleId":"771","severity":1,"message":"847","line":132,"column":9,"nodeType":"773","messageId":"774","endLine":132,"endColumn":16},{"ruleId":"789","severity":1,"message":"848","line":188,"column":6,"nodeType":"791","endLine":188,"endColumn":8,"suggestions":"849"},{"ruleId":"789","severity":1,"message":"850","line":58,"column":6,"nodeType":"791","endLine":58,"endColumn":8,"suggestions":"851"},{"ruleId":"771","severity":1,"message":"852","line":15,"column":30,"nodeType":"773","messageId":"774","endLine":15,"endColumn":51},{"ruleId":"771","severity":1,"message":"787","line":3,"column":3,"nodeType":"773","messageId":"774","endLine":3,"endColumn":8},{"ruleId":"771","severity":1,"message":"853","line":9,"column":3,"nodeType":"773","messageId":"774","endLine":9,"endColumn":10},{"ruleId":"771","severity":1,"message":"854","line":10,"column":3,"nodeType":"773","messageId":"774","endLine":10,"endColumn":12},{"ruleId":"771","severity":1,"message":"804","line":32,"column":9,"nodeType":"773","messageId":"774","endLine":32,"endColumn":16},{"ruleId":"771","severity":1,"message":"855","line":47,"column":9,"nodeType":"773","messageId":"774","endLine":47,"endColumn":17},{"ruleId":"789","severity":1,"message":"856","line":60,"column":6,"nodeType":"791","endLine":60,"endColumn":23,"suggestions":"857"},{"ruleId":"771","severity":1,"message":"787","line":3,"column":3,"nodeType":"773","messageId":"774","endLine":3,"endColumn":8},{"ruleId":"771","severity":1,"message":"853","line":9,"column":3,"nodeType":"773","messageId":"774","endLine":9,"endColumn":10},{"ruleId":"771","severity":1,"message":"854","line":10,"column":3,"nodeType":"773","messageId":"774","endLine":10,"endColumn":12},{"ruleId":"771","severity":1,"message":"858","line":13,"column":8,"nodeType":"773","messageId":"774","endLine":13,"endColumn":18},{"ruleId":"771","severity":1,"message":"818","line":14,"column":8,"nodeType":"773","messageId":"774","endLine":14,"endColumn":13},{"ruleId":"771","severity":1,"message":"859","line":15,"column":10,"nodeType":"773","messageId":"774","endLine":15,"endColumn":23},{"ruleId":"771","severity":1,"message":"860","line":17,"column":10,"nodeType":"773","messageId":"774","endLine":17,"endColumn":20},{"ruleId":"771","severity":1,"message":"788","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":16},{"ruleId":"771","severity":1,"message":"844","line":2,"column":18,"nodeType":"773","messageId":"774","endLine":2,"endColumn":21},{"ruleId":"771","severity":1,"message":"845","line":2,"column":23,"nodeType":"773","messageId":"774","endLine":2,"endColumn":30},{"ruleId":"771","severity":1,"message":"846","line":2,"column":32,"nodeType":"773","messageId":"774","endLine":2,"endColumn":39},{"ruleId":"771","severity":1,"message":"787","line":2,"column":41,"nodeType":"773","messageId":"774","endLine":2,"endColumn":46},{"ruleId":"771","severity":1,"message":"787","line":7,"column":3,"nodeType":"773","messageId":"774","endLine":7,"endColumn":8},{"ruleId":"771","severity":1,"message":"861","line":15,"column":8,"nodeType":"773","messageId":"774","endLine":15,"endColumn":24},{"ruleId":"789","severity":1,"message":"794","line":50,"column":6,"nodeType":"791","endLine":50,"endColumn":8,"suggestions":"862"},{"ruleId":"771","severity":1,"message":"780","line":5,"column":3,"nodeType":"773","messageId":"774","endLine":5,"endColumn":10},{"ruleId":"771","severity":1,"message":"783","line":2,"column":17,"nodeType":"773","messageId":"774","endLine":2,"endColumn":23},{"ruleId":"771","severity":1,"message":"804","line":6,"column":7,"nodeType":"773","messageId":"774","endLine":6,"endColumn":14},{"ruleId":"771","severity":1,"message":"787","line":7,"column":3,"nodeType":"773","messageId":"774","endLine":7,"endColumn":8},{"ruleId":"771","severity":1,"message":"863","line":22,"column":8,"nodeType":"773","messageId":"774","endLine":22,"endColumn":18},{"ruleId":"771","severity":1,"message":"864","line":23,"column":8,"nodeType":"773","messageId":"774","endLine":23,"endColumn":15},{"ruleId":"789","severity":1,"message":"794","line":87,"column":6,"nodeType":"791","endLine":87,"endColumn":8,"suggestions":"865"},{"ruleId":"771","severity":1,"message":"786","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":25},{"ruleId":"771","severity":1,"message":"844","line":4,"column":3,"nodeType":"773","messageId":"774","endLine":4,"endColumn":6},{"ruleId":"771","severity":1,"message":"845","line":5,"column":3,"nodeType":"773","messageId":"774","endLine":5,"endColumn":10},{"ruleId":"771","severity":1,"message":"846","line":6,"column":3,"nodeType":"773","messageId":"774","endLine":6,"endColumn":10},{"ruleId":"771","severity":1,"message":"787","line":7,"column":3,"nodeType":"773","messageId":"774","endLine":7,"endColumn":8},{"ruleId":"771","severity":1,"message":"866","line":8,"column":3,"nodeType":"773","messageId":"774","endLine":8,"endColumn":8},{"ruleId":"771","severity":1,"message":"867","line":9,"column":3,"nodeType":"773","messageId":"774","endLine":9,"endColumn":14},{"ruleId":"771","severity":1,"message":"868","line":10,"column":3,"nodeType":"773","messageId":"774","endLine":10,"endColumn":12},{"ruleId":"771","severity":1,"message":"801","line":11,"column":3,"nodeType":"773","messageId":"774","endLine":11,"endColumn":14},{"ruleId":"789","severity":1,"message":"869","line":55,"column":6,"nodeType":"791","endLine":55,"endColumn":8,"suggestions":"870"},{"ruleId":"771","severity":1,"message":"859","line":5,"column":10,"nodeType":"773","messageId":"774","endLine":5,"endColumn":23},{"ruleId":"771","severity":1,"message":"818","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":13},{"ruleId":"789","severity":1,"message":"794","line":127,"column":6,"nodeType":"791","endLine":127,"endColumn":16,"suggestions":"871"},{"ruleId":"771","severity":1,"message":"818","line":2,"column":8,"nodeType":"773","messageId":"774","endLine":2,"endColumn":13},{"ruleId":"771","severity":1,"message":"872","line":4,"column":8,"nodeType":"773","messageId":"774","endLine":4,"endColumn":21},{"ruleId":"771","severity":1,"message":"873","line":5,"column":8,"nodeType":"773","messageId":"774","endLine":5,"endColumn":20},{"ruleId":"771","severity":1,"message":"820","line":18,"column":9,"nodeType":"773","messageId":"774","endLine":18,"endColumn":15},{"ruleId":"771","severity":1,"message":"874","line":34,"column":9,"nodeType":"773","messageId":"774","endLine":34,"endColumn":15},{"ruleId":"771","severity":1,"message":"875","line":40,"column":9,"nodeType":"773","messageId":"774","endLine":40,"endColumn":20},{"ruleId":"771","severity":1,"message":"876","line":45,"column":9,"nodeType":"773","messageId":"774","endLine":45,"endColumn":25},{"ruleId":"771","severity":1,"message":"828","line":17,"column":9,"nodeType":"773","messageId":"774","endLine":17,"endColumn":17},{"ruleId":"771","severity":1,"message":"829","line":19,"column":9,"nodeType":"773","messageId":"774","endLine":19,"endColumn":24},{"ruleId":"789","severity":1,"message":"877","line":132,"column":6,"nodeType":"791","endLine":132,"endColumn":30,"suggestions":"878"},{"ruleId":"771","severity":1,"message":"879","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":21},{"ruleId":"771","severity":1,"message":"818","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":13},{"ruleId":"771","severity":1,"message":"820","line":20,"column":9,"nodeType":"773","messageId":"774","endLine":20,"endColumn":15},{"ruleId":"771","severity":1,"message":"880","line":2,"column":8,"nodeType":"773","messageId":"774","endLine":2,"endColumn":24},{"ruleId":"771","severity":1,"message":"786","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":25},{"ruleId":"771","severity":1,"message":"881","line":5,"column":3,"nodeType":"773","messageId":"774","endLine":5,"endColumn":20},{"ruleId":"771","severity":1,"message":"882","line":6,"column":3,"nodeType":"773","messageId":"774","endLine":6,"endColumn":22},{"ruleId":"771","severity":1,"message":"883","line":7,"column":3,"nodeType":"773","messageId":"774","endLine":7,"endColumn":13},{"ruleId":"771","severity":1,"message":"884","line":8,"column":3,"nodeType":"773","messageId":"774","endLine":8,"endColumn":16},{"ruleId":"771","severity":1,"message":"885","line":10,"column":8,"nodeType":"773","messageId":"774","endLine":10,"endColumn":15},{"ruleId":"771","severity":1,"message":"844","line":4,"column":3,"nodeType":"773","messageId":"774","endLine":4,"endColumn":6},{"ruleId":"771","severity":1,"message":"845","line":5,"column":3,"nodeType":"773","messageId":"774","endLine":5,"endColumn":10},{"ruleId":"771","severity":1,"message":"846","line":6,"column":3,"nodeType":"773","messageId":"774","endLine":6,"endColumn":10},{"ruleId":"771","severity":1,"message":"787","line":7,"column":3,"nodeType":"773","messageId":"774","endLine":7,"endColumn":8},{"ruleId":"771","severity":1,"message":"886","line":15,"column":8,"nodeType":"773","messageId":"774","endLine":15,"endColumn":25},{"ruleId":"789","severity":1,"message":"794","line":136,"column":6,"nodeType":"791","endLine":136,"endColumn":16,"suggestions":"887"},{"ruleId":"771","severity":1,"message":"818","line":2,"column":8,"nodeType":"773","messageId":"774","endLine":2,"endColumn":13},{"ruleId":"771","severity":1,"message":"788","line":11,"column":3,"nodeType":"773","messageId":"774","endLine":11,"endColumn":9},{"ruleId":"771","severity":1,"message":"866","line":12,"column":3,"nodeType":"773","messageId":"774","endLine":12,"endColumn":8},{"ruleId":"771","severity":1,"message":"867","line":13,"column":3,"nodeType":"773","messageId":"774","endLine":13,"endColumn":14},{"ruleId":"771","severity":1,"message":"868","line":14,"column":3,"nodeType":"773","messageId":"774","endLine":14,"endColumn":12},{"ruleId":"771","severity":1,"message":"801","line":15,"column":3,"nodeType":"773","messageId":"774","endLine":15,"endColumn":14},{"ruleId":"771","severity":1,"message":"820","line":30,"column":9,"nodeType":"773","messageId":"774","endLine":30,"endColumn":15},{"ruleId":"771","severity":1,"message":"888","line":82,"column":9,"nodeType":"773","messageId":"774","endLine":82,"endColumn":18},{"ruleId":"771","severity":1,"message":"786","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":25},{"ruleId":"789","severity":1,"message":"796","line":115,"column":6,"nodeType":"791","endLine":115,"endColumn":8,"suggestions":"889"},{"ruleId":"771","severity":1,"message":"787","line":7,"column":3,"nodeType":"773","messageId":"774","endLine":7,"endColumn":8},{"ruleId":"789","severity":1,"message":"794","line":54,"column":6,"nodeType":"791","endLine":54,"endColumn":8,"suggestions":"890"},{"ruleId":"771","severity":1,"message":"785","line":1,"column":27,"nodeType":"773","messageId":"774","endLine":1,"endColumn":36},{"ruleId":"771","severity":1,"message":"861","line":13,"column":8,"nodeType":"773","messageId":"774","endLine":13,"endColumn":24},{"ruleId":"771","severity":1,"message":"818","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":13},{"ruleId":"771","severity":1,"message":"820","line":17,"column":9,"nodeType":"773","messageId":"774","endLine":17,"endColumn":15},{"ruleId":"771","severity":1,"message":"788","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":16},{"ruleId":"789","severity":1,"message":"794","line":42,"column":6,"nodeType":"791","endLine":42,"endColumn":19,"suggestions":"891"},{"ruleId":"771","severity":1,"message":"818","line":2,"column":8,"nodeType":"773","messageId":"774","endLine":2,"endColumn":13},{"ruleId":"771","severity":1,"message":"892","line":10,"column":11,"nodeType":"773","messageId":"774","endLine":10,"endColumn":16},{"ruleId":"771","severity":1,"message":"828","line":15,"column":9,"nodeType":"773","messageId":"774","endLine":15,"endColumn":17},{"ruleId":"771","severity":1,"message":"829","line":17,"column":9,"nodeType":"773","messageId":"774","endLine":17,"endColumn":24},{"ruleId":"789","severity":1,"message":"830","line":133,"column":6,"nodeType":"791","endLine":133,"endColumn":35,"suggestions":"893"},{"ruleId":"771","severity":1,"message":"894","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":26},{"ruleId":"771","severity":1,"message":"786","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":25},{"ruleId":"771","severity":1,"message":"788","line":3,"column":3,"nodeType":"773","messageId":"774","endLine":3,"endColumn":9},{"ruleId":"771","severity":1,"message":"814","line":4,"column":3,"nodeType":"773","messageId":"774","endLine":4,"endColumn":8},{"ruleId":"771","severity":1,"message":"866","line":5,"column":3,"nodeType":"773","messageId":"774","endLine":5,"endColumn":8},{"ruleId":"771","severity":1,"message":"867","line":6,"column":3,"nodeType":"773","messageId":"774","endLine":6,"endColumn":14},{"ruleId":"771","severity":1,"message":"868","line":7,"column":3,"nodeType":"773","messageId":"774","endLine":7,"endColumn":12},{"ruleId":"771","severity":1,"message":"801","line":8,"column":3,"nodeType":"773","messageId":"774","endLine":8,"endColumn":14},{"ruleId":"771","severity":1,"message":"785","line":1,"column":27,"nodeType":"773","messageId":"774","endLine":1,"endColumn":36},{"ruleId":"771","severity":1,"message":"895","line":3,"column":18,"nodeType":"773","messageId":"774","endLine":3,"endColumn":22},{"ruleId":"771","severity":1,"message":"896","line":3,"column":34,"nodeType":"773","messageId":"774","endLine":3,"endColumn":42},{"ruleId":"771","severity":1,"message":"897","line":3,"column":44,"nodeType":"773","messageId":"774","endLine":3,"endColumn":53},{"ruleId":"771","severity":1,"message":"898","line":4,"column":10,"nodeType":"773","messageId":"774","endLine":4,"endColumn":13},{"ruleId":"771","severity":1,"message":"899","line":4,"column":15,"nodeType":"773","messageId":"774","endLine":4,"endColumn":18},{"ruleId":"771","severity":1,"message":"777","line":1,"column":27,"nodeType":"773","messageId":"774","endLine":1,"endColumn":33},{"ruleId":"771","severity":1,"message":"785","line":1,"column":35,"nodeType":"773","messageId":"774","endLine":1,"endColumn":44},{"ruleId":"771","severity":1,"message":"810","line":3,"column":3,"nodeType":"773","messageId":"774","endLine":3,"endColumn":10},{"ruleId":"771","severity":1,"message":"811","line":6,"column":3,"nodeType":"773","messageId":"774","endLine":6,"endColumn":7},{"ruleId":"771","severity":1,"message":"780","line":10,"column":3,"nodeType":"773","messageId":"774","endLine":10,"endColumn":10},{"ruleId":"771","severity":1,"message":"814","line":2,"column":18,"nodeType":"773","messageId":"774","endLine":2,"endColumn":23},{"ruleId":"771","severity":1,"message":"900","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":21},{"ruleId":"771","severity":1,"message":"901","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":21},{"ruleId":"771","severity":1,"message":"902","line":14,"column":10,"nodeType":"773","messageId":"774","endLine":14,"endColumn":19},{"ruleId":"771","severity":1,"message":"903","line":15,"column":10,"nodeType":"773","messageId":"774","endLine":15,"endColumn":18},{"ruleId":"771","severity":1,"message":"904","line":16,"column":10,"nodeType":"773","messageId":"774","endLine":16,"endColumn":18},{"ruleId":"789","severity":1,"message":"794","line":45,"column":6,"nodeType":"791","endLine":45,"endColumn":8,"suggestions":"905"},{"ruleId":"771","severity":1,"message":"818","line":7,"column":8,"nodeType":"773","messageId":"774","endLine":7,"endColumn":13},{"ruleId":"771","severity":1,"message":"820","line":19,"column":9,"nodeType":"773","messageId":"774","endLine":19,"endColumn":15},{"ruleId":"771","severity":1,"message":"818","line":6,"column":8,"nodeType":"773","messageId":"774","endLine":6,"endColumn":13},{"ruleId":"771","severity":1,"message":"820","line":17,"column":9,"nodeType":"773","messageId":"774","endLine":17,"endColumn":15},{"ruleId":"771","severity":1,"message":"788","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":16},{"ruleId":"771","severity":1,"message":"906","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":25},{"ruleId":"789","severity":1,"message":"794","line":43,"column":6,"nodeType":"791","endLine":43,"endColumn":19,"suggestions":"907"},{"ruleId":"771","severity":1,"message":"818","line":2,"column":8,"nodeType":"773","messageId":"774","endLine":2,"endColumn":13},{"ruleId":"771","severity":1,"message":"908","line":4,"column":8,"nodeType":"773","messageId":"774","endLine":4,"endColumn":18},{"ruleId":"771","severity":1,"message":"892","line":10,"column":11,"nodeType":"773","messageId":"774","endLine":10,"endColumn":16},{"ruleId":"771","severity":1,"message":"828","line":15,"column":9,"nodeType":"773","messageId":"774","endLine":15,"endColumn":17},{"ruleId":"771","severity":1,"message":"829","line":17,"column":9,"nodeType":"773","messageId":"774","endLine":17,"endColumn":24},{"ruleId":"789","severity":1,"message":"830","line":133,"column":6,"nodeType":"791","endLine":133,"endColumn":35,"suggestions":"909"},{"ruleId":"771","severity":1,"message":"814","line":2,"column":18,"nodeType":"773","messageId":"774","endLine":2,"endColumn":23},{"ruleId":"789","severity":1,"message":"794","line":40,"column":6,"nodeType":"791","endLine":40,"endColumn":8,"suggestions":"910"},{"ruleId":"771","severity":1,"message":"810","line":3,"column":3,"nodeType":"773","messageId":"774","endLine":3,"endColumn":10},{"ruleId":"771","severity":1,"message":"788","line":5,"column":3,"nodeType":"773","messageId":"774","endLine":5,"endColumn":9},{"ruleId":"771","severity":1,"message":"811","line":6,"column":3,"nodeType":"773","messageId":"774","endLine":6,"endColumn":7},{"ruleId":"771","severity":1,"message":"780","line":10,"column":3,"nodeType":"773","messageId":"774","endLine":10,"endColumn":10},{"ruleId":"771","severity":1,"message":"787","line":7,"column":3,"nodeType":"773","messageId":"774","endLine":7,"endColumn":8},{"ruleId":"771","severity":1,"message":"911","line":30,"column":10,"nodeType":"773","messageId":"774","endLine":30,"endColumn":18},{"ruleId":"771","severity":1,"message":"912","line":30,"column":20,"nodeType":"773","messageId":"774","endLine":30,"endColumn":31},{"ruleId":"771","severity":1,"message":"913","line":31,"column":10,"nodeType":"773","messageId":"774","endLine":31,"endColumn":19},{"ruleId":"771","severity":1,"message":"914","line":31,"column":21,"nodeType":"773","messageId":"774","endLine":31,"endColumn":33},{"ruleId":"771","severity":1,"message":"915","line":32,"column":10,"nodeType":"773","messageId":"774","endLine":32,"endColumn":18},{"ruleId":"771","severity":1,"message":"916","line":32,"column":20,"nodeType":"773","messageId":"774","endLine":32,"endColumn":31},{"ruleId":"789","severity":1,"message":"794","line":112,"column":6,"nodeType":"791","endLine":112,"endColumn":8,"suggestions":"917"},{"ruleId":"789","severity":1,"message":"850","line":59,"column":6,"nodeType":"791","endLine":59,"endColumn":8,"suggestions":"918"},{"ruleId":"771","severity":1,"message":"852","line":15,"column":30,"nodeType":"773","messageId":"774","endLine":15,"endColumn":51},"no-native-reassign",["919"],"no-negated-in-lhs",["920"],"no-unused-vars","'storeInfo' is assigned a value but never used.","Identifier","unusedVar","'dispatchInfo' is assigned a value but never used.","'Update' is defined but never used.","'useRef' is defined but never used.","'setToken' is defined but never used.","'setStorageItem' is defined but never used.","'Tooltip' is defined but never used.","'Link' is defined but never used.","'socketMsgH' is assigned a value but never used.","'Switch' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'choiceMonth', 'config', 'housePk', and 'info'. Either include them or remove the dependency array. If 'setChoiceMonth' needs the current value of 'info', you can also switch to useReducer instead of useState and read 'info' in the reducer.","ArrayExpression",["921"],"'HouseUpdate' is defined but never used.","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["922"],"React Hook useEffect has missing dependencies: 'config' and 'match.params.pk'. Either include them or remove the dependency array.",["923"],"'Main' is defined but never used.","'First' is defined but never used.","'Route' is defined but never used.","'ModalFooter' is defined but never used.","'basicProfileImg' is defined but never used.",["924"],"'history' is assigned a value but never used.","'ShareShowDetatil' is defined but never used.","'ShareScoreModal' is defined but never used.","React Hook useEffect has missing dependencies: 'config' and 'makePlanList'. Either include them or remove the dependency array. You can also do a functional update 'setMakePlanList(m => ...)' if you only need 'makePlanList' in the 'setMakePlanList' call.",["925"],"'response' is assigned a value but never used.","'CardImg' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'myInfo.avatar', 'myInfo.introduce', 'myInfo.user.name', and 'myInfo.user.phone_number'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'myInfo.introduce', you can also switch to useReducer instead of useState and read 'myInfo.introduce' in the reducer.",["926"],"'Input' is defined but never used.","'StartScore' is defined but never used.","React Hook useEffect has missing dependencies: 'config', 'match.params.id', 'member', and 'noMember'. Either include them or remove the dependency array. You can also do a functional update 'setMember(m => ...)' if you only need 'member' in the 'setMember' call.",["927"],"'Axios' is defined but never used.","'MoveDetailPlan' is defined but never used.","'config' is assigned a value but never used.","'showPlaceCount' is assigned a value but never used.","'totalPlace' is assigned a value but never used.",["928"],"React Hook useEffect has missing dependencies: 'config', 'loading', and 'placeId'. Either include them or remove the dependency array. You can also do a functional update 'setLoading(l => ...)' if you only need 'loading' in the 'setLoading' call.",["929"],"'currentTurn' is assigned a value but never used.","'travelImg' is defined but never used.","'moveLine' is defined but never used.","'distanceOverlay' is defined but never used.","React Hook useEffect has missing dependencies: 'bounds' and 'customOverlay'. Either include them or remove the dependency array. You can also do a functional update 'setCustomOverlay(c => ...)' if you only need 'customOverlay' in the 'setCustomOverlay' call.",["930"],"React Hook useEffect has missing dependencies: 'chatCount' and 'room'. Either include them or remove the dependency array. If 'setChatSocket' needs the current value of 'room', you can also switch to useReducer instead of useState and read 'room' in the reducer.",["931"],"React Hook useEffect has missing dependencies: 'chatStep', 'chatting', 'config', and 'room'. Either include them or remove the dependency array. You can also do a functional update 'setChatStep(c => ...)' if you only need 'chatStep' in the 'setChatStep' call.",["932"],"'friendPk' is assigned a value but never used.","'setFriendPk' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appliedList', 'applyList', 'config', and 'myFriend'. Either include them or remove the dependency array. You can also do a functional update 'setApplyList(a => ...)' if you only need 'applyList' in the 'setApplyList' call.",["933"],"'CarouselCaption' is defined but never used.","'UncontrolledCollapse' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'urlType' is defined but never used.","React Hook useEffect has missing dependencies: 'config', 'location.state.search', and 'match.params.id'. Either include them or remove the dependency array.",["934"],"React Hook useEffect has missing dependencies: 'qna.content', 'qna.public', and 'qna.title'. Either include them or remove the dependency array. If 'setOriginQnaContent' needs the current value of 'qna.title', you can also switch to useReducer instead of useState and read 'qna.title' in the reducer.",["935"],"'setRepleContentOrigin' is assigned a value but never used.","'Spinner' is defined but never used.","'FormGroup' is defined but never used.","'calendar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'oEDate' and 'oSDate'. Either include them or remove the dependency array. If 'setSendData' needs the current value of 'oSDate', you can also switch to useReducer instead of useState and read 'oSDate' in the reducer.",["936"],"'DatePicker' is defined but never used.","'useAppContext' is defined but never used.","'useHistory' is defined but never used.","'TravelMyPlanList' is defined but never used.",["937"],"'NoticeItem' is defined but never used.","'QnaItem' is defined but never used.",["938"],"'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","React Hook useEffect has missing dependencies: 'config' and 'setPlanList'. Either include them or remove the dependency array. If 'setPlanList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["939"],["940"],"'KakaoMapPlace' is defined but never used.","'DetailPlaces' is defined but never used.","'toggle' is assigned a value but never used.","'houseToggle' is assigned a value but never used.","'dateChangeToggle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bounds', 'customOverlay', and 'kakaoMap'. Either include them or remove the dependency array. You can also do a functional update 'setCustomOverlay(c => ...)' if you only need 'customOverlay' in the 'setCustomOverlay' call.",["941"],"'CollectPlaces' is defined but never used.","'CollectPlaceItem' is defined but never used.","'BsFillCaretUpFill' is defined but never used.","'BsFillCaretDownFill' is defined but never used.","'BsCardText' is defined but never used.","'BsXSquareFill' is defined but never used.","'produce' is defined but never used.","'AdminTravelDetail' is defined but never used.",["942"],"'initHouse' is assigned a value but never used.",["943"],["944"],["945"],"'store' is assigned a value but never used.",["946"],"'ShareCollectPlaces' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'SharePlanList' is defined but never used.","'BestShareList' is defined but never used.","'rangeDate' is assigned a value but never used.","'areaCode' is assigned a value but never used.","'location' is assigned a value but never used.",["947"],"'ShareTravelDetail' is defined but never used.",["948"],"'ShareKaKao' is defined but never used.",["949"],["950"],"'choiceId' is assigned a value but never used.","'setChoiceId' is assigned a value but never used.","'houseList' is assigned a value but never used.","'setHouseList' is assigned a value but never used.","'planList' is assigned a value but never used.","'setPlanList' is assigned a value but never used.",["951"],["952"],"no-global-assign","no-unsafe-negation",{"desc":"953","fix":"954"},{"desc":"955","fix":"956"},{"desc":"957","fix":"958"},{"desc":"955","fix":"959"},{"desc":"960","fix":"961"},{"desc":"962","fix":"963"},{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"955","fix":"984"},{"desc":"955","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},{"desc":"988","fix":"992"},{"desc":"957","fix":"993"},{"desc":"955","fix":"994"},{"desc":"995","fix":"996"},{"desc":"997","fix":"998"},{"desc":"955","fix":"999"},{"desc":"995","fix":"1000"},{"desc":"997","fix":"1001"},{"desc":"955","fix":"1002"},{"desc":"955","fix":"1003"},{"desc":"980","fix":"1004"},"Update the dependencies array to be: [choiceMonth, config, housePk, info]",{"range":"1005","text":"1006"},"Update the dependencies array to be: [config]",{"range":"1007","text":"1008"},"Update the dependencies array to be: [config, match.params.pk]",{"range":"1009","text":"1010"},{"range":"1011","text":"1008"},"Update the dependencies array to be: [config, makePlanList]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [myInfo.avatar, myInfo.introduce, myInfo.user.name, myInfo.user.phone_number]",{"range":"1014","text":"1015"},"Update the dependencies array to be: [config, match.params.id, member, noMember]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [modal, areaCode, config]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [config, loading, placeId]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [detailPlanInfo, nthDay, loading, kakaoMap, customOverlay, bounds]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [chatCount, chatSocket, chatting, room]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [chatStep, chatting, config, room]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [appliedList, applyList, config, myFriend]",{"range":"1028","text":"1029"},"Update the dependencies array to be: [config, location.state.search, match.params.id]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [qna.content, qna.public, qna.title]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [dateChangeModal, oEDate, oSDate]",{"range":"1034","text":"1035"},{"range":"1036","text":"1008"},{"range":"1037","text":"1008"},"Update the dependencies array to be: [config, setPlanList]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [choiceId, config]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [bounds, customOverlay, detailPlanInfo, kakaoMap, nthDay]",{"range":"1042","text":"1043"},{"range":"1044","text":"1041"},{"range":"1045","text":"1010"},{"range":"1046","text":"1008"},"Update the dependencies array to be: [choiceShare, config]",{"range":"1047","text":"1048"},"Update the dependencies array to be: [shareInfo, nthDay, kakaoMap, customOverlay, bounds]",{"range":"1049","text":"1050"},{"range":"1051","text":"1008"},{"range":"1052","text":"1048"},{"range":"1053","text":"1050"},{"range":"1054","text":"1008"},{"range":"1055","text":"1008"},{"range":"1056","text":"1033"},[2552,2554],"[choiceMonth, config, housePk, info]",[787,789],"[config]",[4492,4494],"[config, match.params.pk]",[908,910],[2811,2813],"[config, makePlanList]",[1028,1030],"[myInfo.avatar, myInfo.introduce, myInfo.user.name, myInfo.user.phone_number]",[1757,1759],"[config, match.params.id, member, noMember]",[2244,2261],"[modal, areaCode, config]",[1064,1066],"[config, loading, placeId]",[4456,4499],"[detailPlanInfo, nthDay, loading, kakaoMap, customOverlay, bounds]",[2210,2232],"[chatCount, chatSocket, chatting, room]",[3138,3140],"[chatStep, chatting, config, room]",[1653,1655],"[appliedList, applyList, config, myFriend]",[5164,5166],"[config, location.state.search, match.params.id]",[1427,1429],"[qna.content, qna.public, qna.title]",[1478,1495],"[dateChangeModal, oEDate, oSDate]",[1249,1251],[2153,2155],[1221,1223],"[config, setPlanList]",[3280,3290],"[choiceId, config]",[4284,4308],"[bounds, customOverlay, detailPlanInfo, kakaoMap, nthDay]",[3287,3297],[4183,4185],[1356,1358],[1064,1077],"[choiceShare, config]",[4327,4356],"[shareInfo, nthDay, kakaoMap, customOverlay, bounds]",[1434,1436],[1132,1145],[4331,4360],[1071,1073],[2589,2591],[1451,1453]]